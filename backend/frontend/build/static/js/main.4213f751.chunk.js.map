{"version":3,"sources":["assets/img/header_dimop.svg","assets/img/norman_pytel.jpg","assets/img/Universität_Würzburg_Logo.svg","assets/img/skz_logo.png","assets/img/stami.png","assets/img/forcycle2.png","assets/img/solution.jpg","APIContext.jsx","helpers/handle-response.jsx","services/authenticationService.jsx","components/PrivateRoute/PrivateRoute.jsx","contexts/UserContext.jsx","helpers/history.jsx","serviceWorker.js","views/Construction/ConstructionContext.jsx","variables/colors.jsx","components/NavBar/NavBar.jsx","components/DataTable/DataTable.jsx","views/Construction/ConstructionLoad.jsx","views/Construction/Construction.jsx","views/Construction/ConstructionWrapper.jsx","components/Ansprechpartner/Ansprechpartner.jsx","components/PartnerLogos/PartnerLogos.jsx","views/Main/MainContext.jsx","components/Search/Search.jsx","components/Search/SearchDialog.jsx","components/Spacers/TriangleSpacer.jsx","views/Home/Home.jsx","views/Login/Login.jsx","views/Main/EvaluationDialog.jsx","views/Main/AddBomDialog.jsx","views/Main/MaterialFertTable.jsx","views/Main/MaterialFertNew.jsx","views/Main/AddComponentTabs.jsx","views/Main/AddMaterialDialog.jsx","views/Main/AddPlastToMat.jsx","views/Main/DeleteMaterialDialog.jsx","views/Main/CsvUploadDialog.jsx","views/Main/TableTree.jsx","views/Main/AddConstructionDialog.jsx","views/Main/DeleteConstructionDialog.jsx","views/Main/ConstructionsTable.jsx","views/Main/Comparison.jsx","views/Main/Main.jsx","views/Main/MainWrapper.jsx","views/Settings/Settings.jsx","index.js"],"names":["module","exports","APIContext","createContext","APIProvider","props","useState","use_API","setUseAPI","API_Host","setAPIHost","API_User","setAPIUser","Provider","value","children","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","authenticationService","logout","error","message","statusText","Promise","reject","currentUserSubject","BehaviorSubject","localStorage","getItem","login","username","password","console","log","stringify","requestOptions","method","headers","body","fetch","user","setItem","next","removeItem","currentUser","asObservable","PrivateRoute","Component","component","rest","render","currentUserValue","to","pathname","state","from","location","UserContext","name","auth","UserProvider","setUser","history","createBrowserHistory","Boolean","window","hostname","match","ConstructionContext","ConstructionProvider","content_num","setContentNum","open_load_cons","setOpenLoadCons","selected_cons_load","setSelectedConsLoad","loaded_cons","setLoadedCons","open_delete_cons","setOpenDeleteCons","selected_cons_delete","setSelectedConsDelete","open_add_cons","setOpenAddCons","open_settings_password","setOpenSettingsPassword","open_settings_account","setOpenSettingsAccount","open_search_material","setOpenSearchMaterial","selected_material","setSelectedMaterial","search_material_columns","setSearchMaterialColumns","search_material_rows","setSearchMaterialRows","need_refresh_search_material","setNeedRefreshSearchMaterial","search_material_api_loaded","setSearchMaterialApiLoaded","open_filter_columns","setOpenFilterColumns","filter_columns_show_columns","setFilterColumnsShowColumns","filter_columns_selected","setFilterColumnsSelected","search_material_columns_source","setSearchMaterialColumnsSource","mara_id","mat_desc","mara_nr","use_selected_material","setUseSelectedMaterial","jump_to_material_search","setJumpToMaterialSearch","selected_user","setSelectedUser","open_delete_user","setOpenDeleteUser","open_add_user","setOpenAddUser","open_edit_user","setOpenEditUser","edited_user","setEditedUser","need_refresh_project_team","setNeedRefreshProjectTeam","selected_alternative","setSelectedAlternative","open_delete_alternative","setOpenDeleteAlternative","open_add_alternative","setOpenAddAlternative","open_edit_alternative","setOpenEditAlternative","edited_alternative","setEditedAlternative","need_refresh_project_info","setNeedRefreshProjectInfo","loaded_alternative","setLoadedAlternative","need_refresh_components","setNeedRefreshComponents","selected_component","setSelectedComponent","selected_component_id","setSelectedComponentId","edited_component","setEditedComponent","open_delete_component","setOpenDeleteComponent","open_add_component","setOpenAddComponent","open_edit_component","setOpenEditComponent","colors","lightGreen","primaryGreen","yellow","orange","red","lightGrey","mediumGrey","darkGrey","white","black","useStyles","makeStyles","theme","buttons","color","border","backgroundColor","logo","height","padding","NavBar","classes","Grid","container","direction","justify","alignItems","style","background","marginBottom","item","xs","href","src","alt","className","Typography","variant","noWrap","spacing","Button","onClick","DataTable","columns","rowClick","Table","TableHead","TableRow","map","e","TableCell","label","TableBody","r","hover","id","c","col_id","ConstructionLoad","closeDialog","setOpen","Dialog","open","aria-labelledby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","constructions","setConstructionLoadedId","DialogActions","marginLeft","Construction","constructionLoadedId","loadDialogOpen","setLoadDialogOpen","isLoading","useEffect","Stepper","activeStep","Step","key","StepLabel","CircularProgress","variants","align","ConstructionWrapper","card","media","Ansprechpartner","Card","CardActionArea","CardMedia","image","norman","title","CardContent","gutterBottom","Logo","target","marginTop","PartnerLogos","md","logo_uni","logo_skz","logo_stami","logo_forcycle2","MainContext","MainProvider","orga_id","setOrgaId","selected_construction_id","setSelectedConstructionId","selected_construction_title","setSelectedConstructionTitle","delete_material","setDeleteMaterial","parent_material","setParentMaterial","mat_id_int","cad_id","mara_plast_id","mat_rw","width","depth","unit","weight","weight_unit","volume","volume_unit","new_material","setNewMaterial","cons_title","cons_desc","del_kz","new_construction","setNewConstruction","add_component_open","setAddComponentOpen","delete_component_open","setDeleteComponentOpen","add_bom_open","setAddBomOpen","bom_updated","setBomUpdated","child_updated","setChildUpdated","add_plast_open","setAddPlastOpen","evaluation_open","setEvaluationOpen","data_backend","setDataBackend","highest_level_id","setHighestLevelId","add_construction_open","setAddConstructionOpen","constructions_updated","setConstructionsUpdated","delete_construction_open","setDeleteConstructionOpen","delete_construction","setDeleteConstruction","new_bom_created","setNewBomCreated","add_component_mode","setComponentMode","active_step","setActiveStep","selection_atomic","setSelectionAtomic","material_created","setMaterialCreated","csv_upload_open","setCsvUploadOpen","filterContainer","paddingLeft","paddingRight","formControl","margin","minWidth","gridContainer","inputInput","breakpoints","up","transitions","create","inputRoot","menuButton","marginRight","search","fade","palette","common","shape","borderRadius","searchIcon","display","justifyContent","pointerEvents","position","Transition","React","forwardRef","ref","Slide","Result","dialogOpen","setDialogOpen","filter","handleClose","TransitionComponent","keepMounted","onClose","aria-describedby","Object","keys","lg","xl","campus_fam","producer","CardActions","size","req","Accept","newMaterial","res","json","SearchField","Autocomplete","options","getOptionLabel","option","onChange","event","newValue","renderInput","params","TextField","placeholder","Filter","dropdownKeys","setDropdownKeys","sliderValue","setSliderValue","sliderRange","setSliderRange","dropdownSelection","setDropdownSelection","setData","loaded","setLoaded","suffix","toLowerCase","elem","min","max","sm","FormControl","InputLabel","Select","labelId","handleDropdownChange","MenuItem","Slider","handleSliderChange","step","marks","valueLabelDisplay","Search","materialData","INITIAL_FILTER","verarbeitungsmethode","setFilter","resultData","setResultData","autocompleteData","push","dropdown","join","Divider","orientation","zugmodul","val","bruchdehnung","bruchspannung","belastung","temperatur","dichte","MVR","result","SearchDialog","descriptionElementRef","useRef","descriptionElement","current","focus","useContext","selectionAtomic","handleSearchDialogClose","scroll","dividers","contrainer","borderColor","textTransform","TriangleSpacer","Math","document","documentElement","clientWidth","innerWidth","undefined","windowSize","setWindowSize","handleResize","innerHeight","addEventListener","removeEventListener","useWindowSize","borderStyle","borderWidth","paragraph","Paragraph","Container","heading","alignText","Home","solution","List","ListItem","rel","Copyright","Date","getFullYear","paper","flexDirection","avatar","secondary","main","form","submit","Login","useHistory","orga","setOrga","setPassword","showErrorText","CssBaseline","Avatar","noValidate","helperText","required","autoFocus","type","Box","mt","root","buttons2","stepdiv","muiTheme","createMuiTheme","overrides","MuiStepIcon","GreenRadio","withStyles","checked","Radio","EvaluationDialog","isDangerous","setIsDangerous","hasTakebackSystem","setHasTakebackSystem","handleChangeDangerous","handleChangeTakebackSystem","evaluationOpen","steps","handleReset","index","labelProps","length","instructions","FormLabel","RadioGroup","aria-label","FormControlLabel","control","getStepContent","disabled","prevActiveStep","AddBomDialog","addBomOpen","orgaId","selectedConstructionId","newBomCreated","handleClickBomClose","mat_desc_int","newBom","setNewBom","handleNewBomInputs","showErrorText1","setShowErrorText1","showErrorText2","setShowErrorText2","addBom","parseInt","parseFloat","is_atomic","cons_id","redirect","catch","autoComplete","weightIsFloat","test","weightIsNumeric","heightIsFloat","heightIsNumeric","widthIsFloat","widthIsNumeric","depthIsFloat","depthIsNumeric","volumeIsFloat","volumeIsNumeric","MatFertTable","setMaterialData","parentMaterial","materialValid","setMaterialValid","setAddComponentMode","d","materialColumns","defaultHiddenColumnNames","columnName","tableColumnExtensions","selection","setSelection","rows","onSelectionChange","defaultFilters","columnExtensions","showSortingControls","fontSize","MaterialFertNew","saveItem","materialCreated","isAtomic","setIsAtomic","handleNewMaterialInputs","addMaterial","Tooltip","validateNewMat","TabPanel","other","role","hidden","p","a11yProps","flexGrow","appBar","SimpleTabs","setValue","AppBar","Tabs","centered","Tab","MaterialFertTable","root_card","action","AddMaterialDialog","addComponentOpen","dataBackend","selectedMaterial","highestLevelId","relations","setRelations","addComponentMode","setObj","Set","relationError","setRelationError","parent_id","reduce","acc","has","mat_id","add","siblings","siblings_unique","s","requestOptionsRel","p_id","m1_id","m2_id","rel_type","requestOptionsBom","parent_mat_id","addComponentAndRelations","DeleteMaterialDialog","deleteComponentOpen","deleteMaterial","CsvUploadDialog","csvUploadOpen","setColumns","exampleColumns","wordWrapEnabled","colName","colDesc","colContent","requiredData","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","accept","file","files","reader","FileReader","onload","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","dataString","dataStringLines","split","list","i","row","obj","j","substring","values","x","selector","processData","sheet_to_csv","header","readAsBinaryString","fontWeight","mainwindow","minHeight","paddingBottom","textAlign","divider","progress","buttonbox","paddingTop","textfield","card_div","getChildRows","rootRows","childRows","result_id","RecyclingTypeProviderFormatter","RecyclingTypeProvider","formatterComponent","PlasticTypeProviderFormatter","PlasticTypeProvider","TableTree","bomUpdated","selectedConstructionTitle","bomMaterialId","setBomMaterialId","setRowSelection","transformDropdownData","defaultExpandedRowIds","rowSelection","listDropdownData","setListDropdownData","dropdownSelected","setDropdownSelected","setParent","source","searchDialogOpen","setSearchDialogOpen","disableClearable","textContent","for","showSelectionControls","bom_id","AddConstructionDialog","constructionsUpdated","addConstructionOpen","newConstruction","handleNewConstInput","AddConstruction","DeleteConstructionDialog","delecteConstructionOpen","ConstructionTable","constructionData","setConstructionData","constructionColumns","onClickSelect","StyledRating","iconFilled","iconHover","Rating","Comparison","weightsSet","setWeightsSet","setComparisonDone","recycling","co2","price","evaluationRatings","setEvaluationRatings","weights","setWeights","alternatives","setAlternatives","topsisData","topsisColumns","compareAlternatives","calcWeights","topsis_data","topsis_weights","mode","mb","icon","Number","toFixed","xd","multiple","input","Input","renderValue","selected","Checkbox","ListItemText","primary","autocomplete","highlighted","Main","contentNum","clsx","ConstructionsTable","MainWrapper","Settings","loading","setLoading","anzeige","setAnzeige","employee_name","styleLink","createElement","head","appendChild","App","subscribe","exact","path","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uhEAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,6D,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,i7o9VCA3CD,EAAOC,QAAU,IAA0B,sC,iMCG9BC,EAAaC,0BAIbC,EAAc,SAACC,GAAU,MAELC,oBAAS,GAFJ,mBAE3BC,EAF2B,KAElBC,EAFkB,OAIHF,mBAAS,yBAJN,mBAI3BG,EAJ2B,KAIjBC,EAJiB,OAMHJ,mBAAS,GANN,mBAM3BK,EAN2B,KAMjBC,EANiB,KAQlC,OACI,kBAACV,EAAWW,SAAZ,CACIC,MAAO,CACHP,QAAS,CAACA,EAASC,GACnBC,SAAU,CAACA,EAAUC,GACrBC,SAAU,CAACA,EAAUC,KAGxBP,EAAMU,W,OCrBZ,SAASC,EAAeC,GAC7B,OAAOA,EAASC,OAAOC,MAAK,SAACD,GAC3B,IAAME,EAAOF,GAAQG,KAAKC,MAAMJ,GAChC,IAAKD,EAASM,GAAI,EAC6B,IAAzC,CAAC,IAAK,KAAKC,QAAQP,EAASQ,SAE9BC,EAAsBC,SAIxB,IAAMC,EAASR,GAAQA,EAAKS,SAAYZ,EAASa,WACjD,OAAOC,QAAQC,OAAOJ,GAGxB,OAAOR,KCbX,IAAMa,EAAqB,I,OAAIC,GAC7Bb,KAAKC,MAAMa,aAAaC,QAAQ,iBAGrBV,EAAwB,CACnCW,MAQF,SAAeC,EAAUC,GACvBC,QAAQC,IAAIpB,KAAKqB,UAAU,CAAEJ,WAAUC,cACvC,IAAMI,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMzB,KAAKqB,UAAU,CAAEJ,WAAUC,cAGnC,OAAOQ,MAAM,QAASJ,GACnBxB,KAAKH,GACLG,MAAK,SAAC6B,GAML,OAJAR,QAAQC,IAAIpB,KAAKqB,UAAUM,IAC3Bb,aAAac,QAAQ,cAAe5B,KAAKqB,UAAUM,IACnDf,EAAmBiB,KAAKF,GAEjBA,MAvBXrB,OA2BF,WAEEQ,aAAagB,WAAW,eACxBlB,EAAmBiB,KAAK,OA7BxBE,YAAanB,EAAmBoB,eAChC,uBACE,OAAOpB,EAAmBnB,QCPvB,IAAMwC,EAAe,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCAC1B,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAACrD,GAEP,OADoBqB,EAAsBiC,iBAWnC,kBAACJ,EAAclD,GAPlB,kBAAC,IAAD,CACEuD,GAAI,CAAEC,SAAU,SAAUC,MAAO,CAAEC,KAAM1D,EAAM2D,kBCV9CC,EAAc9D,wBAAc,CAAE+D,KAAM,GAAIC,MAAM,IAE9CC,EAAe,SAAC,GAAkB,IAAhBrD,EAAe,EAAfA,SAAe,EAEpBT,mBAAS,CAAE4D,KAAM,GAAIC,KAAMhC,aAAaC,QAAQ,UAAW,IAFvC,mBAErCY,EAFqC,KAE/BqB,EAF+B,KAoB5C,OAAO,kBAACJ,EAAYpD,SAAb,CAAsBC,MAAO,CAAEkC,OAAMX,MAf9B,SAAC6B,GACbG,GAAQ,SAACrB,GAAD,MAAW,CACjBkB,KAAMA,EACNC,MAAM,OAYyCxC,OAPpC,WACb0C,GAAQ,SAACrB,GAAD,MAAW,CACjBkB,KAAM,GACNC,MAAM,SAIoDpD,I,QCxBnDuD,EAAUC,c,OCUHC,QACW,cAA7BC,OAAOT,SAASU,UAEe,UAA7BD,OAAOT,SAASU,UAEhBD,OAAOT,SAASU,SAASC,MACvB,2DCfC,IAAMC,EAAsBzE,0BAGtB0E,EAAuB,SAACxE,GAAU,MAGNC,mBAAS,GAHH,mBAGpCwE,EAHoC,KAGvBC,EAHuB,OAMDzE,oBAAS,GANR,mBAMpC0E,EANoC,KAMpBC,EANoB,OAOO3E,mBAAS,IAPhB,mBAOpC4E,EAPoC,KAOhBC,EAPgB,OAQN7E,mBAAS,IARH,mBAQpC8E,EARoC,KAQvBC,EARuB,OAWG/E,oBAAS,GAXZ,mBAWpCgF,EAXoC,KAWlBC,EAXkB,OAYWjF,mBAAS,IAZpB,mBAYpCkF,EAZoC,KAYdC,EAZc,OAeHnF,oBAAS,GAfN,mBAepCoF,EAfoC,KAerBC,EAfqB,OAkBerF,oBAAS,GAlBxB,mBAkBpCsF,EAlBoC,KAkBZC,EAlBY,OAqBavF,oBAAS,GArBtB,mBAqBpCwF,EArBoC,KAqBbC,EArBa,OAwBWzF,oBAAS,GAxBpB,mBAwBpC0F,EAxBoC,KAwBdC,EAxBc,OAyBM3F,mBAAS,IAzBf,mBAyBpC4F,EAzBoC,KAyBjBC,EAzBiB,OA0BiB7F,mBAAS,IA1B1B,mBA0BpC8F,EA1BoC,KA0BXC,EA1BW,OA2BW/F,mBAAS,IA3BpB,oBA2BpCgG,GA3BoC,MA2BdC,GA3Bc,SA+BvCjG,oBAAS,GA/B8B,qBA6BvCkG,GA7BuC,MA8BvCC,GA9BuC,SAgCsBnG,oBAC7D,GAjCuC,qBAgCpCoG,GAhCoC,MAgCRC,GAhCQ,SAmCSrG,oBAAS,GAnClB,qBAmCpCsG,GAnCoC,MAmCfC,GAnCe,SAoCwBvG,mBAC/D,IArCuC,qBAoCpCwG,GApCoC,MAoCPC,GApCO,SAuCiBzG,mBAAS,IAvC1B,qBAuCpC0G,GAvCoC,MAuCXC,GAvCW,SA2CvC3G,mBAAS,IA3C8B,qBAyCvC4G,GAzCuC,MA0CvCC,GA1CuC,SA4Ca7G,mBAAS,CAC7D8G,QAAS,GACTC,SAAU,GACVC,QAAS,KA/C8B,qBA4CpCC,GA5CoC,MA4CbC,GA5Ca,SAiDgBlH,qBAjDhB,qBAiDpCmH,GAjDoC,MAiDXC,GAjDW,SAqDFpH,mBAAS,IArDP,qBAqDpCqH,GArDoC,MAqDrBC,GArDqB,SAsDGtH,oBAAS,GAtDZ,qBAsDpCuH,GAtDoC,MAsDlBC,GAtDkB,SAuDHxH,oBAAS,GAvDN,qBAuDpCyH,GAvDoC,MAuDrBC,GAvDqB,SAwDD1H,oBAAS,GAxDR,qBAwDpC2H,GAxDoC,MAwDpBC,GAxDoB,SAyDN5H,mBAAS,IAzDH,qBAyDpC6H,GAzDoC,MAyDvBC,GAzDuB,SA0DoB9H,oBAC3D,GA3DuC,qBA0DpC+H,GA1DoC,MA0DTC,GA1DS,SA+DYhI,mBAAS,IA/DrB,qBA+DpCiI,GA/DoC,MA+DdC,GA/Dc,SAgEiBlI,oBAAS,GAhE1B,qBAgEpCmI,GAhEoC,MAgEXC,GAhEW,SAiEWpI,oBAAS,GAjEpB,qBAiEpCqI,GAjEoC,MAiEdC,GAjEc,SAkEatI,oBAAS,GAlEtB,qBAkEpCuI,GAlEoC,MAkEbC,GAlEa,SAmEQxI,mBAAS,IAnEjB,qBAmEpCyI,GAnEoC,MAmEhBC,GAnEgB,SAoEoB1I,oBAC3D,GArEuC,qBAoEpC2I,GApEoC,MAoETC,GApES,SA0EQ5I,mBAAS,IA1EjB,qBA0EpC6I,GA1EoC,MA0EhBC,GA1EgB,SA6EiB9I,oBAAS,GA7E1B,qBA6EpC+I,GA7EoC,MA6EXC,GA7EW,SA8EQhJ,mBAAS,IA9EjB,qBA8EpCiJ,GA9EoC,MA8EhBC,GA9EgB,SA+EalJ,mBAAS,IA/EtB,qBA+EpCmJ,GA/EoC,MA+EbC,GA/Ea,SAgFIpJ,mBAAS,IAhFb,qBAgFpCqJ,GAhFoC,MAgFlBC,GAhFkB,SAkFatJ,oBAAS,GAlFtB,qBAkFpCuJ,GAlFoC,MAkFbC,GAlFa,SAmFOxJ,oBAAS,GAnFhB,qBAmFpCyJ,GAnFoC,MAmFhBC,GAnFgB,SAoFS1J,oBAAS,GApFlB,qBAoFpC2J,GApFoC,MAoFfC,GApFe,MAsF3C,OACI,kBAACtF,EAAoB/D,SAArB,CACIC,MAAO,CAIHgE,YAAa,CAACA,EAAaC,GAG3BK,YAAa,CAACA,EAAaC,GAC3BL,eAAgB,CAACA,EAAgBC,GACjCC,mBAAoB,CAACA,EAAoBC,GAGzCG,iBAAkB,CAACA,EAAkBC,GACrCC,qBAAsB,CAClBA,EACAC,GAIJC,cAAe,CAACA,EAAeC,GAG/BC,uBAAwB,CACpBA,EACAC,GAIJC,sBAAuB,CACnBA,EACAC,GAIJC,qBAAsB,CAClBA,EACAC,GAEJC,kBAAmB,CAACA,EAAmBC,GACvCC,wBAAyB,CACrBA,EACAC,GAEJC,qBAAsB,CAClBA,GACAC,IAEJC,6BAA8B,CAC1BA,GACAC,IAEJC,2BAA4B,CACxBA,GACAC,IAEJC,oBAAqB,CACjBA,GACAC,IAEJC,4BAA6B,CACzBA,GACAC,IAEJC,wBAAyB,CACrBA,GACAC,IAEJC,+BAAgC,CAC5BA,GACAC,IAEJI,sBAAuB,CACnBA,GACAC,IAEJC,wBAAyB,CACrBA,GACAC,IAKJC,cAAe,CAACA,GAAeC,IAC/BC,iBAAkB,CAACA,GAAkBC,IACrCC,cAAe,CAACA,GAAeC,IAC/BC,eAAgB,CAACA,GAAgBC,IACjCC,YAAa,CAACA,GAAaC,IAC3BC,0BAA2B,CACvBA,GACAC,IAIJC,qBAAsB,CAClBA,GACAC,IAEJC,wBAAyB,CACrBA,GACAC,IAEJC,qBAAsB,CAClBA,GACAC,IAEJC,sBAAuB,CACnBA,GACAC,IAEJC,mBAAoB,CAACA,GAAoBC,IACzCC,0BAA2B,CACvBA,GACAC,IAKJC,mBAAoB,CAACA,GAAoBC,IAGzCC,wBAAyB,CACrBA,GACAC,IAEJC,mBAAoB,CAACA,GAAoBC,IACzCC,sBAAuB,CACnBA,GACAC,IAEJC,iBAAkB,CAACA,GAAkBC,IAErCC,sBAAuB,CACnBA,GACAC,IAEJC,mBAAoB,CAACA,GAAoBC,IACzCC,oBAAqB,CACjBA,GACAC,MAIP7J,EAAMU,W,yFCjNJoJ,EAbA,CACXC,WAfe,UAgBfC,aAfiB,UAgBjBC,OAdW,UAeXC,OAdW,UAeXC,IAdQ,UAeRC,UAbc,UAcdC,WAbe,UAcfC,SAba,UAcbC,MAXU,UAYVC,MAbU,WCHRC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,MAAO,QACPC,OAAQ,EACR,UAAW,CACTC,gBAAiBjB,EAAOC,WACxBc,MAAOf,EAAOE,eAGlBnJ,KAAM,CACJgK,MAAO,SAETG,KAAM,CACJC,OAAQ,GACRC,QAAS,QAIE,SAASC,IACtB,IAAMC,EAAUX,IAKV9H,EAAOb,aAAaC,QAAQ,eAElC,OACE,6BACE,kBAACsJ,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,MAAO,CAELC,WAAY,UACZC,aAAc,KAGhB,kBAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAME,WAAW,UACzC,kBAACJ,EAAA,EAAD,CAAMQ,MAAI,GACR,uBAAGE,KAAK,iBACN,yBAAKC,IAAKhB,IAAMiB,IAAI,OAAOC,UAAWd,EAAQJ,SAGlD,kBAACK,EAAA,EAAD,CAAMQ,MAAI,GACR,uBAAGE,KAAK,iBACN,kBAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAACH,UAAWd,EAAQvK,MAAnD,aAuBR,kBAACwK,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,EAAGd,QAAQ,gBACxB,OAAT7I,EACC,kBAAC0I,EAAA,EAAD,CAAMQ,MAAI,GACR,kBAACU,EAAA,EAAD,CACEH,QAAQ,WACRF,UAAWd,EAAQR,QACnBmB,KAAK,SAHP,SASF,GAGF,kBAACV,EAAA,EAAD,CAAMQ,MAAI,GACR,kBAACU,EAAA,EAAD,CACEH,QAAQ,WACRF,UAAWd,EAAQR,QACnBmB,KAAK,SAHP,eAQF,kBAACV,EAAA,EAAD,CAAMQ,MAAI,GACE,OAATlJ,EACC,kBAAC4J,EAAA,EAAD,CACEH,QAAQ,WACRF,UAAWd,EAAQR,QACnB4B,QAAS,WACPnL,EAAsBC,WAJ1B,YAUA,kBAACiL,EAAA,EAAD,CACEH,QAAQ,WACRF,UAAWd,EAAQR,QACnBmB,KAAK,UAHP,iB,uGC3GHU,EAAY,SAACzM,GAAW,IACzBe,EAA4Bf,EAA5Be,KAAM2L,EAAsB1M,EAAtB0M,QAASC,EAAa3M,EAAb2M,SAEvB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKJ,EAAQK,KAAI,SAACC,GACV,OAAO,kBAACC,EAAA,EAAD,KAAYD,EAAEE,YAIjC,kBAACC,EAAA,EAAD,KACKpM,EAAKgM,KAAI,SAACK,GACP,OACI,kBAACN,EAAA,EAAD,CAAUO,OAAK,EAACb,QAAS,kBAAMG,EAASS,EAAEE,MACrCZ,EAAQK,KAAI,SAACQ,GACV,OAAO,kBAACN,EAAA,EAAD,KAAYG,EAAEG,EAAEC,mBC+CxCC,EApDU,SAACzN,GAGtB,IACM0N,EAAc,kBAAM1N,EAAM2N,SAAQ,IAQxC,OADAxL,QAAQC,IAAIpC,GAER,6BACI,kBAAC4N,EAAA,EAAD,CACIC,KAAM7N,EAAM6N,KAEZC,kBAAgB,oBAChBC,WAAW,EACXC,SAAU,MAEV,kBAACC,EAAA,EAAD,CAAaX,GAAG,qBAAhB,sBAGA,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAmBzC,MAAO,CAAEb,MAAO,UAAnC,kDAGA,kBAAC,EAAD,CACI9J,KAAMqN,EAAcrN,KACpB2L,QAAS0B,EAAc1B,QACvBC,SAzBY,SAACW,GAC7BtN,EAAMqO,wBAAwBf,GAC9BI,QA2BQ,kBAACY,EAAA,EAAD,KACI,kBAAC/B,EAAA,EAAD,CAAQC,QAASkB,EAAatB,QAAQ,YAAtC,aAGA,kBAACG,EAAA,EAAD,CAEIH,QAAQ,WACRV,MAAO,CAAE6C,WAAY,KAHzB,a,SCpCd9D,EAAYC,aAAW,SAACC,GAAD,MAAY,MAG1B,SAAS6D,IAEJ/D,IAAhB,IAFmC,EAKqBxK,mBAAS,MAL9B,mBAK5BwO,EAL4B,KAKNJ,EALM,OAMSpO,oBAAS,GANlB,mBAM5ByO,EAN4B,KAMZC,EANY,OAOD1O,oBAAS,GAPR,mBAO5B2O,EAP4B,UAwBnC,OAfAC,qBAAU,WAMN1M,QAAQC,IAAI,gBACb,CAACqM,IASA,6BACI,kBAACpD,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,GACrB,kBAACjB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACX,kBAACX,EAAD,QAIR,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,EAAGd,QAAQ,UAChC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,GACN,kBAACiD,EAAA,EAAD,CAASC,WAAW,KAChB,kBAACC,EAAA,EAAD,CAAMC,IAAI,KACN,kBAACC,EAAA,EAAD,4BAEJ,kBAACF,EAAA,EAAD,CAAMC,IAAI,KACN,kBAACC,EAAA,EAAD,kCAKhB,kBAAC7D,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,EAAGd,QAAQ,UAChC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,GACL4C,EACG,kBAAC,WAAD,KACKG,EACG,kBAACO,EAAA,EAAD,MAEA,kBAAC,EAAD,CACIpO,KAAMqO,EAASrO,KACf2L,QAAS0C,EAAS1C,QAClBC,SAAU,kBAAMxK,QAAQC,IAAI,WAKxC,kBAAC,WAAD,KACI,kBAAC+J,EAAA,EAAD,CAAYC,QAAQ,KAAKiD,MAAM,UAA/B,+BAGA,kBAAC9C,EAAA,EAAD,CAAQC,QAAS,kBAAMmC,GAAkB,KAAzC,gCAShB,kBAAC,EAAD,CACId,KAAMa,EACNf,QAASgB,EACTN,wBAAyBA,KCtF1BiB,MAVf,WACE,OACE,kBAAC,EAAD,KACE,6BACE,kBAACd,EAAD,S,yFCEF/D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4E,KAAM,CACFvB,SAAU,KAEdwB,MAAO,CACHvE,OAAQ,SAIHwE,GAAkB,WAC3B,IAAMrE,EAAUX,KAChB,OACI,kBAACiF,GAAA,EAAD,CAAMxD,UAAWd,EAAQmE,MACrB,kBAACI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1D,UAAWd,EAAQoE,MACnBK,MAAOC,KACPC,MAAM,oBAEV,kBAACC,GAAA,EAAD,KACI,kBAAC7D,EAAA,EAAD,CAAY8D,cAAY,EAAC7D,QAAQ,KAAKjJ,UAAU,MAAhD,gBAGA,kBAACgJ,EAAA,EAAD,CACIC,QAAQ,QACRvB,MAAM,gBACN1H,UAAU,KAHd,4EAQA,kBAACgJ,EAAA,EAAD,CACIC,QAAQ,QACRvB,MAAM,gBACN1H,UAAU,KAHd,iDAOA,kBAACgJ,EAAA,EAAD,CACIC,QAAQ,QACRvB,MAAM,gBACN1H,UAAU,KAHd,gBAOA,kBAACgJ,EAAA,EAAD,CACIC,QAAQ,QACRvB,MAAM,gBACN1H,UAAU,KAHd,qBAOA,kBAACgJ,EAAA,EAAD,CACIC,QAAQ,QACRvB,MAAM,gBACN1H,UAAU,KAHd,yCAOA,kBAACgJ,EAAA,EAAD,CACIC,QAAQ,QACRvB,MAAM,gBACN1H,UAAU,KAHd,8B,0HC9Dd+M,GAAO,SAAClQ,GACV,OACI,kBAACqL,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACpB,kBAACH,EAAA,EAAD,CAAMQ,MAAI,GACN,uBAAGE,KAAM/L,EAAM+L,KAAMoE,OAAO,UACxB,yBACInE,IAAKhM,EAAMgM,IACXN,MAAO,CAAET,OAAQ,GAAImF,UAAW,GAAIxE,aAAc,IAClDK,IAAKjM,EAAMiM,UAQdoE,G,2KAEb,OACI,kBAAChF,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACpB,kBAACH,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGwE,GAAI,GAClB,kBAAC,GAAD,CACIvE,KAAK,iEACLC,IAAKuE,KACLtE,IAAI,cAIZ,kBAACZ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGwE,GAAI,GAClB,kBAAC,GAAD,CACIvE,KAAK,mCACLC,IAAKwE,KACLvE,IAAI,cAIZ,kBAACZ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGwE,GAAI,GAClB,kBAAC,GAAD,CACIvE,KAAK,8BACLC,IAAKyE,KACLxE,IAAI,gBAIZ,kBAACZ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGwE,GAAI,GAClB,kBAAC,GAAD,CACIvE,KAAK,mFACLC,IAAK0E,KACLzE,IAAI,yB,GAhCc/I,aCvB7ByN,GAAc7Q,0BAEd8Q,GAAe,SAAC5Q,GAAW,IAAD,EACRC,mBAAS,GADD,mBAC9B4Q,EAD8B,KACrBC,EADqB,OAEyB7Q,mBAAS,IAFlC,mBAE9B8Q,EAF8B,KAEJC,EAFI,OAG+B/Q,mBAClE,oBAJmC,mBAG9BgR,EAH8B,KAGDC,EAHC,OAMYjR,qBANZ,mBAM9B4F,EAN8B,KAMXC,EANW,OAOQ7F,qBAPR,mBAO9BkR,EAP8B,KAObC,EAPa,OAQQnR,qBARR,mBAQ9BoR,EAR8B,KAQbC,EARa,OASErR,mBAAS,CAC9C+G,SAAU,GACVuK,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,OAAQ,GACRzG,OAAQ,GACR0G,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,OAAQ,GACRC,YAAa,KAtBsB,mBAS9BC,EAT8B,KAShBC,EATgB,OAwBUlS,mBAAS,CACtDmS,WAAY,GACZC,UAAW,GACXxB,QAASA,EACTyB,OAAQ,IA5B2B,mBAwB9BC,EAxB8B,KAwBZC,EAxBY,OA8BavS,oBAAS,GA9BtB,mBA8B9BwS,EA9B8B,KA8BVC,EA9BU,OA+BmBzS,oBAAS,GA/B5B,mBA+B9B0S,EA/B8B,KA+BPC,EA/BO,OAgCC3S,oBAAS,GAhCV,mBAgC9B4S,EAhC8B,KAgChBC,EAhCgB,OAiCA7S,oBAAS,GAjCT,mBAiC9B8S,EAjC8B,KAiCjBC,EAjCiB,OAkCI/S,oBAAS,GAlCb,mBAkC9BgT,GAlC8B,KAkCfC,GAlCe,QAmCKjT,oBAAS,GAnCd,qBAmC9BkT,GAnC8B,MAmCdC,GAnCc,SAoCQnT,oBAAS,GApCjB,qBAoC9BoT,GApC8B,MAoCbC,GApCa,SAqCErT,mBAAS,IArCX,qBAqC9BsT,GArC8B,MAqChBC,GArCgB,SAsCSvT,qBAtCT,qBAsC9BwT,GAtC8B,MAsCZC,GAtCY,SAuCmBzT,oBAAS,GAvC5B,qBAuC9B0T,GAvC8B,MAuCPC,GAvCO,SAwCoB3T,oBAAS,GAxC7B,qBAwC9B4T,GAxC8B,MAwCPC,GAxCO,SAyCyB7T,oBAAS,GAzClC,qBAyC9B8T,GAzC8B,MAyCJC,GAzCI,SA0CgB/T,qBA1ChB,qBA0C9BgU,GA1C8B,MA0CTC,GA1CS,SA2COjU,oBAAS,GA3ChB,qBA2C9BkU,GA3C8B,MA2CbC,GA3Ca,SA4CUnU,mBAAS,IA5CnB,qBA4C9BoU,GA5C8B,MA4CVC,GA5CU,SA6CArU,mBAAS,GA7CT,qBA6C9BsU,GA7C8B,MA6CjBC,GA7CiB,SA8CUvU,mBAAS,IA9CnB,qBA8C9BwU,GA9C8B,MA8CZC,GA9CY,SA+CUzU,oBAAS,GA/CnB,qBA+C9B0U,GA/C8B,MA+CZC,GA/CY,SAgDO3U,oBAAS,GAhDhB,qBAgD9B4U,GAhD8B,MAgDbC,GAhDa,MAkDrC,OACE,kBAACnE,GAAYnQ,SAAb,CACEC,MAAO,CACLsQ,yBAA0B,CACxBA,EACAC,GAEFC,4BAA6B,CAC3BA,EACAC,GAEFrL,kBAAmB,CAACA,EAAmBC,GACvCuL,gBAAiB,CAACA,EAAiBC,GACnCH,gBAAiB,CAACA,EAAiBC,GACnCc,aAAc,CAACA,EAAcC,GAC7BM,mBAAoB,CAACA,EAAoBC,GACzCC,sBAAuB,CAACA,EAAuBC,GAC/CC,aAAc,CAACA,EAAcC,GAC7BjC,QAAS,CAACA,EAASC,GACnBiC,YAAa,CAACA,EAAaC,GAC3BC,cAAe,CAACA,GAAeC,IAC/BC,eAAgB,CAACA,GAAgBC,IACjCC,gBAAiB,CAACA,GAAiBC,IACnCC,aAAc,CAACA,GAAcC,IAC7BC,iBAAkB,CAACA,GAAkBC,IACrCC,sBAAuB,CAACA,GAAuBC,IAC/CC,sBAAuB,CAACA,GAAuBC,IAC/CvB,iBAAkB,CAACA,EAAkBC,GACrCyB,oBAAqB,CAACA,GAAqBC,IAC3CH,yBAA0B,CACxBA,GACAC,IAEFG,gBAAiB,CAACA,GAAiBC,IACnCC,mBAAoB,CAACA,GAAoBC,IACzCC,YAAa,CAACA,GAAaC,IAC3BC,iBAAkB,CAACA,GAAkBC,IACrCC,iBAAkB,CAACA,GAAkBC,IACrCC,gBAAiB,CAACA,GAAiBC,MAGpC9U,EAAMU,W,iJC3DP+J,GAAYC,aAAW,SAACC,GAAD,cAAY,CACvCoK,gBAAiB,CACfC,YAAarK,EAAM2B,QAAQ,GAC3B2I,aAActK,EAAM2B,QAAQ,IAE9B4I,YAAa,CACXC,OAAQxK,EAAM2B,QAAQ,GACtB8I,SAAU,KAEZC,cAAe,CACbnK,QAASP,EAAM2B,QAAQ,IAEzBgJ,YAAU,oBACP3K,EAAM4K,YAAYC,GAAG,MAAQ,CAC5B7D,MAAO,SAFD,yBAIChH,EAAM2B,QAAQ,EAAG,EAAG,EAAG,IAJxB,kDAMmB3B,EAAM2B,QAAQ,GANjC,oCAOI3B,EAAM8K,YAAYC,OAAO,UAP7B,uBAQD,QARC,GAUVC,UAAW,CACT9K,MAAO,WAET+K,WAAY,CACVC,YAAalL,EAAM2B,QAAQ,IAE7BwJ,QAAM,oBACHnL,EAAM4K,YAAYC,GAAG,MAAQ,CAC5BjH,WAAY5D,EAAM2B,QAAQ,GAC1BqF,MAAO,SAHL,eAKJ,UAAW,CACT5G,gBAAiBgL,aAAKpL,EAAMqL,QAAQC,OAAO1L,MAAO,OANhD,iCAQawL,aAAKpL,EAAMqL,QAAQC,OAAO1L,MAAO,MAR9C,8BASUI,EAAMuL,MAAMC,cATtB,4BAUQ,GAVR,6BAWSxL,EAAM2B,QAAQ,IAXvB,0BAYM,YAZN,uBAaG,QAbH,GAeN8J,WAAY,CACV3K,WAAY,SACZ4K,QAAS,OACTpL,OAAQ,OACRqL,eAAgB,SAChBpL,QAASP,EAAM2B,QAAQ,EAAG,GAC1BiK,cAAe,OACfC,SAAU,gBAIRC,GAAaC,IAAMC,YAAW,SAAoB3W,EAAO4W,GAC7D,OAAO,kBAACC,GAAA,EAAD,eAAOtL,UAAU,KAAKqL,IAAKA,GAAS5W,OAGvC8W,GAAS,SAAC9W,GAAW,IAAD,EACYC,oBAAS,GADrB,mBACjB8W,EADiB,KACLC,EADK,KAEhBjW,EAAiBf,EAAjBe,KAAMkW,EAAWjX,EAAXiX,OAERC,EAAc,WAClBF,GAAc,GACd7U,QAAQC,IAAI6U,GACZ9U,QAAQC,IAAIrB,IAoBd,OACE,kBAAC,WAAD,KACE,kBAAC6M,EAAA,EAAD,CACEC,KAAMkJ,EACNI,oBAAqBV,GACrBW,aAAW,EACXC,QAASH,EACTpJ,kBAAgB,2BAChBwJ,mBAAiB,kCAEjB,kBAACrJ,EAAA,EAAD,CAAaX,GAAG,4BAA4BvM,EAAKiG,UACjD,kBAACkH,EAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,YACA,kBAACA,EAAA,EAAD,gBAGJ,kBAACE,EAAA,EAAD,KACGoK,OAAOC,KAAKP,GAEVlK,KAAI,SAACC,GAEJ,OACE,kBAACF,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,KAAaa,IAEf,kBAACC,EAAA,EAAD,KACE,kBAACd,EAAA,EAAD,KAAapL,EAAKiM,GAAKjM,EAAKiM,GAAK,8BAQjD,kBAACsB,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,CAAQC,QAAS0K,EAAarM,MAAM,WAApC,kBAKJ,kBAACQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAGmH,GAAI,EAAGC,GAAI,GACnC,kBAAChI,GAAA,EAAD,KACE,kBAACM,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CAAYtB,MAAM,gBAAgBoF,cAAY,GAC3ClP,EAAKuM,IAER,kBAACnB,EAAA,EAAD,CAAYC,QAAQ,QAAQjJ,UAAU,KACnCpC,EAAKiG,UAER,kBAACmF,EAAA,EAAD,CAAYC,QAAQ,QAAQjJ,UAAU,KACnCpC,EAAK4W,YAER,kBAACxL,EAAA,EAAD,CAAYC,QAAQ,QAAQjJ,UAAU,KACnCpC,EAAK6W,WAGV,kBAACC,GAAA,EAAD,KACE,kBAACtL,EAAA,EAAD,CAAQuL,KAAK,QAAQ1L,QAAQ,WAAWI,QAAS,kBAAMwK,GAAc,KACnE,kBAAC7K,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBAEF,kBAACG,EAAA,EAAD,CACEuL,KAAK,QACL1L,QAAQ,WACRI,QApFW,WACrB,IAAMuL,EAAM,CACVxV,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnB4V,YAAalX,KAIjB2B,MAAM,WAAYqV,GACfjX,MAAK,SAACoX,GAAD,OAASA,EAAIC,UAClBrX,MAAK,SAACqX,GAAD,OAAUhW,QAAQC,IAAI+V,OAuEpBzM,MAAO,CAAEX,gBAAiBjB,EAAOC,WAAYc,MAAOf,EAAOM,YAE3D,kBAAC+B,EAAA,EAAD,CAAYC,QAAQ,QAApB,oBAIA,MAKRgM,GAAc,SAACpY,GACnB,OACE,kBAACqL,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IAkBb,kBAACuM,GAAA,EAAD,CACEC,QAAStY,EAAMsY,QACfC,eAAgB,SAACC,GAAD,OAAYA,GAC5B/X,MAAOT,EAAMS,MACbgY,SAAU,SAACC,EAAOC,GAChB3Y,EAAMyY,SAASE,IAEjBC,YAAa,SAACC,GAAD,OAAY,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuB3L,MAAOlN,EAAM+Y,YAAa5D,OAAO,iBAQnF6D,GAAS,SAAChZ,GAAW,IAAD,EACgBC,mBAAS,IADzB,mBACjBgZ,EADiB,KACHC,EADG,OAEcjZ,mBAAS,CAAC,EAAG,KAF3B,mBAEjBkZ,EAFiB,KAEJC,EAFI,OAGcnZ,mBAAS,CAAC,EAAG,KAH3B,mBAGjBoZ,EAHiB,KAGJC,EAHI,OAI0BrZ,mBAAS,IAJnC,mBAIjBsZ,EAJiB,KAIEC,EAJF,OAKAvZ,mBAAS,IALT,mBAKjBc,EALiB,KAKX0Y,EALW,OAMIxZ,oBAAS,GANb,mBAMjByZ,EANiB,KAMTC,EANS,KAQxB9K,qBAAU,WAERnM,MAAM,WAAD,OAAY1C,EAAM4Z,OAAOC,gBAC3B/Y,MAAK,SAACoX,GAAD,OAASA,EAAIC,UAClBrX,MAAK,SAACqX,GACLe,EAAgB3B,OAAOC,KAAKW,GAAMpL,KAAI,SAAC+M,GAAD,OAAUA,MAChDL,EAAQtB,MAETrX,MAAK,kBAAM6Y,GAAU,QACvB,IAOH9K,qBAAU,WACJ6K,IACFJ,EAAe,CAACvY,EAAKwY,GAAmBQ,IAAKhZ,EAAKwY,GAAmBS,MACrEZ,EAAe,CAACrY,EAAKwY,GAAmBQ,IAAKhZ,EAAKwY,GAAmBS,SAEtE,CAACT,IA0BJ,OACE,kBAAClO,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,EAAGT,MAAI,EAACC,GAAI,GAAIP,UAAU,MAAMC,QAAQ,SAASC,WAAW,YACnF,kBAACJ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAImO,GAAI,GACrB,kBAACC,GAAA,EAAD,CAAanM,WAAS,GACpB,kBAACoM,GAAA,EAAD,CAAY7M,GAAG,4BAA4BtN,EAAM4Z,QAAU,IAC3D,kBAACQ,GAAA,EAAD,CACEC,QAAQ,2BACR/M,GAAG,qBACH7M,MAAO8Y,EACPd,SAjCmB,SAACzL,GAC5BwM,EAAqBxM,EAAEmD,OAAO1P,OAC9BT,EAAMsa,qBAAqBtN,EAAEmD,OAAO1P,SAiC3BwY,EAAalM,KAAI,SAACkC,GAAD,OAChB,kBAACsL,GAAA,EAAD,CAAU9Z,MAAOwO,EAAKA,IAAKA,GACxBA,SAMX,kBAAC5D,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAImO,GAAI,GACrB,kBAACO,GAAA,EAAD,CACE/Z,MAAO0Y,EACPV,SAzCmB,SAACzL,EAAG2L,GAC7BS,EAAeT,GACf3Y,EAAMya,mBAAmB9B,IAwCnBoB,IAAKV,EAAY,GACjBW,IAAKX,EAAY,GACjBqB,KAAM,EACNC,OAAK,EACLC,kBAAkB,YAOfC,GAAS,WACpB,IAAMzP,EAAUX,KADU,EAGFxK,mBAAS6a,IAHP,mBAGnB/Z,EAHmB,aAKcd,oBAAS,IALvB,gCAMYA,mBAAS,KANrB,gCAOgBA,mBAAS,KAPzB,gCAQkBA,mBAAS,KAR3B,mBAUpB8a,GAVoB,UAUH,CACrBjF,OAAQ,GACR9O,SAAU,GACV2Q,WAAY,GACZC,SAAU,GACVoD,qBAAsB,KAfE,EAiBE/a,mBAAS8a,GAjBX,mBAiBnB9D,EAjBmB,KAiBXgE,EAjBW,OAmBUhb,mBAAS,IAnBnB,mBAmBnBib,EAnBmB,KAmBPC,EAnBO,KAwE1BtM,qBAAU,WACR1M,QAAQC,IAAI,uBACZD,QAAQC,IAAI6U,KACX,CAACiE,IAUJ,OACE,kBAAC,WAAD,KACE,kBAAC7P,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAACJ,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAGhE,QAAS,EAAGJ,UAAWd,EAAQ2J,iBACjE,kBAAC,GAAD,CACEuD,QAAS8C,GAAiBpU,SAC1BvG,MAAOwW,EAAOjQ,SACdyR,SAAU,SAACE,GAAD,OAAcsC,EAAU,gBAAKhE,EAAN,CAAcjQ,SAAU2R,MACzDI,YAAa,wBAGf,kBAAC,GAAD,CACET,QAAS8C,GAAiBzD,WAC1BlX,MAAOwW,EAAOU,WACdc,SAAU,SAACE,GAAD,OAAcsC,EAAU,gBAAKhE,EAAN,CAAcU,WAAYgB,MAC3DI,YAAa,oBAEf,kBAAC,GAAD,CACET,QAAS8C,GAAiBxD,SAC1BnX,MAAOwW,EAAOW,SACda,SAAU,SAACE,GAAD,OAAcsC,EAAU,gBAAKhE,EAAN,CAAcW,SAAUe,MACzDI,YAAa,eAEf,kBAAC,GAAD,CACET,QAAS8C,GAAiBJ,qBAC1Bva,MAAOwW,EAAO+D,qBACdvC,SAAU,SAACE,GAAD,OAAcsC,EAAU,gBAAKhE,EAAN,CAAc+D,qBAAsBrC,MACrEI,YAAa,yBAEf,kBAAC1N,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CACEH,QAAQ,YACRI,QAhGS,WAGnB,IAAIqM,EAAS,CAAC,YAAD,OAAa5B,EAAOW,WAIjC,IAAK,IAAI5K,KAHT6L,EAAOwC,KAAP,oBAAyBpE,EAAOjQ,WAChC6R,EAAOwC,KAAP,sBAA2BpE,EAAOU,aAClCxV,QAAQC,IAAIyW,GACE5B,EACRA,EAAOjK,GAAGsO,UACZzC,EAAOwC,KAAP,WAAgBpE,EAAOjK,GAAGsO,SAA1B,YAAsCrE,EAAOjK,GAAG+M,IAAhD,YAAuD9C,EAAOjK,GAAGgN,MAIrEtX,MAAM,YAAcmW,EAAO0C,KAAK,KAC7Bza,MAAK,SAACoX,GAAD,OAASA,EAAIC,UAClBrX,MAAK,SAACqX,GACLhW,QAAQC,IAAI+V,GAIZgD,EAAchD,OA6ERpK,WAAS,EACTrC,MAAO,CAAEX,gBAAiBjB,EAAOC,WAAYc,MAAOf,EAAOM,YAJ7D,WASF,kBAACiB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAACS,EAAA,EAAD,CACEH,QAAQ,YACRI,QAjEQ,WAElByO,EAAUF,IAgEAhN,WAAS,EACTrC,MAAO,CAAEX,gBAAiBjB,EAAOK,IAAKU,MAAOf,EAAOM,YAJtD,2BAUJ,kBAACiB,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIwE,GAAI,EAAGhE,QAAS,EAAGJ,UAAWd,EAAQ2J,iBACjE,kBAAC1J,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACN6Y,OAAO,WACPnZ,MAAOwW,EAAOyE,SACdpB,qBAAsB,SAACqB,GAAD,OAASV,EAAU,gBAAKhE,EAAN,CAAcyE,SAAS,gBAAMzE,EAAOyE,SAAd,CAAwBJ,SAAUK,QAChGlB,mBAAoB,SAACkB,GAAD,OAClBV,EAAU,gBAAKhE,EAAN,CAAcyE,SAAS,gBAAMzE,EAAOyE,SAAd,CAAwB3B,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WAGjF,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACN6Y,OAAO,eACPnZ,MAAOwW,EAAO2E,aACdtB,qBAAsB,SAACqB,GAAD,OACpBV,EAAU,gBAAKhE,EAAN,CAAc2E,aAAa,gBAAM3E,EAAO2E,aAAd,CAA4BN,SAAUK,QAE3ElB,mBAAoB,SAACkB,GAAD,OAClBV,EAAU,gBAAKhE,EAAN,CAAc2E,aAAa,gBAAM3E,EAAO2E,aAAd,CAA4B7B,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WAE9E,IACX,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACN6Y,OAAO,gBACPnZ,MAAOwW,EAAO4E,cACdvB,qBAAsB,SAACqB,GAAD,OACpBV,EAAU,gBAAKhE,EAAN,CAAc4E,cAAc,gBAAM5E,EAAO4E,cAAd,CAA6BP,SAAUK,QAE7ElB,mBAAoB,SAACkB,GAAD,OAClBV,EAAU,gBAAKhE,EAAN,CAAc4E,cAAc,gBAAM5E,EAAO4E,cAAd,CAA6B9B,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WAEhF,IACX,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACN6Y,OAAO,YACPnZ,MAAOwW,EAAO6E,UACdxB,qBAAsB,SAACqB,GAAD,OAASV,EAAU,gBAAKhE,EAAN,CAAc6E,UAAU,gBAAM7E,EAAO6E,UAAd,CAAyBR,SAAUK,QAClGlB,mBAAoB,SAACkB,GAAD,OAClBV,EAAU,gBAAKhE,EAAN,CAAc6E,UAAU,gBAAM7E,EAAO6E,UAAd,CAAyB/B,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WAExE,IACX,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACN6Y,OAAO,aACPnZ,MAAOwW,EAAO8E,WACdzB,qBAAsB,SAACqB,GAAD,OACpBV,EAAU,gBAAKhE,EAAN,CAAc8E,WAAW,gBAAM9E,EAAO8E,WAAd,CAA0BT,SAAUK,QAEvElB,mBAAoB,SAACkB,GAAD,OAClBV,EAAU,gBAAKhE,EAAN,CAAc8E,WAAW,gBAAM9E,EAAO8E,WAAd,CAA0BhC,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WAE1E,IACX,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACNN,MAAOwW,EAAO+E,OACdpC,OAAO,SACPU,qBAAsB,SAACqB,GAAD,OAASV,EAAU,gBAAKhE,EAAN,CAAc+E,OAAO,gBAAM/E,EAAO+E,OAAd,CAAsBV,SAAUK,QAC5FlB,mBAAoB,SAACkB,GAAD,OAClBV,EAAU,gBAAKhE,EAAN,CAAc+E,OAAO,gBAAM/E,EAAO+E,OAAd,CAAsBjC,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WAElE,IACX,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,gBAE3C,kBAAC,GAAD,CACE1a,KAAMA,EACNN,MAAOwW,EAAOgF,IACdrC,OAAO,MACPU,qBAAsB,SAACqB,GAAD,OAASV,EAAU,gBAAKhE,EAAN,CAAcgF,IAAI,gBAAMhF,EAAOgF,IAAd,CAAmBX,SAAUK,QACtFlB,mBAAoB,SAACkB,GAAD,OAASV,EAAU,gBAAKhE,EAAN,CAAcgF,IAAI,gBAAMhF,EAAOgF,IAAd,CAAmBlC,IAAK4B,EAAI,GAAI3B,IAAK2B,EAAI,WACvF,IACX,kBAACtQ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC0P,GAAA,EAAD,CAASpP,QAAQ,YAAYqP,YAAY,kBAK/C,kBAACpQ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,aAAaC,WAAW,aAAaa,QAAS,GACpF,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAS,EAAGT,MAAI,EAACC,GAAI,IAClCoP,EAAWnO,KAAI,SAACmP,GACf,OAAO,kBAAC,GAAD,CAAQnb,KAAMmb,EAAQjF,OAAQA,EAAQhI,IAAKiN,EAAO5O,YC7hB/DmJ,GAAaC,IAAMC,YAAW,SAAoB3W,EAAO4W,GAC7D,OAAO,kBAACC,GAAA,EAAD,eAAOtL,UAAU,KAAKqL,IAAKA,GAAS5W,OAGhCmc,GAAe,SAACnc,GAC3B,IAAMoc,EAAwBC,iBAAO,MAErCxN,qBAAU,WACR,GAAI7O,EAAM6N,KAAM,CAAC,IACEyO,EAAuBF,EAAhCG,QACmB,OAAvBD,GACFA,EAAmBE,WAGtB,CAACxc,EAAM6N,OAV2B,IAY7B4G,EAAqBgI,qBAAW9L,IAAhC8D,iBAZ6B,cAaSA,EAbT,GAa9BiI,EAb8B,UAerC,OACE,6BACE,kBAAC9O,EAAA,EAAD,CACEC,KAAM7N,EAAM6N,KACZsJ,oBAAqBV,GACrB1I,WAAS,EACTC,SAAS,KACTqJ,QAASrX,EAAM2c,wBACfC,OAAO,QACP9O,kBAAgB,sBAChBwJ,mBAAiB,6BAEjB,kBAACrJ,EAAA,EAAD,CAAaX,GAAG,uBAAhB,iBACA,kBAACY,EAAA,EAAD,CAAe2O,UAAQ,GACD,GAAnBH,EACC,6BACE,kBAAC,GAAD,OAGF,6BACE,kBAACrR,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACW,EAAA,EAAD,sHAQR,kBAACmC,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,CAAMyR,YAAU,EAACjR,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACpC,kBAACe,EAAA,EAAD,CACEC,QAASxM,EAAM2c,wBACfjR,MAAO,CACLqR,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,MARX,kBC/BCsL,GAAiB,SAACjd,GAC7B,IAAMoM,EAAUpM,EAAMoM,SAAW,SAC3BvB,EAAQ7K,EAAM+K,iBAAmB,QAIjC+M,GAHS9X,EAAMiL,OACPjL,EAAM2R,OAASuL,KAAKlD,IAAImD,SAASC,gBAAgBC,aAAe,EAAGjZ,OAAOkZ,YAAc,GAnClF,WAAM,MAGUrd,mBAAS,CAC3C0R,WAAO4L,EACPtS,YAAQsS,IALgB,mBAGnBC,EAHmB,KAGPC,EAHO,KA4B1B,OApBA5O,qBAAU,WAER,SAAS6O,IAEPD,EAAc,CACZ9L,MAAOvN,OAAOkZ,WACdrS,OAAQ7G,OAAOuZ,cAWnB,OANAvZ,OAAOwZ,iBAAiB,SAAUF,GAGlCA,IAGO,kBAAMtZ,OAAOyZ,oBAAoB,SAAUH,MACjD,IAEIF,EASMM,IAMb,OAJAjP,qBAAU,WACR1M,QAAQC,IAAI+a,SAASC,gBAAgBC,eACpC,CAACF,SAASC,gBAAgBC,cAG3B,6BACc,cAAXjR,EACC,yBACEV,MAAO,CACLiG,MAAO,EACP1G,OAAQ,EACR8S,YAAa,QACbC,YAAY,GAAD,OAAKlG,EAAK7M,OAAS,GAAnB,cAA2B6M,EAAKnG,MAAhC,UACXoL,YAAY,GAAD,OAAKlS,EAAL,2CAGF,YAAXuB,EACF,yBACEV,MAAO,CACLiG,MAAO,EACP1G,OAAQ,EACR8S,YAAa,QACbC,YAAY,OAAD,OAASlG,EAAK7M,OAAS,GAAvB,cAA+B6M,EAAKnG,MAApC,MACXoL,YAAY,2BAAD,OAA6BlS,EAA7B,mBAGF,eAAXuB,EACF,yBACEV,MAAO,CACLiG,MAAO,EACP1G,OAAQ,EACR8S,YAAa,QACbC,YAAY,KAAD,OAAOlG,EAAKnG,MAAZ,cAAuBmG,EAAK7M,OAAS,GAArC,QACX8R,YAAY,eAAD,OAAiBlS,EAAjB,+BAGF,WAAXuB,EACF,yBACEV,MAAO,CACLiG,MAAO,EACP1G,OAAQ,EACR8S,YAAa,QACbC,YAAY,GAAD,OAAKlG,EAAK7M,OAAS,GAAnB,kBAA+B6M,EAAKnG,MAApC,MACXoL,YAAY,uCAAD,OAAyClS,MAIxD,K,qBC/EFJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsT,UAAW,CACT/S,QAASP,EAAM2B,QAAQ,IACvBzB,MAAOf,EAAOU,WAeZ0T,GAAY,SAACle,GACjB,IAAMoL,EAAUX,KAChB,OACE,kBAACY,EAAA,EAAD,CACEC,WAAS,EACTE,QAAQ,SACRE,MAAO,CACLX,gBAAgB,GAAD,OAAK/K,EAAM+K,kBAE5BmB,UAAWd,EAAQ6S,WAEnB,kBAAC5S,EAAA,EAAD,CACEQ,MAAI,EACJC,GAAI,GAEJJ,MAAO,CACLyJ,QAAS,IAGX,kBAACgJ,EAAA,EAAD,CAAWnQ,SAAS,KAAKtC,MAAO,CAAEb,MAAM,GAAD,OAAK7K,EAAM6K,OAASf,EAAOU,SAChE,kBAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKiD,MAAM,UAC5BrP,EAAMoe,SAET,wBAAIzM,MAAM,UAGd,kBAACtG,EAAA,EAAD,CACEQ,MAAI,EACJC,GAAI,GAEJJ,MAAO,CACLyJ,QAAS,IAGX,kBAACgJ,EAAA,EAAD,CAAWnQ,SAAS,KAAKtC,MAAO,CAAEb,MAAM,GAAD,OAAK7K,EAAM6K,OAASf,EAAOU,SAChE,kBAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAKiD,MAAOrP,EAAMqe,WAAa,WAChDre,EAAMa,QAIb,kBAACwK,EAAA,EAAD,CACEC,WAAS,EACTE,QAAQ,SAERE,MAAO,CACLyJ,QAAS,IAGX,kBAAC9J,EAAA,EAAD,CAAMQ,MAAI,GACR,kBAACsS,EAAA,EAAD,CAAWnQ,SAAS,KAAKtC,MAAO,CAAEb,MAAM,GAAD,OAAK7K,EAAM6K,OAAS,WACxD7K,EAAMU,cAQN4d,GAAO,WAClB,IAAMlT,EAAUX,KAEhB,OACE,kBAACY,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAACX,EAAD,OAEF,kBAACE,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UAC1D,kBAACJ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAII,UAAWd,EAAQ6S,WACpC,kBAACE,EAAA,EAAD,CAAWnQ,SAAS,MAClB,kBAAC7B,EAAA,EAAD,CAAYC,QAAQ,KAAKiD,MAAM,UAA/B,6BAGA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKiD,MAAM,UAA/B,6GAKJ,kBAAChE,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAgBM,QAAQ,UAAUrB,gBAAiBjB,EAAOM,YAC1D,kBAAC,GAAD,CACEgU,QAAQ,cACRvd,KAAK,4tBAcLkK,gBAAiBjB,EAAOM,YAE1B,kBAAC,GAAD,CAAgBgC,QAAQ,aAAarB,gBAAiBjB,EAAOM,YAC7D,kBAAC,GAAD,CACEgU,QAAQ,mBACRvd,KAAK,srBAeP,kBAAC,GAAD,CAAgBuL,QAAQ,WAAWrB,gBAAiBjB,EAAOM,YAC3D,kBAAC,GAAD,CACEgU,QAAQ,mBACRvd,KAAK,wYAQLkK,gBAAiBjB,EAAOM,YAE1B,kBAAC,GAAD,CAAgBgC,QAAQ,cAAcrB,gBAAiBjB,EAAOM,YAC9D,kBAACiB,EAAA,EAAD,CAAMQ,MAAI,GACR,yBAAKG,IAAKuS,KAAUtS,IAAI,WAAWP,MAAO,CAAET,OAAQ,IAAKC,QAAS,KAClE,kBAACG,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAII,UAAWd,EAAQ6S,WACpC,kBAAC9R,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,MAAM,WAChC,sGAIN,kBAAC,GAAD,CAAgBjD,QAAQ,UAAUrB,gBAAiBjB,EAAOM,YAC1D,kBAAC,GAAD,CACEgU,QAAQ,mCACRvd,KAAK,+tBAgBLkK,gBAAiBjB,EAAOM,YAE1B,kBAAC,GAAD,CAAgBgC,QAAQ,aAAarB,gBAAiBjB,EAAOM,YAC7D,kBAAC,GAAD,CACEgU,QAAQ,kCACRvd,KAAK,gfAWP,kBAAC,GAAD,CAAgBuL,QAAQ,WAAWrB,gBAAiBjB,EAAOM,YAC3D,kBAAC,GAAD,CAAWgU,QAAQ,oDAA8Cvd,KAAK,GAAGkK,gBAAiBjB,EAAOM,WAC/F,kBAACoU,EAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACtS,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,MAAM,WAChC,uBACEtD,KAAK,2FACLoE,OAAO,SACPuO,IAAI,uBAHN,sFASJ,kBAACD,GAAA,EAAD,KACE,kBAACtS,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,MAAM,WAChC,uBACEtD,KAAK,sFACLoE,OAAO,SACPuO,IAAI,uBAHN,mEASJ,kBAACD,GAAA,EAAD,KACE,kBAACtS,EAAA,EAAD,CAAYC,QAAQ,QAAQiD,MAAM,WAChC,uBACEtD,KAAK,uGACLoE,OAAO,SACPuO,IAAI,uBAHN,6EAWR,kBAAC,GAAD,CAAgBtS,QAAQ,cAAcrB,gBAAiBjB,EAAOM,YAC9D,kBAAC,GAAD,CAAWgU,QAAQ,mBACjB,kBAAC,GAAD,W,mDCvOZ,SAASO,KACP,OACE,kBAACxS,EAAA,EAAD,CAAYC,QAAQ,QAAQvB,MAAM,gBAAgBwE,MAAM,UACrD,mBACA,IAAIuP,MAAOC,eAKlB,IAAMpU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmU,MAAO,CACL1O,UAAWzF,EAAM2B,QAAQ,GACzB+J,QAAS,OACT0I,cAAe,SACftT,WAAY,UAEduT,OAAQ,CACN7J,OAAQxK,EAAM2B,QAAQ,GACtBvB,gBAAiBJ,EAAMqL,QAAQiJ,UAAUC,MAE3CC,KAAM,CACJxN,MAAO,OACPvB,UAAWzF,EAAM2B,QAAQ,IAE3B8S,OAAQ,CACNjK,OAAQxK,EAAM2B,QAAQ,EAAG,EAAG,QAInB+S,GAAQ,WACnB,IAAMjU,EAAUX,KAEVxG,EAAUqb,cAHS,EAKDrf,mBAAS,IALR,mBAKlBsf,EALkB,KAKZC,EALY,OAMOvf,mBAAS,IANhB,mBAMlBiC,EANkB,KAMRud,EANQ,OAOiBxf,oBAAS,GAP1B,mBAOlByf,EAPkB,UAuDzB,OACE,kBAACvB,EAAA,EAAD,CAAWhb,UAAU,OAAO6K,SAAS,MACnC,kBAAC2R,GAAA,EAAD,MACA,yBAAKzT,UAAWd,EAAQ0T,OACtB,kBAACc,GAAA,EAAD,CAAQ1T,UAAWd,EAAQ4T,QACzB,kBAAC,KAAD,OAEF,kBAAC7S,EAAA,EAAD,CAAYhJ,UAAU,KAAKiJ,QAAQ,KAAKiD,MAAM,UAA9C,yDAGA,0BAAMnD,UAAWd,EAAQ+T,KAAMU,YAAU,GACvC,kBAAC/G,GAAA,EAAD,CACEvX,MAAOme,EACPI,WACEJ,EAAgB,0CAAsC,GAExDtT,QAAQ,WACR+I,OAAO,SACP4K,UAAQ,EACRhS,WAAS,EACTT,GAAG,QACHJ,MAAM,eACNrJ,KAAK,OAELmc,WAAS,EACTvH,SAAU,SAACzL,GAAD,OAAOwS,EAAQxS,EAAEmD,OAAO1P,QAClCA,MAAO8e,IAET,kBAACzG,GAAA,EAAD,CACEvX,MAAOme,EACPI,WACEJ,EAAgB,0CAAsC,GAExDtT,QAAQ,WACR+I,OAAO,SACP4K,UAAQ,EACRhS,WAAS,EACTlK,KAAK,WACLqJ,MAAM,WACN+S,KAAK,WACL3S,GAAG,WAEHmL,SAAU,SAACzL,GAAD,OAAOyS,EAAYzS,EAAEmD,OAAO1P,QACtCA,MAAOyB,IAGT,kBAACqK,EAAA,EAAD,CAEEwB,WAAS,EACT3B,QAAQ,YACRF,UAAWd,EAAQgU,OACnB5S,QAAS,WArFjBnL,EAAsBW,MAAMud,EAAMrd,GAAUpB,MAC1C,SAAC6B,GAECsB,EAAQoX,KAAK,QAEf,SAAC9Z,GAGCY,QAAQC,IAAI,aA8ERsJ,MAAO,CACLX,gBAAiBjB,EAAOE,aACxBa,MAAOf,EAAOM,YARlB,cAeJ,2CACA,+BACE,4BACE,mCACA,qCAEF,4BACE,mCACA,sCAGJ,kBAAC8V,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACxB,GAAD,S,uIC3IFlU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,KAG1B1B,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAET0O,SAAU,CACRtD,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAET2O,QAAS,CACPrV,OAAQ,IACR0G,MAAO,SAIL4O,GAAWC,aAAe,CAC9BC,UAAW,CACTC,YAAa,CACXN,KAAM,CACJvV,MAAO,YACP,WAAY,CACVA,MAAO,QAET,cAAe,CACbA,MAAO,gBAOX8V,GAAaC,aAAW,CAC5BR,KAAM,CACJvV,MAAO,UACP,YAAa,CACXA,MAAO,YAGXgW,QAAS,IAPQD,EAQhB,SAAC5gB,GAAD,OAAW,kBAAC8gB,GAAA,EAAD,eAAOjW,MAAM,WAAc7K,OA2N1B+gB,GAzNU,WACvB,IAAM3V,EAAUX,KADa,EAGSxK,mBAAS,GAHlB,mBAGtB+gB,EAHsB,KAGTC,EAHS,OAIqBhhB,mBAAS,GAJ9B,mBAItBihB,EAJsB,KAIHC,EAJG,KAMvBC,EAAwB,SAAC1I,GAC7BuI,EAAevI,EAAMvI,OAAO1P,QAGxB4gB,EAA6B,SAAC3I,GAClCyI,EAAqBzI,EAAMvI,OAAO1P,QAXP,IAiGrB4S,EAAoBoJ,qBAAW9L,IAA/B0C,gBAjGqB,cAkGeA,EAlGf,GAkGtBiO,EAlGsB,KAkGNhO,EAlGM,KAwGvB4D,EAAc,WAClB5D,GAAkB,IAzGS,EA4GOrT,mBAAS,GA5GhB,mBA4GtB8O,EA5GsB,KA4GVyF,EA5GU,KA6GvB+M,EA9FG,CAAC,GAAI,GAAI,IAwGZC,EAAc,WAClBhN,EAAc,IAGhB,OACE,6BACE,kBAACjI,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAzBhB,WACtB8G,GAAkB,KAyBd,kBAAC,KAAD,CACE5H,MAAO,CAAEmK,YAAa,KAF1B,YAMA,kBAACjI,EAAA,EAAD,CACEC,KAAMyT,EACNjK,QAASH,EACTpJ,kBAAgB,qBAEhB,kBAACQ,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAAS0K,KAGb,kBAACjJ,EAAA,EAAD,CAAaX,GAAG,qBAAhB,0BAEA,kBAACY,EAAA,EAAD,KACE,kBAAC,KAAD,CAAkBvD,MAAO4V,IACvB,6BACE,kBAACzR,EAAA,EAAD,CAASC,WAAYA,GAClBwS,EAAMxU,KAAI,SAACG,EAAOuU,GACjB,IACMC,EAAa,GAEnB,OACE,kBAAC1S,EAAA,EAAD,eAAMC,IAAK/B,GAJK,IAKd,kBAACgC,EAAA,EAAcwS,EAAaxU,QAKpC,6BACG6B,IAAewS,EAAMI,OACpB,6BACE,kBAACxV,EAAA,EAAD,CAAYD,UAAWd,EAAQwW,cAA/B,kFAKA,kBAACvW,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACe,EAAA,EAAD,CACEC,QAASgV,EACTtV,UAAWd,EAAQiV,UAFrB,sBAMA,kBAAC9T,EAAA,EAAD,CACEC,QAAS,WACPgV,IACAtK,KAEFhL,UAAWd,EAAQiV,UALrB,oBAYJ,6BACE,kBAAClU,EAAA,EAAD,CAAYD,UAAWd,EAAQwW,cAzKjD,SAAwBlH,GACtB,OAAQA,GACN,KAAK,EACH,OACE,yBAAKxO,UAAWd,EAAQkV,SACtB,kBAACjV,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IAAzB,6EAEW,MAIjB,KAAK,EACH,OACE,yBAAKI,UAAWd,EAAQkV,SACtB,kBAACjV,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IAAzB,yEAGA,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAACoO,GAAA,EAAD,CAAa/W,UAAU,YACrB,kBAAC0e,GAAA,EAAD,CAAW1e,UAAU,WACrB,kBAAC2e,GAAA,EAAD,CACEC,aAAW,eACXthB,MAAOugB,EACPvI,SAAU2I,GAEV,kBAACY,GAAA,EAAD,CACEvhB,MAAM,IACNwhB,QAAS,kBAACtB,GAAD,MACTzT,MAAM,OAER,kBAAC8U,GAAA,EAAD,CACEvhB,MAAM,IACNwhB,QAAS,kBAACtB,GAAD,MACTzT,MAAM,aAOpB,KAAK,EACH,OACE,yBAAKhB,UAAWd,EAAQkV,SACtB,kBAACjV,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IAAzB,6EAIA,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAACoO,GAAA,EAAD,CAAa/W,UAAU,YACrB,kBAAC0e,GAAA,EAAD,CAAW1e,UAAU,WACrB,kBAAC2e,GAAA,EAAD,CACEC,aAAW,eACXthB,MAAOygB,EACPzI,SAAU4I,GAEV,kBAACW,GAAA,EAAD,CACEvhB,MAAM,IACNwhB,QAAS,kBAACtB,GAAD,MACTzT,MAAM,OAER,kBAAC8U,GAAA,EAAD,CACEvhB,MAAM,IACNwhB,QAAS,kBAACtB,GAAD,MACTzT,MAAM,aAOpB,QACE,OACE,yBAAKhB,UAAWd,EAAQkV,SACtB,kBAACjV,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,OAiGdoW,CAAenT,IAElB,6BACE,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACe,EAAA,EAAD,CACE4V,SAAyB,IAAfpT,EACVvC,QA/EL,WACjBgI,GAAc,SAAC4N,GAAD,OAAoBA,EAAiB,MA+E7BlW,UAAWd,EAAQiV,UAHrB,aAOA,kBAAC9T,EAAA,EAAD,CACEC,QAzFL,WACjBgI,GAAc,SAAC4N,GAAD,OAAoBA,EAAiB,MAyF7BlW,UAAWd,EAAQiV,UAFrB,oB,qBC1QlB5V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SAuSI0Q,GAnSM,WACnB,IAAMjX,EAAUX,KADS,EAQrBgS,qBAAW9L,IAJbkC,EAJuB,EAIvBA,aACAhC,EALuB,EAKvBA,QACAE,EANuB,EAMvBA,yBACAoD,EAPuB,EAOvBA,gBAPuB,cAUWtB,EAVX,GAUlByP,EAVkB,KAUNxP,EAVM,mBAWGjC,EAXH,GAWlB0R,EAXkB,yBAerBxR,EAfqB,IAavByR,EAbuB,yBAgBiBrO,EAhBjB,IAgBlBsO,EAhBkB,KAgBHrO,EAhBG,KAsBnBsO,EAAsB,WAC1B5P,GAAc,IAvBS,EA0BG7S,mBAAS,CACnC+G,SAAU,GACV2b,aAAc,GACdpR,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,OAAQ,GACRzG,OAAQ,GACR0G,MAAO,GACPC,MAAO,GACPC,KAAM,KACNC,OAAQ,GACRC,YAAa,IACbC,OAAQ,GACRC,YAAa,SAxCU,mBA0BlB2Q,EA1BkB,KA0BVC,EA1BU,KA2CnBC,EAAqB,SAACpK,GAC1BmK,EAAU,gBAAKD,EAAN,gBAAelK,EAAMvI,OAAO7C,GAAKoL,EAAMvI,OAAO1P,UA5ChC,EA+CmBR,oBAAS,GA/C5B,mBA+ClB8iB,EA/CkB,KA+CFC,EA/CE,OAgDmB/iB,oBAAS,GAhD5B,mBAgDlBgjB,EAhDkB,KAgDFC,EAhDE,KAgFnBC,EAAS,WACb,IAAM7gB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnB2E,SAAU4b,EAAO5b,SACjB2b,aAAcC,EAAOD,aACrBpR,WAAYqR,EAAOrR,WACnBC,OAAQoR,EAAOpR,OACfC,cAAe2R,SAASR,EAAOnR,eAC/BC,OAAQ2R,WAAWT,EAAOlR,QAC1BzG,OAAQoY,WAAWT,EAAO3X,QAC1B0G,MAAO0R,WAAWT,EAAOjR,OACzBC,MAAOyR,WAAWT,EAAOhR,OACzBC,KAAM+Q,EAAO/Q,KACbC,OAAQuR,WAAWT,EAAO9Q,QAC1BC,YAAa6Q,EAAO7Q,YACpBC,OAAQqR,WAAWT,EAAO5Q,QAC1BC,YAAa2Q,EAAO3Q,YACpBqR,UAAW,EACXzS,QAAS0R,EACTgB,QAASf,EACTlQ,OAAQ,IAEVkR,SAAU,UAGZ9gB,MAAM,OAAQJ,GACXxB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,MAEzC6S,GAAkBqO,IAGpB,OACE,6BACE,kBAAClW,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAtGb,WACzBsG,GAAc,KAsGV,kBAAC,KAAD,CAAYpH,MAAO,CAAEmK,YAAa,KADpC,aAIA,kBAACjI,EAAA,EAAD,CACEC,KAAMyU,EACNjL,QAASqL,EACT5U,kBAAgB,qBAEhB,kBAACQ,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAASkW,KAGb,kBAACzU,EAAA,EAAD,CAAaX,GAAG,qBAAhB,gCAGA,kBAACY,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,0BAAMU,UAAWd,EAAQgV,KAAMP,YAAU,EAAC6D,aAAa,OACrD,kBAAC5K,GAAA,EAAD,CACEvX,MAAOwhB,EACPjD,WACEiD,EAAiB,uCAAsC,GAEzDhD,UAAQ,EACRzS,GAAG,WACHJ,MAAM,WACNzM,MAAOmiB,EAAO5b,SACdyR,SAAUqK,EACV3N,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,eACHJ,MAAM,eACNzM,MAAOmiB,EAAOD,aACdlK,SAAUqK,EACV3N,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,aACHJ,MAAM,cACNzM,MAAOmiB,EAAOrR,WACdkH,SAAUqK,EACV3N,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,SACHJ,MAAM,UACNzM,MAAOmiB,EAAOpR,OACdiH,SAAUqK,EACV3N,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,SACHJ,MAAM,UACNzM,MAAOmiB,EAAO3X,OACdwN,SAAUqK,EACV3N,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,QACHJ,MAAM,SACNzM,MAAOmiB,EAAOjR,MACd8G,SAAUqK,EACV3N,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,QACHJ,MAAM,QACNzM,MAAOmiB,EAAOhR,MACd6G,SAAUqK,EACV3N,OAAO,WAGT,kBAAC2D,GAAA,EAAD,CACExL,GAAG,OACHJ,MAAM,UACNzM,MAAOmiB,EAAO/Q,KACd4G,SAAUqK,EACV3N,OAAO,SACPgN,UAAQ,IAGV,kBAACrJ,GAAA,EAAD,CACExL,GAAG,SACHJ,MAAM,UACNzM,MAAOmiB,EAAO9Q,OACd2G,SAAUqK,EACV3N,OAAO,SACP5T,MAAOwhB,EACPjD,WACEiD,EACI,oFACA,GAENhD,UAAQ,IAGV,kBAACjH,GAAA,EAAD,CACExL,GAAG,cACHJ,MAAM,aACNzM,MAAOmiB,EAAO7Q,YACd0G,SAAUqK,EACV3N,OAAO,SACPgN,UAAQ,IAGV,kBAACrJ,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,SACHJ,MAAM,UACNzM,MAAOmiB,EAAO5Q,OACdyG,SAAUqK,EACV3N,OAAO,WAGT,kBAAC2D,GAAA,EAAD,CACExL,GAAG,cACHJ,MAAM,aACNzM,MAAOmiB,EAAO3Q,YACdwG,SAAUqK,EACV3N,OAAO,SACPgN,UAAQ,MAId,kBAAC9W,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACZ,IACD,kBAACS,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAASkW,GAA7C,cAIF,kBAACrX,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAtO5B,WAClB,IAAImX,EAAgB,aAAaC,KAAKhB,EAAO9Q,QACzC+R,EAAkB,QAAQD,KAAKhB,EAAO9Q,QACtCgS,EAAgB,aAAaF,KAAKhB,EAAO3X,QACzC8Y,EAAkB,QAAQH,KAAKhB,EAAO3X,QACtC+Y,EAAe,aAAaJ,KAAKhB,EAAOjR,OACxCsS,EAAiB,QAAQL,KAAKhB,EAAOjR,OACrCuS,EAAe,aAAaN,KAAKhB,EAAOhR,OACxCuS,EAAiB,QAAQP,KAAKhB,EAAOhR,OACrCwS,EAAgB,aAAaR,KAAKhB,EAAO5Q,QACzCqS,EAAkB,QAAQT,KAAKhB,EAAO5Q,QAEnB,IAAnB4Q,EAAO5b,UAAmC,IAAjB4b,EAAO9Q,OAClCkR,GAAkB,IAEhBW,IAAkBE,GACF,IAAjBjB,EAAO3X,SAAiB6Y,IAAkBC,GAC1B,IAAhBnB,EAAOjR,QAAgBqS,IAAiBC,GACxB,IAAhBrB,EAAOhR,QAAgBsS,IAAiBC,GACvB,IAAjBvB,EAAO5Q,SAAiBoS,IAAkBC,EAE3CnB,GAAkB,IAElBF,GAAkB,GAClBE,GAAkB,GAClBC,IACAT,OA4MQ,cAIF,kBAACrX,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,S,6BC/RrBrB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SA4II2S,GAxIM,WACnB,IAAMlZ,EAAUX,KADS,EAarBgS,qBAAW9L,IATb9K,EAJuB,EAIvBA,kBAEA4M,GANuB,EAKvBP,aALuB,EAMvBO,oBACA5B,EAPuB,EAOvBA,QAEAQ,GATuB,EAQvB0B,YARuB,EASvB1B,iBACA4B,EAVuB,EAUvBA,cACAoB,EAXuB,EAWvBA,mBACAE,EAZuB,EAYvBA,YAZuB,cAeWA,EAfX,GAeNC,GAfM,yBAgBuB3O,EAhBvB,GAgBAC,GAhBA,yBAiBuB2M,EAjBvB,4BAkBG5B,EAlBH,IAkBlB0R,EAlBkB,yBAmBetP,EAnBf,IAmBJC,GAnBI,aAoBKjT,oBAAS,GApBd,gCAqBeA,mBAAS,KArBxB,mBAqBlB6a,EArBkB,KAqBJyJ,EArBI,mBAsBmBlT,EAtBnB,GAsBlBmT,EAtBkB,aAuBiBvkB,oBAAS,IAvB1B,mBAuBlBwkB,EAvBkB,KAuBHC,EAvBG,mBAwBuBrQ,EAxBvB,GAwBAsQ,GAxBA,WA0BzB9V,qBAAU,WACRnM,MAAM,gBAAkB6f,GACrBzhB,MAAK,SAACoX,GACL,OAAOA,EAAIC,UAEZrX,MAAK,SAAC8jB,GACLziB,QAAQC,IAAIwiB,GACZL,EAAgBK,EAAE3N,QAAO,SAAC2N,GAAD,OAAOA,EAAEtX,KAAOkX,MACzCriB,QAAQC,IAAI0Y,GACZ5H,GAAgB,QAEnB,IArCsB,MAuCCjT,mBAAS,CACjC,CAAE4D,KAAM,KAAMkM,MAAO,WACrB,CAAElM,KAAM,WAAYkM,MAAO,YAC3B,CAAElM,KAAM,aAAckM,MAAO,eAC7B,CAAElM,KAAM,eAAgBkM,MAAO,YAC/B,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,gBAAiBkM,MAAO,cAChC,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,QAASkM,MAAO,UACxB,CAAElM,KAAM,QAASkM,MAAO,SACxB,CAAElM,KAAM,OAAQkM,MAAO,WACvB,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,cAAekM,MAAO,cAC9B,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,cAAekM,MAAO,gBAC9B,CAAElM,KAAM,YAAakM,MAAO,aAhBvB8U,EAvCkB,sBA0DU5kB,mBAAS,CAC1C,aACA,eACA,SACA,gBACA,SACA,SACA,QACA,QACA,OACA,SACA,cACA,SACA,cACA,cAdK6kB,EA1DkB,sBA2EO7kB,mBAAS,CAAC,CAAE8kB,WAAY,KAAMpT,MAAO,OAA9DqT,EA3EkB,sBA6ES/kB,mBAAS,IA7ElB,mBA6ElBglB,EA7EkB,KA6EPC,EA7EO,KAyFzB,OACE,6BACE,kBAAC,KAAD,CAAgBC,KAAMrK,EAAcpO,QAASmY,GAC3C,kBAAC,KAAD,CACEI,UAAWA,EACXG,kBAAmBF,IAErB,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAgBG,eAAgB,KAChC,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAOC,iBAAkBN,IACzB,kBAAC,KAAD,MACA,kBAAC,KAAD,CACEF,yBAA0BA,IAE5B,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAgBS,qBAAmB,KAErC,kBAACla,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAlCtB,WACI,GAApByY,EAAUtD,QACZ7b,EAAoBgV,EAAamK,GAAW3X,IAC5CqX,EAAoB,YACpBnQ,EAAc,IAEdkQ,GAAiB,KA4Bb,yBAGCD,EACC,8BAEA,yBAAK/Y,MAAO,CAAEb,MAAO,QACnB,kBAAC,KAAD,CACEa,MAAO,CACL8Z,SAAU,QACV3P,YAAa,MAED,IANlB,iCAWJ,kBAACxK,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,O,+BCjKjBrB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SAgTI8T,GA5SS,SAACC,GACvB,IAAMta,EAAUX,KADoB,EAWhCgS,qBAAW9L,IAPb8B,EAJkC,EAIlCA,mBACA1B,EALkC,EAKlCA,yBACAoD,EANkC,EAMlCA,gBACAtD,EAPkC,EAOlCA,QACAwD,EARkC,EAQlCA,mBACAE,EATkC,EASlCA,YACAI,EAVkC,EAUlCA,iBAVkC,cAaUA,EAbV,GAa7BgR,EAb6B,KAaZ/Q,EAbY,mBAcAL,EAdA,GAcjBC,GAdiB,yBAeY/B,EAfZ,4BAmBhC1B,EAnBgC,IAiBlCyR,EAjBkC,yBAoBMrO,EApBN,IAoB7BsO,EApB6B,KAoBdrO,EApBc,mBAqBRvD,EArBQ,GAqB7B0R,EArB6B,yBAsBYlO,EAtBZ,IAsBXsQ,GAtBW,aAwBE1kB,mBAAS,CAC7C+G,SAAU,GACV2b,aAAc,GACdpR,WAAY,GACZC,OAAQ,GACRC,cAAe,GACfC,OAAQ,GACRzG,OAAQ,GACR0G,MAAO,GACPC,MAAO,GACPC,KAAM,KACNC,OAAQ,GACRC,YAAa,IACbC,OAAQ,GACRC,YAAa,SAtCqB,mBAwB7BgG,EAxB6B,KAwBhB9F,EAxBgB,OAyCJlS,mBAAS,KAzCL,mBAyC7B2lB,EAzC6B,KAyCnBC,EAzCmB,KA2C9BC,EAA0B,SAACpN,GAC/BvG,EAAe,gBAAK8F,EAAN,gBAAoBS,EAAMvI,OAAO7C,GAAKoL,EAAMvI,OAAO1P,UA5C/B,EAmDQR,oBAAS,GAnDjB,mBAmD7B8iB,EAnD6B,KAmDbC,EAnDa,OAoDQ/iB,oBAAS,GApDjB,mBAoD7BgjB,EApD6B,KAoDbC,EApDa,KAsF9B6C,EAAc,WAClB,IAAMzjB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnB2E,SAAUiR,EAAYjR,SACtB2b,aAAc1K,EAAY0K,aAC1BpR,WAAY0G,EAAY1G,WACxBC,OAAQyG,EAAYzG,OACpBC,cAAe2R,SAASnL,EAAYxG,eACpCC,OAAQ2R,WAAWpL,EAAYvG,QAC/BzG,OAAQoY,WAAWpL,EAAYhN,QAC/B0G,MAAO0R,WAAWpL,EAAYtG,OAC9BC,MAAOyR,WAAWpL,EAAYrG,OAC9BC,KAAMoG,EAAYpG,KAClBC,OAAQuR,WAAWpL,EAAYnG,QAC/BC,YAAakG,EAAYlG,YACzBC,OAAQqR,WAAWpL,EAAYjG,QAC/BC,YAAagG,EAAYhG,YACzBqR,UAAWF,SAASwC,GACpB/U,QAAS0R,EACTgB,QAASf,EACTlQ,OAAQ,IAEVkR,SAAU,UAGZ9gB,MAAM,OAAQJ,GACXxB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,MAEzC6S,GAAkBqO,IAGpB,OACE,6BACE,0BAAMvW,UAAWd,EAAQgV,KAAMP,YAAU,EAAC6D,aAAa,OACrD,kBAAC5K,GAAA,EAAD,CACEvX,MAAOwhB,EACPjD,WAAYiD,EAAiB,uCAAsC,GACnEhD,UAAQ,EACRzS,GAAG,WACHJ,MAAM,WACNzM,MAAOwX,EAAYjR,SACnByR,SAAUqN,EACV3Q,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,eACHJ,MAAM,eACNzM,MAAOwX,EAAY0K,aACnBlK,SAAUqN,EACV3Q,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,aACHJ,MAAM,cACNzM,MAAOwX,EAAY1G,WACnBkH,SAAUqN,EACV3Q,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,SACHJ,MAAM,UACNzM,MAAOwX,EAAYzG,OACnBiH,SAAUqN,EACV3Q,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,SACHJ,MAAM,UACNzM,MAAOwX,EAAYhN,OACnBwN,SAAUqN,EACV3Q,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,QACHJ,MAAM,SACNzM,MAAOwX,EAAYtG,MACnB8G,SAAUqN,EACV3Q,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,QACHJ,MAAM,QACNzM,MAAOwX,EAAYrG,MACnB6G,SAAUqN,EACV3Q,OAAO,WAGT,kBAAC2D,GAAA,EAAD,CACExL,GAAG,OACHJ,MAAM,UACNzM,MAAOwX,EAAYpG,KACnB4G,SAAUqN,EACV3Q,OAAO,SACPgN,UAAQ,IAGV,kBAACrJ,GAAA,EAAD,CACExL,GAAG,SACHJ,MAAM,UACNzM,MAAOwX,EAAYnG,OACnB2G,SAAUqN,EACV3Q,OAAO,SACP5T,MAAOwhB,EACPjD,WACEiD,EACI,oFACA,GAENhD,UAAQ,IAGV,kBAACjH,GAAA,EAAD,CACExL,GAAG,cACHJ,MAAM,aACNzM,MAAOwX,EAAYlG,YACnB0G,SAAUqN,EACV3Q,OAAO,SACPgN,UAAQ,IAGV,kBAACrJ,GAAA,EAAD,CACEvX,MAAO0hB,EACPnD,WACEmD,EACI,iEACA,GAEN3V,GAAG,SACHJ,MAAM,UACNzM,MAAOwX,EAAYjG,OACnByG,SAAUqN,EACV3Q,OAAO,WAGT,kBAAC2D,GAAA,EAAD,CACExL,GAAG,cACHJ,MAAM,aACNzM,MAAOwX,EAAYhG,YACnBwG,SAAUqN,EACV3Q,OAAO,SACPgN,UAAQ,IAGV,kBAACjI,GAAA,EAAD,CAAa/W,UAAU,YACrB,kBAAC0e,GAAA,EAAD,CAAW1e,UAAU,UAClB,IADH,4BAGE,kBAAC6iB,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,2KAOF,kBAAC,KAAD,CAAUV,MAAO,CAAE6C,WAAY,IAAMiX,SAAS,YAGlD,kBAAC1D,GAAA,EAAD,CACEC,aAAW,SACXthB,MAAOmlB,EACPnN,SAlOgB,SAACC,GACzBmN,EAAYnN,EAAMvI,OAAO1P,SAmOjB,kBAACuhB,GAAA,EAAD,CAAkBvhB,MAAM,IAAIwhB,QAAS,kBAACnB,GAAA,EAAD,MAAW5T,MAAM,OACtD,kBAAC8U,GAAA,EAAD,CAAkBvhB,MAAM,IAAIwhB,QAAS,kBAACnB,GAAA,EAAD,MAAW5T,MAAM,YAK5D,kBAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEL,UAAWd,EAAQR,QACnB4B,QAAS,YAxOI,WACrB,IAAImX,EAAgB,aAAaC,KAAK3L,EAAYnG,QAC9C+R,EAAkB,QAAQD,KAAK3L,EAAYnG,QAC3CgS,EAAgB,aAAaF,KAAK3L,EAAYhN,QAC9C8Y,EAAkB,QAAQH,KAAK3L,EAAYhN,QAC3C+Y,EAAe,aAAaJ,KAAK3L,EAAYtG,OAC7CsS,EAAiB,QAAQL,KAAK3L,EAAYtG,OAC1CuS,EAAe,aAAaN,KAAK3L,EAAYrG,OAC7CuS,EAAiB,QAAQP,KAAK3L,EAAYrG,OAC1CwS,EAAgB,aAAaR,KAAK3L,EAAYjG,QAC9CqS,EAAkB,QAAQT,KAAK3L,EAAYjG,QAEnB,IAAxBiG,EAAYjR,UAAwC,IAAtBiR,EAAYnG,OAC5CkR,GAAkB,IAEhBW,IAAkBE,GACG,IAAtB5L,EAAYhN,SAAiB6Y,IAAkBC,GAC1B,IAArB9L,EAAYtG,QAAgBqS,IAAiBC,GACxB,IAArBhM,EAAYrG,QAAgBsS,IAAiBC,GACvB,IAAtBlM,EAAYjG,SAAiBoS,IAAkBC,EAEhDnB,GAAkB,IAElBF,GAAkB,GAClBE,GAAkB,GAClB6C,IACAnR,GAAoB+Q,GACpBhB,EAAoB,OACpBnQ,EAAc,IA6MNyR,KAHJ,oBAQCN,EAAkB,yDAAsC,+BAE3D,kBAACta,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,O,8BC3TvB,SAASoa,GAASlmB,GAAQ,IAChBU,EAAqCV,EAArCU,SAAUD,EAA2BT,EAA3BS,MAAOghB,EAAoBzhB,EAApByhB,MAAU0E,EADZ,YACsBnmB,EADtB,8BAGvB,OACE,uCACEomB,KAAK,WACLC,OAAQ5lB,IAAUghB,EAClBnU,GAAE,0BAAqBmU,GACvB3T,kBAAA,qBAA+B2T,IAC3B0E,GAEH1lB,IAAUghB,GACT,kBAACvB,GAAA,EAAD,CAAKoG,EAAG,GACN,kBAACna,EAAA,EAAD,KAAazL,KAavB,SAAS6lB,GAAU9E,GACjB,MAAO,CACLnU,GAAG,cAAD,OAAgBmU,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMhX,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJoG,SAAU,EACVzb,gBAAiBJ,EAAMqL,QAAQrK,WAAWmT,OAE5C2H,OAAQ,CACNxb,OAAQ,GACRF,gBAAiB,eAIN,SAAS2b,KACtB,IAAMtb,EAAUX,KADmB,EAETiM,IAAMzW,SAAS,GAFN,mBAE5BQ,EAF4B,KAErBkmB,EAFqB,KAQnC,OACE,yBAAKza,UAAWd,EAAQgV,MACtB,kBAACwG,GAAA,EAAD,CAAQpQ,SAAS,SAAStK,UAAWd,EAAQqb,QAC3C,kBAACI,GAAA,EAAD,CACEpmB,MAAOA,EACPgY,SATa,SAACC,EAAOC,GAC3BgO,EAAShO,IASHoJ,aAAW,sBACX+E,UAAQ,GAER,kBAACC,GAAA,EAAD,eAAK7Z,MAAM,wBAA2BqZ,GAAU,KAChD,kBAACQ,GAAA,EAAD,eAAK7Z,MAAM,kBAAqBqZ,GAAU,OAG9C,kBAACL,GAAD,CAAUzlB,MAAOA,EAAOghB,MAAO,GAC7B,kBAACuF,GAAD,OAEF,kBAACd,GAAD,CAAUzlB,MAAOA,EAAOghB,MAAO,GAC7B,kBAAC,GAAD,Q,yBClDFhX,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAET0O,SAAU,CACRtD,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAETuD,YAAa,CACXE,SAAU,IACVxJ,aAAc,IAEhBqb,UAAW,CACT1Y,WAAY,GACZsH,YAAa,GACbzF,UAAW,GACXxE,aAAc,GACdX,OAAQ,IACR0G,MAAO,SAIL4O,GAAWC,aAAe,CAC9BxK,QAAS,CACPkR,OAAQ,CACN/E,SAAU,UAGd1B,UAAW,CACTC,YAAa,CACXN,KAAM,CACJvV,MAAO,YACP,WAAY,CACVA,MAAO,QAET,cAAe,CACbA,MAAO,gBA+YFsc,GAxYW,WACxB,IAAM/b,EAAUX,KADc,EAa1BgS,qBAAW9L,IAVb8B,EAH4B,EAG5BA,mBACA5M,EAJ4B,EAI5BA,kBACAwL,EAL4B,EAK5BA,gBACAkC,EAN4B,EAM5BA,aACAE,EAP4B,EAO5BA,iBACAY,EAR4B,EAQ5BA,mBACAtB,EAT4B,EAS5BA,YACAwB,EAV4B,EAU5BA,YACAE,EAX4B,EAW5BA,iBACAE,EAZ4B,EAY5BA,iBAZ4B,cAegBA,EAfhB,GAevBgR,EAfuB,yBAgBMpR,EAhBN,IAgBvBxF,EAhBuB,KAgBXyF,EAhBW,mBAiBkB/B,EAjBlB,GAiBvB2U,EAjBuB,KAiBL1U,EAjBK,mBAkBQa,EAlBR,GAkBvB8T,EAlBuB,yBAmBkBxhB,EAnBlB,IAmBvByhB,EAnBuB,KAmBLxhB,EAnBK,mBAoBcuL,EApBd,GAoBvBmT,EApBuB,yBAqBc/Q,EArBd,IAqBvB8T,EArBuB,aAsBItnB,mBAAS,KAtBb,mBAsBvBunB,EAtBuB,KAsBZC,EAtBY,mBAuBkBpT,EAvBlB,GAuBvBqT,EAvBuB,yBAwBM3U,EAxBN,IAwBXC,GAxBW,yBA0BgByB,EA1BhB,GA0BvBiI,EA1BuB,KAgCxBxF,GAhCwB,KAgCV,WAClBxE,GAAoB,KAUlBiV,EAAS,IAAIC,IA3Ca,GA6CY3nB,oBAAS,GA7CrB,qBA6CvB4nB,GA7CuB,MA6CRC,GA7CQ,MA+C9BjZ,qBAAU,WACiB,QAArB6Y,GACFhlB,MAAM,eACH5B,MAAK,SAACoX,GACL,OAAOA,EAAIC,UAEZrX,MAAK,SAAC8jB,GACLziB,QAAQC,IAAIwiB,GACZ9e,EAAoB8e,QAIzB,CAACe,IA8MJ,IAAMpE,GA9IG,CAAC,QAAS,qBAAmB,yBAwJhCC,GAAc,WAClBhN,EAAc,IAGhB,OACE,6BACE,kBAACjI,EAAA,EAAD,CAAQL,UAAWd,EAAQiV,SAAU7T,QA7PjB,WACtBkG,GAAoB,KA6PhB,kBAAC,KAAD,CAAShH,MAAO,CAAEmK,YAAa,KADjC,iBAIA,kBAACjI,EAAA,EAAD,CACEC,KAAMuZ,EACN/P,QAAS,WACPH,IACAsK,MAEF1T,kBAAgB,qBAEhB,kBAACQ,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAAS,WACP0K,IACAsK,SAIN,kBAACvT,EAAA,EAAD,CAAaX,GAAG,qBAAhB,4BACA,kBAACY,EAAA,EAAD,KACE,kBAAC,KAAD,CAAkBvD,MAAO4V,IACH,GAAnB7D,EACC,6BACE,kBAAC5N,EAAA,EAAD,CAASC,WAAYA,GAClBwS,GAAMxU,KAAI,SAACG,EAAOuU,GACjB,IACMC,EAAa,GAEnB,OACE,kBAAC1S,EAAA,EAAD,eAAMC,IAAK/B,GAJK,IAKd,kBAACgC,EAAA,EAAcwS,EAAaxU,QAKpC,6BACG6B,IAAewS,GAAMI,OACpB,6BACE,kBAACxV,EAAA,EAAD,CAAYD,UAAWd,EAAQwW,cAA/B,kFAKA,kBAACvW,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACe,EAAA,EAAD,CACEC,QAAS,WACPgV,KACAtK,KAEFhL,UAAWd,EAAQiV,UALrB,oBAYJ,6BACE,kBAAClU,EAAA,EAAD,CAAYD,UAAWd,EAAQwW,cAvNnD,SAAwBlH,GACtB,OAAQA,GACN,KAAK,EACH,OACE,6BACE,kBAACrP,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IAAzB,uHAMN,KAAK,EACH,OACE,6BACE,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAAC,GAAD,QAIR,KAAK,EACH,OACE,6BACE,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACkE,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,oBAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3CmV,KAIP,kBAAC9U,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,6BAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3CiY,MAKT,kBAACnb,EAAA,EAAD,CAAYT,MAAO,CAAE0E,UAAW,GAAIxE,aAAc,KAAlD,kHAIA,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIP,UAAU,UACpC8b,EACEpQ,QACC,SAACoQ,GAAD,OAAiBA,EAAYU,WAAaR,KAE3CS,QAAO,SAACC,EAAKpc,GAKZ,OAJK8b,EAAOO,IAAIrc,EAAKsc,UACnBR,EAAOS,IAAIvc,EAAKsc,OAAQtc,GACxBoc,EAAI5M,KAAKxP,IAEJoc,IACN,IAEFlb,KAAI,SAACsa,GAAD,OACH,6BACE,kBAAChc,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIP,UAAU,OACrC,kBAACF,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACK,EAAA,EAAD,KACGkb,EAAYc,OADf,IACwBd,EAAYrgB,WAGtC,kBAACqE,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACoO,GAAA,EAAD,CAAahO,UAAWd,EAAQ8J,aAC9B,kBAACiF,GAAA,EAAD,CAAY7M,GAAG,4BAAf,kBAGA,kBAAC8M,GAAA,EAAD,CACEC,QAAQ,2BACR/M,GAAI+Z,EAAYc,OAChB1nB,MAAO+mB,EAAUH,EAAYc,QAC7B1P,SAAU,SAACzL,GAlLR,IAAC0L,EAAOpL,EAAPoL,EAmLmB1L,EAnLZM,EAmLe+Z,EAAYc,OAlL9DhmB,QAAQC,IAAIkL,GACZnL,QAAQC,IAAIsW,EAAMvI,OAAO1P,OACzBgnB,EAAa,gBAAKD,EAAN,gBAAkBla,EAAKoL,EAAMvI,OAAO1P,WAmLxB,kBAAC8Z,GAAA,EAAD,CAAU9Z,MAAO,GAAjB,yBACA,kBAAC8Z,GAAA,EAAD,CAAU9Z,MAAO,GAAjB,2BACA,kBAAC8Z,GAAA,EAAD,CAAU9Z,MAAO,GAAjB,+BAGA,kBAAC8Z,GAAA,EAAD,CAAU9Z,MAAO,GAAjB,0CAUhB,kBAAC4K,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACe,EAAA,EAAD,CACEL,UAAWd,EAAQR,QACnB4B,QAAS,YA/KU,WAC/B,GAA0B,QAArBkb,EAAoD,aAArBA,EAAkC,CACpE,IAAMW,EAAW,GAEjBhB,EACGpQ,QAAO,SAACoQ,GAAD,OAAiBA,EAAYU,WAAaR,KACjDxa,KAAI,SAACsa,GAAD,OAAiBgB,EAAShN,KAAKgM,EAAYc,WAElD,IAAMG,EAAe,aAAO,IAAIV,IAAIS,IAEpC,GAAIC,EAAgB3G,QAAUpK,OAAOC,KAAKgQ,GAAW7F,OAAQ,CAC3D2G,EAAgBvb,KAAI,SAACwb,GAEnB,IAAMC,EAAoB,CACxBjmB,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnBomB,KAAMrF,SAASoB,GACfkE,MAAOtF,SAASkE,GAChBqB,MAAOvF,SAASmF,GAChBK,SAAUxF,SAASoE,EAAUe,MAE/B/E,SAAU,UAGZ9gB,MAAM,OAAQ8lB,GACX1nB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,SAG3C,IAAMsnB,EAAoB,CACxBtmB,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnB8lB,OAAQb,EACRwB,cAAetE,IAEjBhB,SAAU,UAGZ9gB,MAAM,OAAQmmB,GACX/nB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,MAEzCyR,GAAc,GACdwB,EAAc+M,GAAMI,aAEpBmG,IAAiB,IAyHPiB,KAHJ,wBASF,kBAAC1d,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UAClCqc,GACC,yBAAKnc,MAAO,CAAEb,MAAO,QACnB,kBAAC,KAAD,CACEa,MAAO,CACL8Z,SAAU,QACV3P,YAAa,MAED,IANlB,4CAUA,gCAKV,QACE,OAAO,+BAiFUqM,CAAenT,IAElB,6BACE,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACZ,IACD,kBAACS,EAAA,EAAD,CACE4V,SAAyB,IAAfpT,EACVvC,QA/ET,WACjBgI,GAAc,SAAC4N,GAAD,OAAoBA,EAAiB,MA+EzBlW,UAAWd,EAAQiV,UAHrB,cAQF,kBAAChV,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACZ,IACD,kBAACS,EAAA,EAAD,CACEC,QA7FT,WACjBgI,GAAc,SAAC4N,GAAD,OAAoBA,EAAiB,MA6FzBlW,UAAWd,EAAQiV,SACnB8B,SAAUpT,GAAcwS,GAAMI,OAAS,GAHzC,gBAed,6BACE,kBAACtW,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACW,EAAA,EAAD,CAAYD,UAAWd,EAAQwW,cAA/B,sHAIA,kBAACrV,EAAA,EAAD,CAAQC,QAAS0K,EAAahL,UAAWd,EAAQiV,UAAjD,a,ICncA3V,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,S,mBCZLlH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SAuHIqX,GAnHc,WAC3B,IAAM5d,EAAUX,KADiB,EAG+BgS,qBAC9D9L,IADMgC,EAHyB,EAGzBA,sBAAuBI,EAHE,EAGFA,YAAa5B,EAHX,EAGWA,gBAHX,cAOqBwB,EAPrB,GAO1BsW,EAP0B,KAOLrW,EAPK,mBAQWzB,EARX,GAQ1B+X,EAR0B,KAQV9X,EARU,mBASG2B,EATH,GASdC,GATc,WAe3BkE,EAAc,WAClB9F,EAAkB,IAClBwB,GAAuB,IAgBzB,OACE,6BACE,kBAACrG,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAxBhB,WACtBoG,GAAuB,KAwBnB,kBAAC,KAAD,CAAYlH,MAAO,CAAEmK,YAAa,KADpC,cAIA,kBAACjI,EAAA,EAAD,CACEC,KAAMob,EACN5R,QAASH,EACTpJ,kBAAgB,qBAEhB,kBAACQ,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAAS0K,KAGb,kBAACjJ,EAAA,EAAD,CAAaX,GAAG,qBAAhB,yBACA,kBAACY,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,uDACA,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACkE,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,6BAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3C6Z,KAILA,EAWA,8BAVA,yBAAKxd,MAAO,CAAEb,MAAO,MAAOuF,UAAW,GAAIxE,aAAc,KACvD,kBAAC,KAAD,CACEF,MAAO,CACL8Z,SAAU,QACV3P,YAAa,MAED,IANlB,4EAcJ,kBAACxK,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACE1B,MAAM,UACNqB,UAAWd,EAAQR,QACnBwB,QAAQ,WACRI,QAAS0K,GAJX,SAUF,kBAAC7L,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACE1B,MAAM,UACNqB,UAAWd,EAAQR,QACnBwB,QAAQ,WACRI,QAAS,WA5ErB9J,MAAM,QA6EuBwmB,EAjFR,CACnB3mB,OAAQ,SACRihB,SAAU,WAGT1iB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,MAEzCyR,GAAc,GAyEAkE,MANJ,Y,iFC3GRzM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,KAG1B1B,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SAmTIwX,GA/SS,WACtB,IAAM/d,EAAUX,KAERoK,EAAoB4H,qBAAW9L,IAA/BkE,gBAHoB,cAIcA,EAJd,GAIrBuU,EAJqB,KAINtU,EAJM,OAKA7U,oBAAS,GALT,mBAKrByZ,EALqB,KAKbC,EALa,KAWtBzC,EAAc,WAClBpC,GAAiB,IAZS,EAeE7U,mBAAS,IAfX,mBAerByM,EAfqB,KAeZ2c,EAfY,OAgBJppB,mBAAS,IAhBL,mBAgBrBc,EAhBqB,KAgBf0Y,EAhBe,OA+EHxZ,mBAAS,CAChC,CAAE4D,KAAM,UAAWkM,MAAO,sBAC1B,CAAElM,KAAM,UAAWkM,MAAO,uBAC1B,CAAElM,KAAM,aAAckM,MAAO,iBAC7B,CAAElM,KAAM,WAAYkM,MAAO,kBAJtBuZ,EA/EqB,sBAsFIrpB,mBAAS,CACvC,CAAE8kB,WAAY,UAAWpT,MAAO,KAChC,CAAEoT,WAAY,UAAWpT,MAAO,IAAK4X,iBAAiB,GACtD,CAAExE,WAAY,aAAcpT,MAAO,KACnC,CAAEoT,WAAY,WAAYpT,MAAO,OAJ5BqT,EAtFqB,sBA6FY/kB,mBAAS,CAC/C,CACEupB,QAAS,KACTC,QAAS,6DACTC,WAAY,qBACZ3J,SAAU,MAEZ,CACEyJ,QAAS,YACTC,QAAS,4CACTC,WAAY,qBACZ3J,SAAU,MAEZ,CACEyJ,QAAS,WACTC,QAAS,4BACTC,WAAY,gBACZ3J,SAAU,MAEZ,CACEyJ,QAAS,YACTC,QACE,sLACFC,WAAY,uBACZ3J,SAAU,MAEZ,CACEyJ,QAAS,SACTC,QAAS,eACTC,WAAY,yBACZ3J,SAAU,MAEZ,CACEyJ,QAAS,SACTC,QAAS,qCACTC,WAAY,yBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,aACTC,QAAS,+CACTC,WAAY,gBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,SACTC,QAAS,wCACTC,WAAY,gBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,aACTC,QACE,gHACFC,WAAY,gBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,SACTC,QAAS,gBACTC,WAAY,yBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,QACTC,QAAS,eACTC,WAAY,yBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,QACTC,QAAS,cACTC,WAAY,yBACZ3J,SAAU,QAEZ,CACEyJ,QAAS,SACTC,QAAS,kBACTC,WAAY,yBACZ3J,SAAU,UA5Kc,mBA6FrB4J,EA7FqB,UAgL5B,OACE,6BACE,kBAACpd,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QA3KhB,WACtBsI,GAAiB,KA2Kb,kBAAC,KAAD,CAAapJ,MAAO,CAAEmK,YAAa,KADrC,UAIA,kBAACjI,EAAA,EAAD,CACEC,KAAMub,EACN/R,QAASH,EACTpJ,kBAAgB,oBAChBC,WAAW,EACXC,SAAU,MAEV,yBAAKtC,MAAO,CAAEiG,MAAO,SACnB,kBAACrD,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAAS0K,KAGb,kBAACjJ,EAAA,EAAD,CAAaX,GAAG,qBAAhB,0BACA,kBAACY,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,+LAMA,kBAACd,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJN,QAAQ,SACRE,MAAO,CAAE0E,UAAW,GAAIxE,aAAc,KAEtC,kBAACge,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAY,kBAAC,KAAD,MACZC,gBAAc,kBACdzc,GAAG,kBAEH,kBAACnB,EAAA,EAAD,uBAEF,kBAAC6d,GAAA,EAAD,KACE,kBAAC,KAAD,CAAgB7E,KAAMwE,EAAcjd,QAAS4c,GAC3C,kBAAC,KAAD,CAAOhE,iBAAkBN,IACzB,kBAAC,KAAD,UAMR,kBAAC3Z,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,yBAAKE,MAAO,CAAEiG,MAAO,SACnB,2BACEsO,KAAK,OACLgK,OAAO,kBACPxR,SA3KS,SAACzL,GACxB,IAAMkd,EAAOld,EAAEmD,OAAOga,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GAEf,IAAMC,EAAOD,EAAIpa,OAAO+L,OAClBuO,EAAKC,QAAUF,EAAM,CAAEvK,KAAM,WAE7B0K,EAASF,EAAGG,WAAW,GACvBC,EAAKJ,EAAGK,OAAOH,IApDL,SAACI,GAOnB,IANA,IAAMC,EAAkBD,EAAWE,MAAM,WACnCzoB,EAAUwoB,EAAgB,GAAGC,MACjC,uCAGIC,EAAO,GACJC,EAAI,EAAGA,EAAIH,EAAgBrJ,OAAQwJ,IAAK,CAC/C,IAAMC,EAAMJ,EAAgBG,GAAGF,MAC7B,uCAEF,GAAIzoB,GAAW4oB,EAAIzJ,QAAUnf,EAAQmf,OAAQ,CAE3C,IADA,IAAM0J,EAAM,GACHC,EAAI,EAAGA,EAAI9oB,EAAQmf,OAAQ2J,IAAK,CACvC,IAAI1G,EAAIwG,EAAIE,GACR1G,EAAEjD,OAAS,IACD,KAARiD,EAAE,KAAWA,EAAIA,EAAE2G,UAAU,EAAG3G,EAAEjD,OAAS,IACxB,KAAnBiD,EAAEA,EAAEjD,OAAS,KAAWiD,EAAIA,EAAE2G,UAAU3G,EAAEjD,OAAS,EAAG,KAExDnf,EAAQ8oB,KACVD,EAAI7oB,EAAQ8oB,IAAM1G,GAKlBrN,OAAOiU,OAAOH,GAAKpU,QAAO,SAACwU,GAAD,OAAOA,KAAG9J,OAAS,GAC/CuJ,EAAK7P,KAAKgQ,IAMhB,IAAM3e,EAAUlK,EAAQuK,KAAI,SAACQ,GAAD,MAAQ,CAClC1J,KAAM0J,EACNme,SAAUne,MAGZkM,EAAQyR,GACR7B,EAAW3c,GACXiN,GAAU,GAgBRgS,CADajB,SAAWkB,aAAaf,EAAI,CAAEgB,OAAQ,MAGrDzB,EAAO0B,mBAAmB5B,IA8JZxe,MAAO,CAAEE,aAAc,QAK7B,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UAClCkO,EACC,yBAAKhO,MAAO,CAAE0E,UAAW,GAAIxE,aAAc,KACzC,kBAACO,EAAA,EAAD,CAAYT,MAAO,CAAEqgB,WAAY,SAAjC,aAKF,yBAAKrgB,MAAO,CAAE0E,UAAW,GAAIxE,aAAc,OAI/C,kBAACP,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,yBAAKE,MAAO,CAAEiG,MAAO,SACnB,kBAAC,KAAD,CAAgBwT,KAAMpkB,EAAM2L,QAASA,GACnC,kBAAC,KAAD,MACA,kBAAC,KAAD,SAKN,kBAACrB,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UAClCkO,EACC,yBAAKhO,MAAO,CAAE0E,UAAW,KACvB,kBAAC7D,EAAA,EAAD,CACEC,QAAS,WACP0K,KAEFxL,MAAO,CACLqR,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,MAVX,WAiBF,yBAAKjG,MAAO,CAAE0E,UAAW,KACvB,kBAAC7D,EAAA,EAAD,CACEC,QAAS0K,EACTxL,MAAO,CACLqR,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,MARX,oB,yCCzRZlH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqhB,WAAY,CACV9gB,QAAS,GACT+gB,UAAW,8BACXhhB,OAAQ,OACRihB,cAAe,EACfC,UAAW,QAEbC,QAAS,CACPjX,OAAQ,EACR/E,UAAW,IAEbic,SAAU,CACRF,UAAW,SACX7V,eAAgB,SAChBpL,QAAS,IAEXN,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAETzE,MAAO,CAAEkD,UAAW,IACpBkc,UAAW,CACTH,UAAW,QACXI,WAAY,GACZL,cAAe,IAEjBM,UAAW,CAAErX,OAAQ,EAAGjK,QAAS,EAAGS,WAAY,SAChDsb,UAAW,CACT7W,UAAW,GACXxE,aAAc,GAEhBmE,MAAO,CACLyV,SAAU,IAEZiH,SAAU,CACR7gB,aAAc,IAEhBsJ,YAAa,CACXE,SAAU,SAIRsX,GAAe,SAACtB,EAAKuB,GACzB,IAAMC,EAAYD,EAAS1V,QACzB,SAAC7J,GAAD,OAAOA,EAAE2a,aAAeqD,EAAMA,EAAIyB,UAAY,SAEhD,OAAOD,EAAUjL,OAASiL,EAAY,MAGlCE,GAAiC,SAAC,GAAoB,IAAlBrsB,EAAiB,EAAjBA,MAAiB,EAAV2qB,IAC/C,OAAI3qB,EAAQ,IAAOA,GAAS,EAExB,8BACE,kBAACulB,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,uEAKF,kBAAC,KAAD,CACEV,MAAO,CAAEb,MAAO,SAChB2a,SAAS,YAKV/kB,EAAQ,IAAOA,GAAS,GAE7B,8BACE,kBAACulB,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,gKAOF,kBAAC,KAAD,CACEV,MAAO,CAAEb,MAAO,UAChB2a,SAAS,YAKV/kB,EAAQ,IAAOA,GAAS,GAE7B,8BACE,kBAACulB,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,gKAOF,kBAAC,KAAD,CACEV,MAAO,CAAEb,MAAO,UAChB2a,SAAS,YAKV/kB,EAAQ,GAAOA,GAAS,GAE7B,8BACE,kBAACulB,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,gKAOF,kBAAC,KAAD,CACEV,MAAO,CAAEb,MAAO,OAChB2a,SAAS,YAMjB,8BACE,kBAACQ,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,yGAMF,kBAAC,KAAD,CACEV,MAAO,CAAEb,MAAO,aAChB2a,SAAS,aAObuH,GAAwB,SAAC/sB,GAAD,OAC5B,kBAAC,KAAD,eACEgtB,mBAAoBF,IAChB9sB,KAIFitB,GAA+B,SAAC,GAAoB,IAAlBxsB,EAAiB,EAAjBA,MAAiB,EAAV2qB,IAC7C,OAAa,GAAT3qB,EAEA,8BACE,kBAACulB,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,6DAKF,kBAAC,KAAD,CAAaV,MAAO,CAAEb,MAAO,aAMjC,8BACE,kBAACmb,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,8DAKF,kBAAC,KAAD,CAAaV,MAAO,CAAEb,MAAO,kBAMjCqiB,GAAsB,SAACltB,GAAD,OAC1B,kBAAC,KAAD,eACEgtB,mBAAoBC,IAChBjtB,KAwVOmtB,GApVG,WAAO,IAAD,EAclB1Q,qBAAW9L,IAZb9K,EAFoB,EAEpBA,kBACAwL,EAHoB,EAGpBA,gBACA0B,EAJoB,EAIpBA,YACA5B,EALoB,EAKpBA,gBACAJ,EANoB,EAMpBA,yBACAE,EAPoB,EAOpBA,4BACAgC,EARoB,EAQpBA,cACAI,EAToB,EASpBA,gBACAE,EAVoB,EAUpBA,aACAE,EAXoB,EAWpBA,iBACAU,EAZoB,EAYpBA,gBACAM,EAboB,EAapBA,iBAboB,cAgBsBpB,EAhBtB,4BAiB0BxN,EAjB1B,6BAkBsBwL,EAlBtB,IAkBCC,GAlBD,yBAmBsBH,EAnBtB,GAmBCC,GAnBD,yBAoBc2B,EApBd,GAoBfqa,EApBe,KAoBHpa,EApBG,mBAwBlBjC,EAxBkB,GAsBpByR,EAtBoB,yBA4BlBvR,EA5BkB,IA0BpBoc,EA1BoB,aA6BoBptB,mBAAS,KA7B7B,mBA6BfqtB,EA7Be,KA6BAC,EA7BA,KA+BhBniB,EAAUX,KA/BM,cAgCgB8I,EAhChB,GAgCf8T,EAhCe,KAgCF7T,EAhCE,mBAiCkBP,EAjClB,4BAkCsBQ,EAlCtB,IAkCCC,GAlCD,yBAmCoBS,EAnCpB,GAmCfsO,EAnCe,yBAoCwBhO,EApCxB,IAoCEC,GApCF,WAsCtB7F,qBAAU,WAC0B,qBAA9Bwe,GACF3qB,MAAM,SAAW4qB,GACdxsB,MAAK,SAACoX,GACL,OAAOA,EAAIC,UAEZrX,MAAK,SAAC8jB,GACLziB,QAAQC,IAAIwiB,GACZpR,EAAeoR,GACfziB,QAAQC,IAAIilB,GACZrU,GAAc,GACdwa,GAAgB,SAIrB,CAACJ,EAAYE,IAEhBze,qBAAU,WAC0B,qBAA9Bwe,GACF3qB,MAAM,gBAAkB8f,GACrB1hB,MAAK,SAACoX,GACL,OAAOA,EAAIC,UAEZrX,MAAK,SAAC8jB,GACL6I,GAAsB7I,QAI3B,CAACpC,EAAwBC,IAlEN,MAoEJxiB,mBAAS,CACzB,CAAE4D,KAAM,YAAakM,MAAO,MAC5B,CAAElM,KAAM,YAAakM,MAAO,UAC5B,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,SAAUkM,MAAO,mBACzB,CAAElM,KAAM,WAAYkM,MAAO,YAC3B,CAAElM,KAAM,QAASkM,MAAO,SACxB,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,aAAckM,MAAO,eAC7B,CAAElM,KAAM,eAAgBkM,MAAO,YAC/B,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,YAAakM,MAAO,KAC5B,CAAElM,KAAM,gBAAiBkM,MAAO,iBAChC,CAAElM,KAAM,aAAckM,MAAO,gBAC7B,CAAElM,KAAM,YAAakM,MAAO,gBAC5B,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,QAASkM,MAAO,UACxB,CAAElM,KAAM,QAASkM,MAAO,SACxB,CAAElM,KAAM,OAAQkM,MAAO,WACvB,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,cAAekM,MAAO,cAC9B,CAAElM,KAAM,SAAUkM,MAAO,WACzB,CAAElM,KAAM,cAAekM,MAAO,gBAC9B,CAAElM,KAAM,UAAWkM,MAAO,sBAvBrBrD,EApEe,sBA8FUzM,mBAAS,CACvC,CAAE8kB,WAAY,SAAUpT,MAAO,KAC/B,CAAEoT,WAAY,WAAYpT,MAAO,KACjC,CAAEoT,WAAY,aAAcpT,MAAO,KACnC,CAAEoT,WAAY,YAAapT,MAAO,MAJ7BqT,EA9Fe,sBAoGU/kB,mBAAS,CAAC,IAAnCytB,EApGe,sBAqGaztB,mBAAS,CAC1C,QACA,YACA,YACA,aACA,eACA,SACA,gBACA,YARK6kB,GArGe,uBAiHkB7kB,mBAAS,IAjH3B,qBAiHf0tB,GAjHe,MAiHDH,GAjHC,SAkHsBvtB,mBAAS,GAlH/B,qCAoH0BA,mBAAS,KApHnC,qBAoHf2tB,GApHe,MAoHGC,GApHH,SAqH0B5tB,mBAAS,IArHnC,qBAqHf6tB,GArHe,MAqHGC,GArHH,MAuHhBC,GAAY,WACW,GAAvBL,GAAahM,SACfrQ,EAAkB+V,EAAYsG,IAAcxF,QAC5CzU,EAAkB2T,EAAYsG,IAAcd,WAC5CnY,EAAmB2S,EAAYsG,IAAcrK,aAS3CmK,GAAwB,SAAC1sB,GAC7B,GAAa,OAATA,GAAiC,IAAhBA,EAAK4gB,OAAc,CACtC,IAAMsM,EAASltB,EAAKgM,KAAI,SAAClB,GAAD,OAAUA,EAAKyB,GAAK,IAAMzB,EAAK7E,YACvD6mB,GAAoBI,QACfJ,GAAoB,KAxIP,GAiJ0B5tB,oBAAS,GAjJnC,qBAiJfiuB,GAjJe,MAiJGC,GAjJH,MA2JtB,OAJAtf,qBAAU,WACR1M,QAAQC,IAAI,wBAAyB8rB,MACpC,CAACA,KAGF,6BACE,kBAAC,GAAD,CACErgB,KAAMqgB,GACNvR,wBAZ0B,WAC9BwR,IAAoB,MAclB,kBAAC9iB,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJJ,MAAO,CACLC,WAAY,QACZyE,UAAW,GACX+b,UAAW,SAGb,kBAAC9gB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACK,EAAA,EAAD,oDACA,kBAAC+N,GAAA,EAAD,CAAahO,UAAWd,EAAQ8J,aAC9B,kBAACmD,GAAA,EAAD,CACE+V,kBAAgB,EAChB3tB,MAAOqtB,GACPrV,SAnDiB,SAACC,GAC5BqV,GAAoBrV,EAAMvI,OAAOke,aACjCd,EAAiBnK,SAAS1K,EAAMvI,OAAOke,YAAYpD,MAAM,KAAK,MAkDpD3S,QAASsV,GACThV,YAAa,SAACC,GAAD,OACX,kBAACC,GAAA,EAAD,iBACMD,EADN,CAEEpY,MAAOqtB,GACP3Y,OAAO,QACPjJ,UAAWd,EAAQohB,kBAM7B,kBAACnhB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,6EAMF,6BACE,kBAAC,GAAD,SAKN,kBAACf,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,6DAKF,6BACE,kBAAC,GAAD,SAKN,kBAACf,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,kEAKF,6BACE,kBAAC,GAAD,UAKR,6BACE,kBAAC,KAAD,CAAgB+Y,KAAMkC,EAAa3a,QAASA,GAC1C,kBAAC,KAAD,CACEuY,UAAW0I,GACXvI,kBAAmBoI,KAErB,kBAAC,KAAD,CAAeE,sBAAuBA,IACtC,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAgBhB,aAAcA,KAC9B,kBAAC,KAAD,MACA,kBAAC,GAAD,CAAuB4B,IAAK,CAAC,YAC7B,kBAAC,GAAD,CAAqBA,IAAK,CAAC,eAC3B,kBAAC,KAAD,CAAOhJ,iBAAkBN,IACzB,kBAAC,KAAD,CACEF,yBAA0BA,KAE5B,kBAAC,KAAD,CAAgBS,qBAAmB,IACnC,kBAAC,KAAD,CAAiB+I,IAAI,SAASC,uBAAqB,IACnD,kBAAC,KAAD,MACA,kBAAC,KAAD,QAIJ,kBAACljB,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJJ,MAAO,CACLC,WAAY,QACZyE,UAAW,GACXxE,aAAc,KAGhB,kBAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IAEf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,qEAKF,yBAAKI,QA1IY,WACE,GAAvBmhB,GAAahM,QACfvQ,EAAkBiW,EAAYsG,IAAca,UAyIpC,kBAAC,GAAD,SAKN,kBAACnjB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,8FAMF,yBAAKI,QAASwhB,IACZ,kBAAC,GAAD,SAIN,kBAAC3iB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,kFAMF,kBAACG,EAAA,EAAD,CACEL,UAAWd,EAAQR,QACnB4B,QAAS,WACPwhB,KACAG,IAAqBD,MAGvB,kBAAC,KAAD,CAAaxiB,MAAO,CAAEmK,YAAa,KAPrC,eAgBN,kBAACxK,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACV,GAAvBmiB,GAAahM,QAAgB,GACF,oBAA7B0L,GACiB,IAAjBC,EACE,yBAAK5hB,MAAO,CAAEb,MAAO,MAAOuF,UAAW,GAAIxE,aAAc,KACvD,kBAAC,KAAD,CACEF,MAAO,CAAE8Z,SAAU,QAAS3P,YAAa,MAC3B,IAHlB,4CAOA,iCCniBJpL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAETuD,YAAa,CACXE,SAAU,IACVxJ,aAAc,QAqHH6iB,GAjHe,WAC5B,IAAMrjB,EAAUX,KADkB,EAM9BgS,qBAAW9L,IAHbgD,EAHgC,EAGhCA,sBACAE,EAJgC,EAIhCA,sBACAtB,EALgC,EAKhCA,iBALgC,cAOsBsB,EAPtB,GAO3B6a,EAP2B,KAOL5a,EAPK,mBAQoBH,EARpB,GAQ3Bgb,EAR2B,KAQN/a,EARM,mBASYrB,EATZ,GAS3Bqc,EAT2B,KASVpc,EATU,KAe5B0E,EAAc,WAClBtD,GAAuB,IAGnBib,EAAsB,SAACnW,GAC3BlG,EAAmB,gBACdoc,EADa,gBAEflW,EAAMvI,OAAO7C,GAAKoL,EAAMvI,OAAO1P,UA4BpC,OACE,6BACE,kBAAC8L,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAzChB,WACtBoH,GAAuB,KAyCnB,kBAAC,KAAD,CAAYlI,MAAO,CAAEmK,YAAa,KADpC,aAKA,kBAACjI,EAAA,EAAD,CACEC,KAAM8gB,EACNtX,QAASH,EACTpJ,kBAAgB,qBAEhB,kBAACQ,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAAS0K,KAGb,kBAACjJ,EAAA,EAAD,CAAaX,GAAG,qBAAhB,wBACA,kBAACY,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,0BAAMI,UAAWd,EAAQgV,KAAMP,YAAU,EAAC6D,aAAa,OACrD,kBAAC5K,GAAA,EAAD,CACExL,GAAG,aACHJ,MAAM,eACNzM,MAAOmuB,EAAgBxc,WACvBqG,SAAUoW,EACV1Z,OAAO,WAET,kBAAC2D,GAAA,EAAD,CACExL,GAAG,YACHJ,MAAM,sBACNzM,MAAOmuB,EAAgBvc,UACvBoG,SAAUoW,EACV1Z,OAAO,aAIb,kBAAC9J,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACH,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACZ,IACD,kBAACS,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAAS0K,GAA7C,cAIF,kBAAC7L,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACZ,IACD,kBAACS,EAAA,EAAD,CACEL,UAAWd,EAAQR,QACnB4B,QAAS,YAzEC,WACtB,IAAIlK,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnB+P,WAAYwc,EAAgBxc,WAC5BC,UAAWuc,EAAgBvc,UAC3BxB,QAAS+d,EAAgB/d,QACzByB,OAAQsc,EAAgBtc,SAE1BkR,SAAU,UAGZ9gB,MAAM,QAASJ,GACZxB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,MAEzCuS,GAAyB4a,GAqDXI,GACA5X,MAJJ,mBCzHRzM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SAmHIod,GA/GkB,WAC/B,IAAM3jB,EAAUX,KADqB,EAOjCgS,qBAAW9L,IAHboD,EAJmC,EAInCA,yBACAF,EALmC,EAKnCA,sBACA9C,EANmC,EAMnCA,yBANmC,cAYjCA,EAZiC,GAUnCyR,EAVmC,KAWnCxR,EAXmC,mBAamB6C,EAbnB,GAa9B6a,EAb8B,KAaR5a,EAbQ,mBAiBjCC,EAjBiC,GAenCib,EAfmC,KAgBnChb,EAhBmC,KAuB/BkD,EAAc,WAClBlD,GAA0B,GAC1BhD,EAA0B,KAgB5B,OACE,6BACE,kBAACzE,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAxBhB,WACtBwH,GAA0B,KAwBtB,kBAAC,KAAD,CAAYtI,MAAO,CAAEmK,YAAa,KADpC,cAIA,kBAACjI,EAAA,EAAD,CACEC,KAAMmhB,EACN3X,QAASH,EACTpJ,kBAAgB,qBAEhB,kBAACQ,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5C,MAAO,CAAEb,MAAO,WAChB2B,QAAS0K,KAGb,kBAACjJ,EAAA,EAAD,CAAaX,GAAG,qBAAhB,2BACA,kBAACY,EAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,yDAEA,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACnC,kBAACkE,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,gCAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3CmT,MAKT,kBAACnX,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACE1B,MAAM,UACNqB,UAAWd,EAAQR,QACnBwB,QAAQ,WACRI,QAAS0K,GAJX,SAUF,kBAAC7L,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACE1B,MAAM,UACNqB,UAAWd,EAAQR,QACnBwB,QAAQ,WACRI,QAAS,WACPrK,QAAQC,WAAWogB,GAhEjC9f,MAAM,SAiEgC8f,EArEjB,CACnBjgB,OAAQ,SACRihB,SAAU,WAGT1iB,MAAK,SAACF,GAAD,OAAcA,EAASC,UAC5BC,MAAK,SAACob,GAAD,OAAY/Z,QAAQC,IAAI8Z,MAC7BuH,OAAM,SAACliB,GAAD,OAAWY,QAAQC,IAAI,QAASb,MAEzCuS,GAAyB4a,GA6DXxX,MAPJ,Y,qBChGRzM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,SAgJIsd,GA5IW,WACxB,IAAM7jB,EAAUX,KADc,EAQ1BgS,qBAAW9L,IAJbI,EAJ4B,EAI5BA,yBACAE,EAL4B,EAK5BA,4BACAJ,EAN4B,EAM5BA,QACAgD,EAP4B,EAO5BA,sBAP4B,cAUFhD,EAVE,GAUvB0R,EAVuB,yBAe1BxR,EAf0B,IAc5BC,GAd4B,yBAmB1BC,EAnB0B,GAkB5BC,GAlB4B,aAqBkBjR,mBAAS,IArB3B,mBAqBvBivB,EArBuB,KAqBLC,EArBK,mBAsByBtb,EAtBzB,GAsBvB6a,EAtBuB,UAwB9B7f,qBAAU,WACRnM,MAAM,SAAW6f,GACdzhB,MAAK,SAACoX,GACL,OAAOA,EAAIC,UAEZrX,MAAK,SAAC8jB,GACLuK,EAAoBvK,EAAE3N,QAAO,SAAC2N,GAAD,OAAoB,IAAbA,EAAEtS,gBAEzC,CAACoc,IAhC0B,MAkCAzuB,mBAAS,CACrC,CAAE4D,KAAM,KAAMkM,MAAO,cACrB,CAAElM,KAAM,aAAckM,MAAO,iBAC7B,CAAElM,KAAM,YAAakM,MAAO,kBAC5B,CAAElM,KAAM,SAAUkM,MAAO,qBAJpBqf,EAlCuB,sBAyCKnvB,mBAAS,CAAC,WAAtC6kB,EAzCuB,sBA2CE7kB,mBAAS,CACvC,CAAE8kB,WAAY,KAAMpT,MAAO,KAC3B,CAAEoT,WAAY,aAAcpT,MAAO,KACnC,CAAEoT,WAAY,YAAapT,MAAO,IAAK4X,iBAAiB,GACxD,CAAExE,WAAY,SAAUpT,MAAO,MAJ1BqT,EA3CuB,sBAkDI/kB,mBAAS,IAlDb,mBAkDvBglB,EAlDuB,KAkDZC,EAlDY,KAoDxBmK,EAAgB,WACI,GAApBpK,EAAUtD,SACZ3Q,EAA0Bke,EAAiBjK,GAAW3X,IACtD4D,EAA6Bge,EAAiBjK,GAAW7S,cAI7D,OACE,6BACE,kBAAC,KAAD,CAAgB+S,KAAM+J,EAAkBxiB,QAAS0iB,GAC/C,kBAAC,KAAD,CACEnK,UAAWA,EACXG,kBAAmBF,IAErB,kBAAC,KAAD,CAAgBG,eAAgB,KAChC,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAOC,iBAAkBN,IACzB,kBAAC,KAAD,MACA,kBAAC,KAAD,CACEF,yBAA0BA,IAE5B,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,OAGF,kBAACzZ,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,yBAAKU,QAAS6iB,GACZ,kBAACrJ,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,wDAKF,6BACE,kBAAC,GAAD,UAKR,kBAACf,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,uDAKF,6BACE,kBAAC,GAAD,SAIN,kBAACf,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACka,GAAA,EAAD,CACEjW,MACE,kBAAC5D,EAAA,EAAD,CAAYC,QAAQ,SAApB,0DAKF,kBAACG,EAAA,EAAD,CAAQL,UAAWd,EAAQR,QAAS4B,QAAS6iB,GAC3C,kBAAC,KAAD,CAAiB3jB,MAAO,CAAEmK,YAAa,KADzC,mBAON,kBAACxK,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,GAAIN,QAAQ,UACb,GAApByZ,EAAUtD,QAAgB,EAC1B,yBAAKjW,MAAO,CAAEb,MAAO,MAAOuF,UAAW,GAAIxE,aAAc,KACvD,kBAAC,KAAD,CACEF,MAAO,CAAE8Z,SAAU,QAAS3P,YAAa,MAC3B,IAHlB,0CAOA,iC,wCC5IJpL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyV,KAAM,CACJ,QAAS,CACPjL,OAAQxK,EAAM2B,QAAQ,GACtBqF,MAAO,SAGX/G,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACRlK,OAAQ,GACR0G,MAAO,KAET6a,UAAW,CAAErX,OAAQ,EAAGjK,QAAS,EAAGS,WAAY,SAChDoE,MAAO,CACLyV,SAAU,IAEZiH,SAAU,CACR7gB,aAAc,IAEhBsJ,YAAa,CACXE,SAAU,KAEZ6R,UAAW,CACT1Y,WAAY,GACZsH,YAAa,GACbzF,UAAW,GACXxE,aAAc,GACdX,OAAQ,IACR0G,MAAO,SAIL2d,GAAe1O,aAAW,CAC9B2O,WAAY,CACV1kB,MAAO,WAET2kB,UAAW,CACT3kB,MAAO,YALU+V,CAOlB6O,MAgZYC,GA9YI,WACjB,IAAMtkB,EAAUX,KADO,EAG2CgS,qBAChE9L,IADMI,EAHe,EAGfA,yBAA0BE,EAHX,EAGWA,4BAHX,cAUnBF,EAVmB,GAQrByR,EARqB,yBAcnBvR,EAdmB,IAYrBoc,EAZqB,aAgBaptB,oBAAS,IAhBtB,mBAgBhB0vB,EAhBgB,KAgBJC,EAhBI,OAiBsB3vB,oBAAS,GAjB/B,mBAiBC4vB,GAjBD,aAmB2B5vB,mBAAS,CACzD6vB,UAAW,EACXC,IAAK,EACLC,MAAO,IAtBc,mBAmBhBC,EAnBgB,KAmBGC,EAnBH,OAyBOjwB,mBAAS,CACrC+vB,MAAO,IACPD,IAAK,IACLD,UAAW,MA5BU,mBAyBhBK,EAzBgB,KAyBPC,EAzBO,OAoDiBnwB,mBAAS,IApD1B,mBAoDhBowB,EApDgB,KAoDFC,EApDE,OAqDyBrwB,mBAAS,IArDlC,mBAqDhB2tB,EArDgB,KAqDEC,EArDF,KA8DvBhf,qBAAU,WAC0B,qBAA9Bwe,GACF3qB,MAAM,gBAAkB8f,GACrB1hB,MAAK,SAACoX,GACL,OAAOA,EAAIC,UAEZrX,MAAK,SAAC8jB,IAbiB,SAAC7jB,GAC7B,GAAa,OAATA,GAAiC,IAAhBA,EAAK4gB,OAAc,CACtC,IAAMsM,EAASltB,EAAKgM,KAAI,SAAClB,GAAD,OAAUA,EAAKyB,GAAK,IAAMzB,EAAK7E,YACvD6mB,EAAoBI,QACfJ,EAAoB,IAUrBJ,CAAsB7I,QAI3B,CAACpC,IAEJ,IA3EuB,EA+EaviB,mBAAS,CAC3C,CACEqN,GAAI,EACJtG,SAAU,4BACVgpB,MAAO,IACPD,IAAK,IACLD,UAAW,KAEb,CACExiB,GAAI,EACJtG,SAAU,4BACVgpB,MAAO,EACPD,IAAK,GACLD,UAAW,IAEb,CACExiB,GAAI,EACJtG,SAAU,4BACVgpB,MAAO,IACPD,IAAK,GACLD,UAAW,KAEb,CACExiB,GAAI,EACJtG,SAAU,4BACVgpB,MAAO,IACPD,IAAK,GACLD,UAAW,MA1GQ,mBA+EhBS,EA/EgB,aA8GCtwB,mBAAS,CAC/B,CAAE4D,KAAM,KAAMkM,MAAO,WACrB,CAAElM,KAAM,WAAYkM,MAAO,YAC3B,CAAElM,KAAM,QAASkM,MAAO,SACxB,CAAElM,KAAM,MAAOkM,MAAO,YACtB,CAAElM,KAAM,YAAakM,MAAO,oBALvBygB,EA9GgB,sBAsHWvwB,mBAAS,IAtHpB,mBAsHhBglB,EAtHgB,KAsHLC,EAtHK,OAuHajlB,mBAAS,IAvHtB,mBAuHhBib,EAvHgB,KAuHJC,EAvHI,OAyHSlb,mBAAS,CACvC,CAAE8kB,WAAY,KAAMpT,MAAO,KAC3B,CAAEoT,WAAY,WAAYpT,MAAO,KACjC,CAAEoT,WAAY,QAASpT,MAAO,KAC9B,CAAEoT,WAAY,MAAOpT,MAAO,KAC5B,CAAEoT,WAAY,YAAapT,MAAO,OAL7BqT,EAzHgB,oBAiIjByL,EAAsB,YAlGR,WAAO,IAAD,EACxBL,EAAW,gBACND,GADK,oBAEP,YACCF,EAAkBH,WACjBG,EAAkBD,MACjBC,EAAkBF,IAClBE,EAAkBH,YANd,eAOP,MACCG,EAAkBF,KACjBE,EAAkBD,MACjBC,EAAkBF,IAClBE,EAAkBH,YAXd,eAYP,QACCG,EAAkBD,OACjBC,EAAkBD,MACjBC,EAAkBF,IAClBE,EAAkBH,YAhBd,KAkGVY,GACAd,GAAc,IA8BhB,OA3BA/gB,qBAAU,WACR,GAAI+gB,EAAe,CACjB,IAAMttB,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CACPwV,OAAQ,mBACR,eAAgB,oBAElBvV,KAAMzB,KAAKqB,UAAU,CACnBsuB,YAAaJ,EACbK,eAAgBT,KAGpBztB,MAAM,UAAWJ,EAAgB,CAAEuuB,KAAM,YACtC/vB,MAAK,SAACoX,GACLA,EAAIC,OACJhW,QAAQC,IAAI8V,MAEbpX,MAAK,SAACC,GACLoa,EAAcpa,GACd8uB,GAAkB,GAClBD,GAAc,SAInB,CAACD,IAGF,6BACE,kBAACtkB,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJJ,MAAO,CACL0E,UAAW,GACX+b,UAAW,WAGb,kBAAC9gB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGJ,MAAO,CAAE0E,UAAW,KACpC,kBAAC8P,GAAA,EAAD,CAAK/c,UAAU,WAAW2tB,GAAI,EAAG/T,YAAY,eAC3C,kBAAC5Q,EAAA,EAAD,CAAYhJ,UAAU,UAAtB,iBACA,kBAACmsB,GAAD,CACEzrB,KAAK,YACLpD,MAAOwvB,EAAkBH,UACzB9V,IAAK,GACLvB,SAAU,SAACC,EAAOC,GAChBuX,EAAqB,gBAChBD,EADe,gBAEjB,YAActX,MAGnBoY,KAAM,kBAAC,KAAD,CAAuBvL,SAAS,eAG1C,kBAACtF,GAAA,EAAD,CAAK/c,UAAU,WAAW2tB,GAAI,EAAG/T,YAAY,eAC3C,kBAAC5Q,EAAA,EAAD,CAAYhJ,UAAU,UAAtB,SACA,kBAACmsB,GAAD,CACEzrB,KAAK,QACLpD,MAAOwvB,EAAkBD,MACzBhW,IAAK,GACLvB,SAAU,SAACC,EAAOC,GAChBuX,EAAqB,gBAChBD,EADe,gBAEjB,QAAUtX,MAGfoY,KAAM,kBAAC,KAAD,CAAuBvL,SAAS,eAG1C,kBAACtF,GAAA,EAAD,CAAK/c,UAAU,WAAW2tB,GAAI,EAAG/T,YAAY,eAC3C,kBAAC5Q,EAAA,EAAD,CAAYhJ,UAAU,UAAtB,YACA,kBAACmsB,GAAD,CACEzrB,KAAK,MACLpD,MAAOwvB,EAAkBF,IACzB/V,IAAK,GACLvB,SAAU,SAACC,EAAOC,GAChBuX,EAAqB,gBAChBD,EADe,gBAEjB,MAAQtX,MAGboY,KAAM,kBAAC,KAAD,CAAuBvL,SAAS,gBAI5C,kBAACna,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACT,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJJ,MAAO,CACL0E,UAAW,GACX+b,UAAW,WAGb,kBAAC9gB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAAC4D,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,4BAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3C2hB,OACgC,IAA9Bf,EAAkBH,WAChBG,EAAkBD,MACjBC,EAAkBF,IAClBE,EAAkBH,YACtBmB,QAAQ,GAAI,IANhB,QAYN,kBAAC5lB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACZ,IACD,kBAAC4D,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,oBAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3C2hB,OAC4B,IAA1Bf,EAAkBD,OAChBC,EAAkBD,MACjBC,EAAkBF,IAClBE,EAAkBH,YACtBmB,QAAQ,GAAI,IANhB,QAYN,kBAAC5lB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAAC4D,GAAA,EAAD,CAAMxD,UAAWd,EAAQ6b,UAAW7a,QAAQ,YAC1C,kBAAC4D,GAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CACED,UAAWd,EAAQ2E,MACnBlF,MAAM,gBACNoF,cAAY,EACZZ,MAAM,UAJR,uBAQA,kBAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKjJ,UAAU,KAAKkM,MAAM,UAC3C2hB,OAC0B,IAAxBf,EAAkBF,KAChBE,EAAkBD,MACjBC,EAAkBF,IAClBE,EAAkBH,YACtBmB,QAAQ,GAAI,IANhB,QAYN,kBAAC5lB,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJJ,MAAO,CACL0E,UAAW,GACX7B,WAAY,GACZ4d,UAAW,SAGb,kBAAC9gB,EAAA,EAAD,CAAM6lB,GAAI,GACR,kBAAC/kB,EAAA,EAAD,+DAGA,kBAAC+N,GAAA,EAAD,CAAahO,UAAWd,EAAQ8J,aAC9B,kBAACiF,GAAA,EAAD,CAAY7M,GAAG,+BAAf,kBAGA,kBAAC8M,GAAA,EAAD,CACEC,QAAQ,8BACR/M,GAAG,wBACH6jB,UAAQ,EACR1wB,MAAO4vB,EACP5X,SAvPW,SAACC,GAC5B4X,EAAgB5X,EAAMvI,OAAO1P,QAuPb2wB,MAAO,kBAACC,GAAA,EAAD,MACPC,YAAa,SAACC,GAAD,OAAcA,EAAShW,KAAK,QAExCqS,EAAiB7gB,KAAI,SAAClJ,GAAD,OACpB,kBAAC0W,GAAA,EAAD,CAAUtL,IAAKpL,EAAMpD,MAAOoD,GAC1B,kBAAC2tB,GAAA,EAAD,CAAU3Q,QAASwP,EAAalvB,QAAQ0C,IAAS,IACjD,kBAAC4tB,GAAA,EAAD,CAAcC,QAAS7tB,WAMjC,kBAACwH,EAAA,EAAD,CACE6lB,GAAI,EACJxlB,MAAO,CACLygB,UAAW,UAGb,kBAAC5f,EAAA,EAAD,CACEL,UAAWd,EAAQR,QACnB4B,QAAS,WACPikB,IACAtuB,QAAQC,IAAI+tB,KAJhB,4BASA,kBAAC9kB,EAAA,EAAD,CACE6lB,GAAI,EACJxlB,MAAO,CACLygB,UAAW,UAGb,kBAAC5f,EAAA,EAAD,CACEL,UAAWd,EAAQR,QACnBwB,QAAQ,WACRI,QAAS,WACPrK,QAAQC,IAAI8Y,KAJhB,wBAeZ,kBAAC7P,EAAA,EAAD,CACEC,WAAS,EACTO,MAAI,EACJC,GAAI,GACJJ,MAAO,CACL6C,WAAY,GACZ4d,UAAW,WAGb,kBAAC,KAAD,CAAgBhH,KAAMoL,EAAY7jB,QAAS8jB,GACzC,kBAAC,KAAD,CACEvL,UAAWA,EACXG,kBAAmBF,IAErB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAOI,iBAAkBN,IACzB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAgBO,qBAAmB,Q,yECzcvC9a,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqhB,WAAY,CACV9gB,QAAS,GACT+gB,UAAW,8BACXhhB,OAAQ,OACRihB,cAAe,EACfC,UAAW,QAEbC,QAAS,CACPjX,OAAQ,EACR/E,UAAW,IAEbic,SAAU,CACRF,UAAW,SACX7V,eAAgB,SAChBpL,QAAS,IAEXN,QAAS,CACPmS,YAAa,UACblS,MAAO,UACPmS,cAAe,OACf7H,OAAQ,GACR,UAAW,CACTpK,gBAAiB,MACjBF,MAAO,SAGXqC,MAAO,CAAEkD,UAAW,IACpBkc,UAAW,CACTH,UAAW,QACXI,WAAY,GACZL,cAAe,IAEjByF,aAAc,CACZ9mB,MAAO,QACP,qCAAsC,CACpCC,OAAQ,GAEV,2CAA4C,CAC1CA,OAAQ,GAEV,iDAAkD,CAChDA,OAAQ,IAGZ0hB,UAAW,CAAErX,OAAQ,EAAGjK,QAAS,EAAGS,WAAY,SAChDsb,UAAW,CACT7W,UAAW,GACXxE,aAAc,GAEhBmE,MAAO,CACLyV,SAAU,IAEZiH,SAAU,CACR7gB,aAAc,IAEhBgmB,YAAa,CAEX/mB,MAAO,eAuGIgnB,GAnGF,WACX,IAAMzmB,EAAUX,KADC,EAObgS,qBAAW9L,IAHbI,EAJe,EAIfA,yBACAE,EALe,EAKfA,4BACAJ,EANe,EAMfA,QANe,cASWA,EATX,4BAcbE,EAda,IAYfyR,EAZe,yBAkBbvR,EAlBa,IAgBfoc,EAhBe,aAoBmBptB,mBAAS,IApB5B,mBAoBV6xB,EApBU,KAoBEptB,EApBF,KAsBjB,OACE,6BACE,kBAACyG,EAAD,MACA,kBAAC,GAAD,MACA,kBAACyb,GAAA,EAAD,CAAQpQ,SAAS,WAAW9K,MAAO,CAAEC,WAAY,YAC/C,kBAAC,KAAD,KACE,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,UACzB,kBAACJ,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAC5B,iBACCmW,EACA,IACA6K,IAGN,kBAAChiB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GACb,kBAACT,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,eACRC,WAAW,UAEX,kBAAC,KAAD,CACEC,MAAO,CACL8Z,SAAU,IAEZhZ,QAAS,kBAAM9H,EAAc,IAC7BwH,UAAW6lB,aAAK,gBACb3mB,EAAQwmB,YAA6B,IAAfE,MAG3B,kBAAC,KAAD,CACEpmB,MAAO,CACL8Z,SAAU,IAEZhZ,QAAS,kBAAM9H,EAAc,IAC7BwH,UAAW6lB,aAAK,gBACb3mB,EAAQwmB,YAA6B,IAAfE,MAG3B,kBAAC,KAAD,CACEpmB,MAAO,CACL8Z,SAAU,IAEZhZ,QAAS,kBAAM9H,EAAc,IAC7BwH,UAAW6lB,aAAK,gBACb3mB,EAAQwmB,YAA6B,IAAfE,WAQrC,kBAACzmB,EAAA,EAAD,CAAMC,WAAS,EAACO,MAAI,EAACC,GAAI,IACvB,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IAEf,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACb,6BAEkB,IAAfgmB,EACC,kBAACE,GAAD,MACiB,IAAfF,EACF,kBAAC,GAAD,MACiB,IAAfA,EACF,kBAAC,GAAD,MAEA,gCAIN,kBAACzmB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,OChKRmmB,OAVf,WACE,OACE,kBAAC,GAAD,KACE,6BACE,kBAAC,GAAD,SCCO,SAASC,KAAY,IAAD,EACDjyB,oBAAS,GADR,mBACxBkyB,EADwB,KACfC,EADe,OAEPnyB,mBAAS,IAFF,mBAExBc,EAFwB,KAElB0Y,EAFkB,OAGDxZ,mBAAS,GAHR,mBAGxBoyB,EAHwB,KAGfC,EAHe,KA0B/B,OArBAzjB,qBAAU,WAENnM,MAAM,oDACD5B,MAAK,SAACob,GAAD,OAAYA,EAAO/D,UACxBrX,MACG,SAACob,GACG/Z,QAAQC,IAAI8Z,GAEZzC,EAAQyC,EAAOnb,MAEfqxB,GAAW,MAEf,SAAC7wB,GACGY,QAAQC,IAAI,kCAMzB,IAGC,6BACI,kBAACiJ,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACX,kBAACX,EAAD,OAEJ,kBAACE,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAIJ,MAAO,CAAEC,WAAY,QACpC,kBAACN,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,IACnB,kBAACL,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGJ,MAAO,CAAEC,WAAY,WAClCwmB,EACG,kBAAChjB,EAAA,EAAD,MAEA,kBAACqP,EAAA,EAAD,KACKzd,EAAKgM,KAAI,SAAC+M,GACP,OACI,kBAAC2E,GAAA,EAAD,KACK3E,EAAKyY,oBAO9B,kBAAClnB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGJ,MAAO,CAAEC,WAAY,WACnC,kBAACN,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IAAf,mBAGA,kBAACT,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAIJ,MAAO,CAAET,OAAQ,MAChC,kBAACI,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,IACX,kBAACS,EAAA,EAAD,CACIH,QAAQ,YACRI,QAAS,kBAAM8lB,EAAW,KAF9B,KAMA,kBAAC/lB,EAAA,EAAD,CACIH,QAAQ,YACRI,QAAS,kBAAM8lB,EAAW,KAF9B,MAOJ,kDACA,4BAAKD,SAO7B,kBAAChnB,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,GAAIJ,MAAO,CAAEC,WAAY,SACpC,kBAAC,GAAD,SC1EpB,IAAM6mB,GAAYrV,SAASsV,cAAc,QACzCD,GAAU9T,IAAM,aAChB8T,GAAUzmB,KACR,iEACFoR,SAASuV,KAAKC,YAAYH,IAE1B,IAAMI,GAAM,WAAO,IAAD,EACQ3yB,mBAAS,MADjB,mBACH+D,GADG,WAGhB6K,qBAAU,WACRxN,EAAsB0B,YAAY8vB,WAAU,SAACpH,GAAD,OAC1CznB,EAAQ,CAAEjB,YAAa0oB,SAExB,IAOH,OACE,kBAAC,IAAD,CAAQxnB,QAASA,GACf,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6uB,OAAK,EAACC,KAAK,IAAI5vB,UAAWmb,KACjC,kBAAC,EAAD,CAAcyU,KAAK,QAAQ5vB,UAAWmb,KACtC,kBAAC,EAAD,CACEyU,KAAK,gBACL5vB,UAAWmM,IAEb,kBAAC,EAAD,CAAcyjB,KAAK,YAAY5vB,UAAW+uB,KAC1C,kBAAC,EAAD,CAAca,KAAK,QAAQ5vB,UAAW8uB,KACtC,kBAAC,IAAD,CAAOc,KAAK,SAAS5vB,UAAWkc,SAO1C2T,IAAS3vB,OACP,kBAAC,EAAD,KACE,kBAAC,GAAD,OAEF8Z,SAAS8V,eAAe,SjCuEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtyB,MAAK,SAAAuyB,GACJA,EAAaC,gBAEd7P,OAAM,SAAAliB,GACLY,QAAQZ,MAAMA,EAAMC,a","file":"static/js/main.4213f751.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header_dimop.ec064c47.svg\";","module.exports = __webpack_public_path__ + \"static/media/norman_pytel.78bcabb7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Universität_Würzburg_Logo.3c8fe00d.svg\";","module.exports = __webpack_public_path__ + \"static/media/skz_logo.7d7b3783.png\";","module.exports = __webpack_public_path__ + \"static/media/stami.fcdc1553.png\";","module.exports = __webpack_public_path__ + \"static/media/forcycle2.6d93023d.png\";","module.exports = __webpack_public_path__ + \"static/media/solution.6346d15a.jpg\";","import React, { createContext, useState } from \"react\";\n\n// export context for state management\nexport const APIContext = createContext();\n\n// provider with managed states || add new states\n// SET USE API = TRUE IF NO DEBUGGING\nexport const APIProvider = (props) => {\n    // use api or local json?\n    const [use_API, setUseAPI] = useState(false);\n    // set api host\n    const [API_Host, setAPIHost] = useState(\"http://localhost:5000\");\n    // set user_id for initial access\n    const [API_User, setAPIUser] = useState(5);\n\n    return (\n        <APIContext.Provider\n            value={{\n                use_API: [use_API, setUseAPI],\n                API_Host: [API_Host, setAPIHost],\n                API_User: [API_User, setAPIUser],\n            }}\n        >\n            {props.children}\n        </APIContext.Provider>\n    );\n};\n","import { authenticationService } from \"../services/authenticationService\";\n\nexport function handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if ([401, 403].indexOf(response.status) !== -1) {\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n        authenticationService.logout();\n        //location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","import { BehaviorSubject } from \"rxjs\";\nimport { handleResponse } from \"../helpers/handle-response\";\n\nconst currentUserSubject = new BehaviorSubject(\n  JSON.parse(localStorage.getItem(\"currentUser\"))\n);\n\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n  get currentUserValue() {\n    return currentUserSubject.value;\n  },\n};\n\nfunction login(username, password) {\n  console.log(JSON.stringify({ username, password }));\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, password }),\n  };\n\n  return fetch(`/auth`, requestOptions)\n    .then(handleResponse)\n    .then((user) => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      console.log(JSON.stringify(user));\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n      currentUserSubject.next(user);\n\n      return user;\n    });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"currentUser\");\n  currentUserSubject.next(null);\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { authenticationService } from \"../../services/authenticationService\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const currentUser = authenticationService.currentUserValue;\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      // auth success => Return Component\n      return <Component {...props} />;\n    }}\n  />\n);\n","import React from \"react\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\n\nexport const UserContext = createContext({ name: \"\", auth: false });\n\nexport const UserProvider = ({ children }) => {\n  // User is the name of the \"data\" that gets stored in context\n  const [user, setUser] = useState({ name: \"\", auth: localStorage.getItem(\"auth\") || false });\n\n  // Login updates the user data with a name parameter\n  const login = (name) => {\n    setUser((user) => ({\n      name: name,\n      auth: true,\n    }));\n  };\n\n  // Logout updates the user data to default\n  const logout = () => {\n    setUser((user) => ({\n      name: \"\",\n      auth: false,\n    }));\n  };\n\n  return <UserContext.Provider value={{ user, login, logout }}>{children}</UserContext.Provider>;\n};\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { createContext, useState } from \"react\";\n\n// export context for state management\nexport const ConstructionContext = createContext();\n\n// provider with managed states || add new states\nexport const ConstructionProvider = (props) => {\n    //////// states construction\n    // content management\n    const [content_num, setContentNum] = useState(1);\n\n    // states load cons\n    const [open_load_cons, setOpenLoadCons] = useState(false);\n    const [selected_cons_load, setSelectedConsLoad] = useState([]);\n    const [loaded_cons, setLoadedCons] = useState({});\n\n    // states delete cons\n    const [open_delete_cons, setOpenDeleteCons] = useState(false);\n    const [selected_cons_delete, setSelectedConsDelete] = useState([]);\n\n    // states delete cons\n    const [open_add_cons, setOpenAddCons] = useState(false);\n\n    // states settings password\n    const [open_settings_password, setOpenSettingsPassword] = useState(false);\n\n    // states settings account\n    const [open_settings_account, setOpenSettingsAccount] = useState(false);\n\n    // states search material\n    const [open_search_material, setOpenSearchMaterial] = useState(false);\n    const [selected_material, setSelectedMaterial] = useState([]);\n    const [search_material_columns, setSearchMaterialColumns] = useState([]);\n    const [search_material_rows, setSearchMaterialRows] = useState([]);\n    const [\n        need_refresh_search_material,\n        setNeedRefreshSearchMaterial,\n    ] = useState(false);\n    const [search_material_api_loaded, setSearchMaterialApiLoaded] = useState(\n        true\n    );\n    const [open_filter_columns, setOpenFilterColumns] = useState(false);\n    const [filter_columns_show_columns, setFilterColumnsShowColumns] = useState(\n        []\n    );\n    const [filter_columns_selected, setFilterColumnsSelected] = useState([]);\n    const [\n        search_material_columns_source,\n        setSearchMaterialColumnsSource,\n    ] = useState([]);\n    const [use_selected_material, setUseSelectedMaterial] = useState({\n        mara_id: \"\",\n        mat_desc: \"\",\n        mara_nr: \"\",\n    });\n    const [jump_to_material_search, setJumpToMaterialSearch] = useState();\n\n    //// states construction info\n    // project team\n    const [selected_user, setSelectedUser] = useState([]);\n    const [open_delete_user, setOpenDeleteUser] = useState(false);\n    const [open_add_user, setOpenAddUser] = useState(false);\n    const [open_edit_user, setOpenEditUser] = useState(false);\n    const [edited_user, setEditedUser] = useState({});\n    const [need_refresh_project_team, setNeedRefreshProjectTeam] = useState(\n        false\n    );\n\n    // project info\n    const [selected_alternative, setSelectedAlternative] = useState([]);\n    const [open_delete_alternative, setOpenDeleteAlternative] = useState(false);\n    const [open_add_alternative, setOpenAddAlternative] = useState(false);\n    const [open_edit_alternative, setOpenEditAlternative] = useState(false);\n    const [edited_alternative, setEditedAlternative] = useState({});\n    const [need_refresh_project_info, setNeedRefreshProjectInfo] = useState(\n        false\n    );\n\n    //// table tree\n    // load alternative\n    const [loaded_alternative, setLoadedAlternative] = useState({});\n\n    // components tree\n    const [need_refresh_components, setNeedRefreshComponents] = useState(false);\n    const [selected_component, setSelectedComponent] = useState([]);\n    const [selected_component_id, setSelectedComponentId] = useState([]);\n    const [edited_component, setEditedComponent] = useState({});\n\n    const [open_delete_component, setOpenDeleteComponent] = useState(false);\n    const [open_add_component, setOpenAddComponent] = useState(false);\n    const [open_edit_component, setOpenEditComponent] = useState(false);\n\n    return (\n        <ConstructionContext.Provider\n            value={{\n                //// Construction\n\n                // content management\n                content_num: [content_num, setContentNum],\n\n                // load cons\n                loaded_cons: [loaded_cons, setLoadedCons],\n                open_load_cons: [open_load_cons, setOpenLoadCons],\n                selected_cons_load: [selected_cons_load, setSelectedConsLoad],\n\n                // delete cons\n                open_delete_cons: [open_delete_cons, setOpenDeleteCons],\n                selected_cons_delete: [\n                    selected_cons_delete,\n                    setSelectedConsDelete,\n                ],\n\n                // delete cons\n                open_add_cons: [open_add_cons, setOpenAddCons],\n\n                // settings password\n                open_settings_password: [\n                    open_settings_password,\n                    setOpenSettingsPassword,\n                ],\n\n                // settings account\n                open_settings_account: [\n                    open_settings_account,\n                    setOpenSettingsAccount,\n                ],\n\n                // search material\n                open_search_material: [\n                    open_search_material,\n                    setOpenSearchMaterial,\n                ],\n                selected_material: [selected_material, setSelectedMaterial],\n                search_material_columns: [\n                    search_material_columns,\n                    setSearchMaterialColumns,\n                ],\n                search_material_rows: [\n                    search_material_rows,\n                    setSearchMaterialRows,\n                ],\n                need_refresh_search_material: [\n                    need_refresh_search_material,\n                    setNeedRefreshSearchMaterial,\n                ],\n                search_material_api_loaded: [\n                    search_material_api_loaded,\n                    setSearchMaterialApiLoaded,\n                ],\n                open_filter_columns: [\n                    open_filter_columns,\n                    setOpenFilterColumns,\n                ],\n                filter_columns_show_columns: [\n                    filter_columns_show_columns,\n                    setFilterColumnsShowColumns,\n                ],\n                filter_columns_selected: [\n                    filter_columns_selected,\n                    setFilterColumnsSelected,\n                ],\n                search_material_columns_source: [\n                    search_material_columns_source,\n                    setSearchMaterialColumnsSource,\n                ],\n                use_selected_material: [\n                    use_selected_material,\n                    setUseSelectedMaterial,\n                ],\n                jump_to_material_search: [\n                    jump_to_material_search,\n                    setJumpToMaterialSearch,\n                ],\n\n                //// construction info\n                // project team\n                selected_user: [selected_user, setSelectedUser],\n                open_delete_user: [open_delete_user, setOpenDeleteUser],\n                open_add_user: [open_add_user, setOpenAddUser],\n                open_edit_user: [open_edit_user, setOpenEditUser],\n                edited_user: [edited_user, setEditedUser],\n                need_refresh_project_team: [\n                    need_refresh_project_team,\n                    setNeedRefreshProjectTeam,\n                ],\n\n                // project info\n                selected_alternative: [\n                    selected_alternative,\n                    setSelectedAlternative,\n                ],\n                open_delete_alternative: [\n                    open_delete_alternative,\n                    setOpenDeleteAlternative,\n                ],\n                open_add_alternative: [\n                    open_add_alternative,\n                    setOpenAddAlternative,\n                ],\n                open_edit_alternative: [\n                    open_edit_alternative,\n                    setOpenEditAlternative,\n                ],\n                edited_alternative: [edited_alternative, setEditedAlternative],\n                need_refresh_project_info: [\n                    need_refresh_project_info,\n                    setNeedRefreshProjectInfo,\n                ],\n\n                //// tabletree\n                // load alternative\n                loaded_alternative: [loaded_alternative, setLoadedAlternative],\n\n                // components tree\n                need_refresh_components: [\n                    need_refresh_components,\n                    setNeedRefreshComponents,\n                ],\n                selected_component: [selected_component, setSelectedComponent],\n                selected_component_id: [\n                    selected_component_id,\n                    setSelectedComponentId,\n                ],\n                edited_component: [edited_component, setEditedComponent],\n\n                open_delete_component: [\n                    open_delete_component,\n                    setOpenDeleteComponent,\n                ],\n                open_add_component: [open_add_component, setOpenAddComponent],\n                open_edit_component: [\n                    open_edit_component,\n                    setOpenEditComponent,\n                ],\n            }}\n        >\n            {props.children}\n        </ConstructionContext.Provider>\n    );\n};\n","const lightGreen = \"#19BB66\";\nconst primaryGreen = \"#007F3D\";\n\nconst yellow = \"#C3B533\";\nconst orange = \"#CB6F30\";\nconst red = \"#B63843\";\n\nconst lightGrey = \"#dfe6e9\";\nconst mediumGrey = \"#b2bec3\";\nconst darkGrey = \"#636e72\";\n\nconst black = \"#000000\";\nconst white = \"#ffffff\";\n\nconst colors = {\n    lightGreen,\n    primaryGreen,\n    yellow,\n    orange,\n    red,\n    lightGrey,\n    mediumGrey,\n    darkGrey,\n    white,\n    black,\n};\n\nexport default colors;\n","import { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport logo from \"../../assets/img/header_dimop.svg\";\nimport { authenticationService } from \"../../services/authenticationService\";\nimport colors from \"../../variables/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    color: \"white\",\n    border: 0,\n    \"&:hover\": {\n      backgroundColor: colors.lightGreen,\n      color: colors.primaryGreen,\n    },\n  },\n  text: {\n    color: \"white\",\n  },\n  logo: {\n    height: 64,\n    padding: 16,\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n\n  // const { use_API } = useContext(APIContext);\n  // const [useAPI, setUseAPI] = use_API;\n\n  const user = localStorage.getItem(\"currentUser\");\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{\n          // background: useAPI ? \"#007F3D\" : \"red\",\n          background: \"#007F3D\",\n          marginBottom: 16,\n        }}\n      >\n        <Grid item xs={6}>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <a href=\"/construction\">\n                <img src={logo} alt=\"logo\" className={classes.logo}></img>\n              </a>\n            </Grid>\n            <Grid item>\n              <a href=\"/construction\">\n                <Typography variant=\"h6\" noWrap className={classes.text}>\n                  DIMOP\n                </Typography>\n              </a>\n            </Grid>\n\n            {/*}\n            <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.buttons}\n                                href=\"/login\"\n                            >\n                                Registrieren\n                            </Button>\n                        </Grid>\n            <Grid item style={{ marginLeft: 32 }}>\n                            <span>useAPI: </span>\n                            <span>{useAPI ? \"true\" : \"false\"}</span>\n                        </Grid>\n                          */}\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container spacing={2} justify=\"space-evenly\">\n            {user !== null ? (\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  href=\"/main\"\n                >\n                  Main\n                </Button>\n              </Grid>\n            ) : (\n              \"\"\n            )}\n\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                className={classes.buttons}\n                href=\"/home\"\n              >\n                Startseite\n              </Button>\n            </Grid>\n            <Grid item>\n              {user !== null ? (\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  onClick={() => {\n                    authenticationService.logout();\n                  }}\n                >\n                  Abmelden\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  href=\"/login\"\n                >\n                  Anmelden\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n} from \"@material-ui/core\";\n\nexport const DataTable = (props) => {\n    const { data, columns, rowClick } = props;\n\n    return (\n        <Table>\n            <TableHead>\n                <TableRow>\n                    {columns.map((e) => {\n                        return <TableCell>{e.label}</TableCell>;\n                    })}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {data.map((r) => {\n                    return (\n                        <TableRow hover onClick={() => rowClick(r.id)}>\n                            {columns.map((c) => {\n                                return <TableCell>{r[c.col_id]}</TableCell>;\n                            })}\n                        </TableRow>\n                    );\n                })}\n            </TableBody>\n        </Table>\n    );\n};\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useState } from \"react\";\n\nimport constructions from \"../../files/constructions.json\";\n\nimport {\n    Table,\n    TableRow,\n    TableHead,\n    TableBody,\n    TableCell,\n} from \"@material-ui/core\";\nimport { DataTable } from \"../../components/DataTable/DataTable\";\n\nconst ConstructionLoad = (props) => {\n    // const [open, setOpen] = useState(props.loadDialogOpen || false);\n\n    const openDialog = () => props.setOpen(true);\n    const closeDialog = () => props.setOpen(false);\n\n    const setConstructionLoadedId = (id) => {\n        props.setConstructionLoadedId(id);\n        closeDialog();\n    };\n\n    console.log(props);\n    return (\n        <div>\n            <Dialog\n                open={props.open}\n                // onClose={handleCloseLoadConsBreak}\n                aria-labelledby=\"form-dialog-title\"\n                fullWidth={true}\n                maxWidth={\"lg\"}\n            >\n                <DialogTitle id=\"form-dialog-title\">\n                    Konstruktion Laden\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText style={{ color: \"black\" }}>\n                        Wählen Sie die zu ladende Konstruktion aus.\n                    </DialogContentText>\n                    <DataTable\n                        data={constructions.data}\n                        columns={constructions.columns}\n                        rowClick={setConstructionLoadedId}\n                    />\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={closeDialog} variant=\"outlined\">\n                        Abbrechen\n                    </Button>\n                    <Button\n                        // onClick={handleCloseLoadCons}\n                        variant=\"outlined\"\n                        style={{ marginLeft: 10 }}\n                    >\n                        Laden\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default ConstructionLoad;\n","import React, { useContext, useState, useEffect, Fragment } from \"react\";\n\nimport {\n    Button,\n    CircularProgress,\n    Grid,\n    Step,\n    StepLabel,\n    Stepper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nimport ConstructionLoad from \"./ConstructionLoad\";\nimport variants from \"../../files/constructionVariantsById.json\";\nimport { DataTable } from \"../../components/DataTable/DataTable\";\n\n// css theme || use classes.NAME\nconst useStyles = makeStyles((theme) => ({}));\n\n// build construction view\nexport default function Construction() {\n    // standard import for using styles\n    const classes = useStyles();\n    // const theme = useTheme();\n\n    const [constructionLoadedId, setConstructionLoadedId] = useState(null);\n    const [loadDialogOpen, setLoadDialogOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        //fetch data\n        // fetch(\"constructionById/constructionLoadedId\").then(res => res.json()).then(res => {\n        //     setData(res)\n        //     setLoading(false)\n        // })\n        console.log(\"use effect\");\n    }, [constructionLoadedId]);\n\n    // get managed states from context\n    // const {\n    //     open_load_cons,\n    //     content_num,\n    // } = useContext(ConstructionContext);\n\n    return (\n        <div>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item>\n                    <Stepper activeStep=\"1\">\n                        <Step key=\"1\">\n                            <StepLabel>Konstruktion laden</StepLabel>\n                        </Step>\n                        <Step key=\"2\">\n                            <StepLabel>Varianten vergleichen</StepLabel>\n                        </Step>\n                    </Stepper>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item>\n                    {constructionLoadedId ? (\n                        <Fragment>\n                            {isLoading ? (\n                                <CircularProgress />\n                            ) : (\n                                <DataTable\n                                    data={variants.data}\n                                    columns={variants.columns}\n                                    rowClick={() => console.log(\"asd\")}\n                                />\n                            )}\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <Typography variant=\"h1\" align=\"center\">\n                                Laden Sie eine Konstruktion\n                            </Typography>\n                            <Button onClick={() => setLoadDialogOpen(true)}>\n                                Konstruktion auswählen\n                            </Button>\n                        </Fragment>\n                    )}\n                </Grid>\n            </Grid>\n\n            {/* Dialogs */}\n            <ConstructionLoad\n                open={loadDialogOpen}\n                setOpen={setLoadDialogOpen}\n                setConstructionLoadedId={setConstructionLoadedId}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { ConstructionProvider } from \"./ConstructionContext\";\nimport Construction from \"./Construction\";\n\n// import provider for wrapping and state management in construction Info\nfunction ConstructionWrapper() {\n  return (\n    <ConstructionProvider>\n      <div>\n        <Construction></Construction>\n      </div>\n    </ConstructionProvider>\n  );\n}\n\nexport default ConstructionWrapper;\n","import React from \"react\";\n\nimport norman from \"../../assets/img/norman_pytel.jpg\";\nimport {\n    Typography,\n    makeStyles,\n    Card,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 320,\n    },\n}));\n\nexport const Ansprechpartner = () => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={norman}\n                    title=\"Ansprechpartner\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Norman Pytel\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        Lehrstuhl für BWL und Wirtschaftsinformatik Prof. Dr.\n                        Axel Winkelmann\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        Julius-Maximilians-Universität Würzburg\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        Sanderring 2\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        97070 Würzburg\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        E-Mail: Norman.Pytel@uni-wuerzburg.de\n                    </Typography>\n                    <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                    >\n                        Telefon: 0931 31-86348\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n};\n","import React, { Component } from \"react\";\n\nimport logo_uni from \"../../assets/img/Universität_Würzburg_Logo.svg\";\nimport logo_skz from \"../../assets/img/skz_logo.png\";\nimport logo_stami from \"../../assets/img/stami.png\";\nimport logo_forcycle2 from \"../../assets/img/forcycle2.png\";\n\nimport { Grid, Typography } from \"@material-ui/core\";\n\nconst Logo = (props) => {\n    return (\n        <Grid container justify=\"center\">\n            <Grid item>\n                <a href={props.href} target=\"_blank\">\n                    <img\n                        src={props.src}\n                        style={{ height: 64, marginTop: 16, marginBottom: 16 }}\n                        alt={props.alt}\n                    />\n                </a>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default class PartnerLogos extends Component {\n    render() {\n        return (\n            <Grid container justify=\"center\">\n                <Grid item xs={6} md={3}>\n                    <Logo\n                        href=\"https://www.wiwi.uni-wuerzburg.de/lehrstuhl/wiinf2/startseite/\"\n                        src={logo_uni}\n                        alt=\"logo_uni\"\n                    />\n                </Grid>\n\n                <Grid item xs={6} md={3}>\n                    <Logo\n                        href=\"https://www.skz.de/de/index.html\"\n                        src={logo_skz}\n                        alt=\"logo_skz\"\n                    />\n                </Grid>\n\n                <Grid item xs={6} md={3}>\n                    <Logo\n                        href=\"https://www.stmuv.bayern.de\"\n                        src={logo_stami}\n                        alt=\"logo_stami\"\n                    />\n                </Grid>\n\n                <Grid item xs={6} md={3}>\n                    <Logo\n                        href=\"https://www.stmuv.bayern.de/themen/ressourcenschutz/forcycle/forcycle2/index.htm\"\n                        src={logo_forcycle2}\n                        alt=\"logo_forcycle2\"\n                    />\n                </Grid>\n            </Grid>\n        );\n    }\n}\n","import React, { createContext, useState } from \"react\";\n\nexport const MainContext = createContext();\n\nexport const MainProvider = (props) => {\n  const [orga_id, setOrgaId] = useState(1);\n  const [selected_construction_id, setSelectedConstructionId] = useState([]);\n  const [selected_construction_title, setSelectedConstructionTitle] = useState(\n    \"Bitte auswaehlen\"\n  );\n  const [selected_material, setSelectedMaterial] = useState();\n  const [delete_material, setDeleteMaterial] = useState();\n  const [parent_material, setParentMaterial] = useState();\n  const [new_material, setNewMaterial] = useState({\n    mat_desc: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"\",\n    weight: \"\",\n    weight_unit: \"\",\n    volume: \"\",\n    volume_unit: \"\",\n  });\n  const [new_construction, setNewConstruction] = useState({\n    cons_title: \"\",\n    cons_desc: \"\",\n    orga_id: orga_id,\n    del_kz: 0,\n  });\n  const [add_component_open, setAddComponentOpen] = useState(false);\n  const [delete_component_open, setDeleteComponentOpen] = useState(false);\n  const [add_bom_open, setAddBomOpen] = useState(false);\n  const [bom_updated, setBomUpdated] = useState(false);\n  const [child_updated, setChildUpdated] = useState(false);\n  const [add_plast_open, setAddPlastOpen] = useState(false);\n  const [evaluation_open, setEvaluationOpen] = useState(false);\n  const [data_backend, setDataBackend] = useState([]);\n  const [highest_level_id, setHighestLevelId] = useState();\n  const [add_construction_open, setAddConstructionOpen] = useState(false);\n  const [constructions_updated, setConstructionsUpdated] = useState(false);\n  const [delete_construction_open, setDeleteConstructionOpen] = useState(false);\n  const [delete_construction, setDeleteConstruction] = useState();\n  const [new_bom_created, setNewBomCreated] = useState(false);\n  const [add_component_mode, setComponentMode] = useState(\"\");\n  const [active_step, setActiveStep] = useState(0);\n  const [selection_atomic, setSelectionAtomic] = useState([]);\n  const [material_created, setMaterialCreated] = useState(false);\n  const [csv_upload_open, setCsvUploadOpen] = useState(false);\n\n  return (\n    <MainContext.Provider\n      value={{\n        selected_construction_id: [\n          selected_construction_id,\n          setSelectedConstructionId,\n        ],\n        selected_construction_title: [\n          selected_construction_title,\n          setSelectedConstructionTitle,\n        ],\n        selected_material: [selected_material, setSelectedMaterial],\n        parent_material: [parent_material, setParentMaterial],\n        delete_material: [delete_material, setDeleteMaterial],\n        new_material: [new_material, setNewMaterial],\n        add_component_open: [add_component_open, setAddComponentOpen],\n        delete_component_open: [delete_component_open, setDeleteComponentOpen],\n        add_bom_open: [add_bom_open, setAddBomOpen],\n        orga_id: [orga_id, setOrgaId],\n        bom_updated: [bom_updated, setBomUpdated],\n        child_updated: [child_updated, setChildUpdated],\n        add_plast_open: [add_plast_open, setAddPlastOpen],\n        evaluation_open: [evaluation_open, setEvaluationOpen],\n        data_backend: [data_backend, setDataBackend],\n        highest_level_id: [highest_level_id, setHighestLevelId],\n        add_construction_open: [add_construction_open, setAddConstructionOpen],\n        constructions_updated: [constructions_updated, setConstructionsUpdated],\n        new_construction: [new_construction, setNewConstruction],\n        delete_construction: [delete_construction, setDeleteConstruction],\n        delete_construction_open: [\n          delete_construction_open,\n          setDeleteConstructionOpen,\n        ],\n        new_bom_created: [new_bom_created, setNewBomCreated],\n        add_component_mode: [add_component_mode, setComponentMode],\n        active_step: [active_step, setActiveStep],\n        selection_atomic: [selection_atomic, setSelectionAtomic],\n        material_created: [material_created, setMaterialCreated],\n        csv_upload_open: [csv_upload_open, setCsvUploadOpen],\n      }}\n    >\n      {props.children}\n    </MainContext.Provider>\n  );\n};\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  FormControl,\n  Grid,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slide,\n  Slider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  fade,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport autocompleteData from \"../../files/search_plast_data.json\";\nimport colors from \"../../variables/colors\";\nimport materialData from \"../../files/plast.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  filterContainer: {\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  gridContainer: {\n    padding: theme.spacing(8),\n  },\n  inputInput: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"100%\",\n    },\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  search: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: 0,\n    marginRight: theme.spacing(2),\n    position: \"relative\",\n    width: \"100%\",\n  },\n  searchIcon: {\n    alignItems: \"center\",\n    display: \"flex\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    padding: theme.spacing(0, 2),\n    pointerEvents: \"none\",\n    position: \"absolute\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst Result = (props) => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const { data, filter } = props;\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    console.log(filter);\n    console.log(data);\n  };\n\n  const setNewMaterial = () => {\n    const req = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        newMaterial: data,\n      }),\n    };\n\n    fetch(\"/results\", req)\n      .then((res) => res.json())\n      .then((json) => console.log(json));\n  };\n\n  return (\n    <Fragment>\n      <Dialog\n        open={dialogOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{data.mat_desc}</DialogTitle>\n        <DialogContent>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Key</TableCell>\n                <TableCell>Value</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(filter)\n                // .filter((e) => e !== \"search\")\n                .map((e) => {\n                  // console.log(e);\n                  return (\n                    <TableRow>\n                      <TableCell>\n                        <Typography>{e}</Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography>{data[e] ? data[e] : \"Nicht verfügbar\"}</Typography>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Schließen\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Grid item xs={12} md={6} lg={4} xl={3}>\n        <Card>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {data.id}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {data.mat_desc}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {data.campus_fam}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {data.producer}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\" variant=\"outlined\" onClick={() => setDialogOpen(true)}>\n              <Typography variant=\"body2\">Mehr erfahren</Typography>\n            </Button>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              onClick={setNewMaterial}\n              style={{ backgroundColor: colors.lightGreen, color: colors.lightGrey }}\n            >\n              <Typography variant=\"body\">Auswählen</Typography>\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>{\" \"}\n    </Fragment>\n  );\n};\n\nconst SearchField = (props) => {\n  return (\n    <Grid item xs={12}>\n      {/* <Autocomplete\n        id=\"combo-box-demo\"\n        options={top100Films}\n        getOptionLabel={(option) => option}\n        style={{ width: 300 }}\n        renderInput={(params) => (\n          <TextField\n            id=\"filled-name\"\n            label={props.placeholder}\n            // value={props.value}\n            // onChange={props.onChange}\n            variant=\"filled\"\n            fullWidth\n          />\n        )}\n      /> */}\n\n      <Autocomplete\n        options={props.options}\n        getOptionLabel={(option) => option}\n        value={props.value}\n        onChange={(event, newValue) => {\n          props.onChange(newValue);\n        }}\n        renderInput={(params) => <TextField {...params} label={props.placeholder} margin=\"normal\" />}\n      />\n\n      {/* <TextField label={props.placeholder} margin=\"normal\" value={props.value} onChange={props.onChange} /> */}\n    </Grid>\n  );\n};\n\nconst Filter = (props) => {\n  const [dropdownKeys, setDropdownKeys] = useState([]);\n  const [sliderValue, setSliderValue] = useState([0, 10]);\n  const [sliderRange, setSliderRange] = useState([0, 10]);\n  const [dropdownSelection, setDropdownSelection] = useState(\"\");\n  const [data, setData] = useState({});\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    // get dropdown options and slider range\n    fetch(`/search/${props.suffix.toLowerCase()}`)\n      .then((res) => res.json())\n      .then((json) => {\n        setDropdownKeys(Object.keys(json).map((elem) => elem));\n        setData(json);\n      })\n      .then(() => setLoaded(true));\n  }, []);\n\n  // selecting first element by default\n  // useEffect(() => {\n  //   setDropdownSelection(dropdownKeys[0]);\n  // }, [dropdownKeys]);\n\n  useEffect(() => {\n    if (loaded) {\n      setSliderRange([data[dropdownSelection].min, data[dropdownSelection].max]);\n      setSliderValue([data[dropdownSelection].min, data[dropdownSelection].max]);\n    }\n  }, [dropdownSelection]);\n\n  const handleDropdownChange = (e) => {\n    setDropdownSelection(e.target.value);\n    props.handleDropdownChange(e.target.value);\n  };\n\n  const handleSliderChange = (e, newValue) => {\n    setSliderValue(newValue);\n    props.handleSliderChange(newValue); // makes the component really laggy\n  };\n\n  // const getSliderRange = () => {\n  //   // There's no real number bigger than plus Infinity\n  //   let lowest = Number.POSITIVE_INFINITY;\n  //   let highest = Number.NEGATIVE_INFINITY;\n  //   let tmp;\n  //   for (let i = props.data.length - 1; i >= 0; i--) {\n  //     tmp = props.data[i].Zugmodul_MPa_trocken;\n  //     if (!tmp) continue;\n  //     if (tmp < lowest) lowest = tmp;\n  //     if (tmp > highest) highest = tmp;\n  //   }\n  //   return [lowest, highest];\n  // };\n\n  return (\n    <Grid container spacing={2} item xs={12} direction=\"row\" justify=\"center\" alignItems=\"flex-end\">\n      <Grid item xs={12} sm={8}>\n        <FormControl fullWidth>\n          <InputLabel id=\"demo-simple-select-label\">{props.suffix || \"\"}</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={dropdownSelection}\n            onChange={handleDropdownChange}\n          >\n            {dropdownKeys.map((key) => (\n              <MenuItem value={key} key={key}>\n                {key}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Slider\n          value={sliderValue}\n          onChange={handleSliderChange}\n          min={sliderRange[0]} //getMin\n          max={sliderRange[1]} //getMax\n          step={1}\n          marks\n          valueLabelDisplay=\"auto\"\n        ></Slider>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport const Search = () => {\n  const classes = useStyles();\n\n  const [data, setData] = useState(materialData);\n\n  const [filterActive, setFilterActive] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [sliderIdValue, setSliderIdValue] = useState(10);\n  const [sliderFamValue, setSliderFamValue] = useState(10);\n\n  const INITIAL_FILTER = {\n    search: \"\",\n    mat_desc: \"\",\n    campus_fam: \"\",\n    producer: \"\",\n    verarbeitungsmethode: \"\",\n  };\n  const [filter, setFilter] = useState(INITIAL_FILTER);\n\n  const [resultData, setResultData] = useState([]);\n\n  const handleSearch = () => {\n    // searchurl: /search?id=123&mat_desc=najksd&...&...&...&..&..&..\n    // concatenate all params\n    let params = [`producer=${filter.producer}`];\n    params.push(`&mat_desc=${filter.mat_desc}`)\n    params.push(`&campus_fam=${filter.campus_fam}`)\n    console.log(params)\n    for (let e in filter) {\n      if (filter[e].dropdown) {\n        params.push(`&${filter[e].dropdown}=${filter[e].min},${filter[e].max}`);\n      }\n    }\n\n    fetch(\"/results?\" + params.join(\"\"))\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n\n        //handle results and update display\n        // updateResultData();\n        setResultData(json);\n      });\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const resetFilter = () => {\n    // define default values/object for reset\n    setFilter(INITIAL_FILTER);\n  };\n\n  // real time updating resulting in huge performance issues\n  // useEffect(() => {\n  //   getResultData();\n  // }, [filter]);\n\n  useEffect(() => {\n    console.log(\"Result Data updated\");\n    console.log(filter);\n  }, [resultData]);\n\n  const updateResultData = () => {\n    setResultData(\n      data.filter((elem) => {\n        return elem.mat_desc.toLowerCase().includes(filter.search.toLowerCase());\n      })\n    );\n  };\n\n  return (\n    <Fragment>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item xs={12} md={6} spacing={1} className={classes.filterContainer}>\n          <SearchField\n            options={autocompleteData.mat_desc}\n            value={filter.mat_desc}\n            onChange={(newValue) => setFilter({ ...filter, mat_desc: newValue })}\n            placeholder={\"Materialbezeichnung\"}\n          />\n\n          <SearchField\n            options={autocompleteData.campus_fam}\n            value={filter.campus_fam}\n            onChange={(newValue) => setFilter({ ...filter, campus_fam: newValue })}\n            placeholder={\"Materialfamilie\"}\n          />\n          <SearchField\n            options={autocompleteData.producer}\n            value={filter.producer}\n            onChange={(newValue) => setFilter({ ...filter, producer: newValue })}\n            placeholder={\"Hersteller\"}\n          />\n          <SearchField\n            options={autocompleteData.verarbeitungsmethode}\n            value={filter.verarbeitungsmethode}\n            onChange={(newValue) => setFilter({ ...filter, verarbeitungsmethode: newValue })}\n            placeholder={\"Verarbeitungsmethode\"}\n          />\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              onClick={handleSearch}\n              fullWidth\n              style={{ backgroundColor: colors.lightGreen, color: colors.lightGrey }}\n            >\n              Suchen\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              onClick={resetFilter}\n              fullWidth\n              style={{ backgroundColor: colors.red, color: colors.lightGrey }}\n            >\n              Suche zurücksetzen\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container item xs={12} md={6} spacing={1} className={classes.filterContainer}>\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            suffix=\"Zugmodul\"\n            value={filter.zugmodul}\n            handleDropdownChange={(val) => setFilter({ ...filter, zugmodul: { ...filter.zugmodul, dropdown: val } })}\n            handleSliderChange={(val) =>\n              setFilter({ ...filter, zugmodul: { ...filter.zugmodul, min: val[0], max: val[1] } })\n            }\n          ></Filter>\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            suffix=\"Bruchdehnung\"\n            value={filter.bruchdehnung}\n            handleDropdownChange={(val) =>\n              setFilter({ ...filter, bruchdehnung: { ...filter.bruchdehnung, dropdown: val } })\n            }\n            handleSliderChange={(val) =>\n              setFilter({ ...filter, bruchdehnung: { ...filter.bruchdehnung, min: val[0], max: val[1] } })\n            }\n          ></Filter>{\" \"}\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            suffix=\"Bruchspannung\"\n            value={filter.bruchspannung}\n            handleDropdownChange={(val) =>\n              setFilter({ ...filter, bruchspannung: { ...filter.bruchspannung, dropdown: val } })\n            }\n            handleSliderChange={(val) =>\n              setFilter({ ...filter, bruchspannung: { ...filter.bruchspannung, min: val[0], max: val[1] } })\n            }\n          ></Filter>{\" \"}\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            suffix=\"Belastung\"\n            value={filter.belastung}\n            handleDropdownChange={(val) => setFilter({ ...filter, belastung: { ...filter.belastung, dropdown: val } })}\n            handleSliderChange={(val) =>\n              setFilter({ ...filter, belastung: { ...filter.belastung, min: val[0], max: val[1] } })\n            }\n          ></Filter>{\" \"}\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            suffix=\"Temperatur\"\n            value={filter.temperatur}\n            handleDropdownChange={(val) =>\n              setFilter({ ...filter, temperatur: { ...filter.temperatur, dropdown: val } })\n            }\n            handleSliderChange={(val) =>\n              setFilter({ ...filter, temperatur: { ...filter.temperatur, min: val[0], max: val[1] } })\n            }\n          ></Filter>{\" \"}\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            value={filter.dichte}\n            suffix=\"Dichte\"\n            handleDropdownChange={(val) => setFilter({ ...filter, dichte: { ...filter.dichte, dropdown: val } })}\n            handleSliderChange={(val) =>\n              setFilter({ ...filter, dichte: { ...filter.dichte, min: val[0], max: val[1] } })\n            }\n          ></Filter>{\" \"}\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n          <Filter\n            data={data}\n            value={filter.MVR}\n            suffix=\"MVR\"\n            handleDropdownChange={(val) => setFilter({ ...filter, MVR: { ...filter.MVR, dropdown: val } })}\n            handleSliderChange={(val) => setFilter({ ...filter, MVR: { ...filter.MVR, min: val[0], max: val[1] } })}\n          ></Filter>{\" \"}\n          <Grid item xs={12}>\n            <Divider variant=\"fullWidth\" orientation=\"horizontal\" />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={4}>\n        <Grid container spacing={4} item xs={12}>\n          {resultData.map((result) => {\n            return <Result data={result} filter={filter} key={result.id} />;\n          })}\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\n//Components\nimport { MainContext } from \"../../views/Main/MainContext.jsx\";\nimport { Search } from \"./Search\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const SearchDialog = (props) => {\n  const descriptionElementRef = useRef(null);\n\n  useEffect(() => {\n    if (props.open) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [props.open]);\n\n  const { selection_atomic } = useContext(MainContext);\n  const [selectionAtomic, setSelectionAtomic] = selection_atomic;\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        TransitionComponent={Transition}\n        fullWidth\n        maxWidth=\"lg\"\n        onClose={props.handleSearchDialogClose}\n        scroll=\"paper\"\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\">Materialsuche</DialogTitle>\n        <DialogContent dividers>\n          {selectionAtomic == 1 ? (\n            <div>\n              <Search />\n            </div>\n          ) : (\n            <div>\n              <Grid container item xs={12} justify=\"center\">\n                <Typography>\n                  Diese Komponente ist nicht atomar. Ihr können nur Komponenten\n                  jedoch keine Rohstoffe zugeordnet werden.\n                </Typography>\n              </Grid>\n            </div>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Grid contrainer item xs={12} justify=\"center\">\n            <Button\n              onClick={props.handleSearchDialogClose}\n              style={{\n                borderColor: \"#005000\",\n                color: \"#005000\",\n                textTransform: \"none\",\n                margin: 20,\n                height: 30,\n                width: 120,\n              }}\n            >\n              Abbrechen\n            </Button>\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nimport React from \"react\";\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n};\n\nexport const TriangleSpacer = (props) => {\n  const variant = props.variant || \"bottom\";\n  const color = props.backgroundColor || \"white\";\n  const height = props.height || 64;\n  const width = props.width || Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n\n  const size = useWindowSize();\n\n  useEffect(() => {\n    console.log(document.documentElement.clientWidth);\n  }, [document.documentElement.clientWidth]);\n\n  return (\n    <div>\n      {variant == \"bottomLeft\" ? (\n        <div\n          style={{\n            width: 0,\n            height: 0,\n            borderStyle: \"solid\",\n            borderWidth: `${size.height / 16}px ${size.width}px 0 0`,\n            borderColor: `${color} transparent transparent transparent`,\n          }}\n        />\n      ) : variant == \"topRight\" ? (\n        <div\n          style={{\n            width: 0,\n            height: 0,\n            borderStyle: \"solid\",\n            borderWidth: `0 0 ${size.height / 16}px ${size.width}px`,\n            borderColor: `transparent transparent ${color} transparent`,\n          }}\n        />\n      ) : variant == \"bottomRight\" ? (\n        <div\n          style={{\n            width: 0,\n            height: 0,\n            borderStyle: \"solid\",\n            borderWidth: `0 ${size.width}px ${size.height / 16}px 0`,\n            borderColor: `transparent ${color} transparent transparent`,\n          }}\n        />\n      ) : variant == \"topLeft\" ? (\n        <div\n          style={{\n            width: 0,\n            height: 0,\n            borderStyle: \"solid\",\n            borderWidth: `${size.height / 16}px 0 0 ${size.width}px`,\n            borderColor: `transparent transparent transparent ${color}`,\n          }}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n","import { Button, Container, Grid, List, ListItem, Typography, makeStyles } from \"@material-ui/core\";\nimport React, { Component, useRef } from \"react\";\n\nimport { Ansprechpartner } from \"../../components/Ansprechpartner/Ansprechpartner\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport PartnerLogos from \"../../components/PartnerLogos/PartnerLogos\";\nimport { SearchDialog } from \"../../components/Search/SearchDialog\";\nimport { TriangleSpacer } from \"../../components/Spacers/TriangleSpacer\";\nimport colors from \"../../variables/colors\";\nimport solution from \"../../assets/img/solution.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  paragraph: {\n    padding: theme.spacing(16),\n    color: colors.black,\n  },\n}));\n\nconst Heading = (props) => {\n  return (\n    <>\n      <Typography variant={props.variant} align=\"center\">\n        {props.children}\n      </Typography>\n      <hr width=\"25%\"></hr>\n    </>\n  );\n};\n\nconst Paragraph = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      style={{\n        backgroundColor: `${props.backgroundColor}`,\n      }}\n      className={classes.paragraph}\n    >\n      <Grid\n        item\n        xs={12}\n        // className={classes.paragraph}\n        style={{\n          margin: -2,\n        }}\n      >\n        <Container maxWidth=\"md\" style={{ color: `${props.color || colors.black}` }}>\n          <Typography variant=\"h4\" align=\"center\">\n            {props.heading}\n          </Typography>\n          <hr width=\"25%\"></hr>\n        </Container>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        // className={classes.paragraph}\n        style={{\n          margin: -2,\n        }}\n      >\n        <Container maxWidth=\"md\" style={{ color: `${props.color || colors.black}` }}>\n          <Typography variant=\"h6\" align={props.alignText || \"justify\"}>\n            {props.text}\n          </Typography>\n        </Container>\n      </Grid>\n      <Grid\n        container\n        justify=\"center\"\n        // className={classes.paragraph}\n        style={{\n          margin: -2,\n        }}\n      >\n        <Grid item>\n          <Container maxWidth=\"lg\" style={{ color: `${props.color || \"black\"}` }}>\n            {props.children}\n          </Container>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport const Home = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <NavBar></NavBar>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item xs={12} className={classes.paragraph}>\n            <Container maxWidth=\"lg\">\n              <Typography variant=\"h2\" align=\"center\">\n                Über das Projekt DiMOP\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\">\n                Digitale multikriterielle Materialauswahl zur optimierten Kreislauffähigkeit von Kunststoffprodukten\n              </Typography>\n            </Container>\n          </Grid>\n          <Grid item xs={12}>\n            <PartnerLogos />\n          </Grid>\n\n          <TriangleSpacer variant=\"topLeft\" backgroundColor={colors.lightGrey} />\n          <Paragraph\n            heading=\"Hintergrund\"\n            text=\"Um die Ziele der EU-Plastikstrategie zu erreichen,\n                            und eine Kreislaufwirtschaft für Kunststoffe zu\n                            etablieren, muss insbesondere die Recycling- bzw.\n                            Kreislauffähigkeit von Kunststoffprodukten\n                            signifikant verbessert werden. Bisher spielt das\n                            Thema „Kreislauffähigkeit“ beim Produktdesign jedoch\n                            kaum eine Rolle. Produktentwickler treffen am Beginn\n                            des Lebenszyklus wichtige Entscheidungen für den\n                            weiteren Weg eines Produkts. Recycler sollen das\n                            „Ergebnis“ dann am Ende des Lebenszyklus verwerten.\n                            Allerdings leben beide in völlig getrennten Welten,\n                            es gibt keinen Austausch. In der Folge werden\n                            oftmals Kunststoffmaterialien ausgewählt, die beim\n                            Recycling zu erheblichen Problemen führen.\"\n            backgroundColor={colors.lightGrey}\n          />\n          <TriangleSpacer variant=\"bottomLeft\" backgroundColor={colors.lightGrey} />\n          <Paragraph\n            heading=\"Aufgabenstellung\"\n            text=\"Um hier Abhilfe zu schaffen, sollen durch das\n                        Projekt „Digitale multikriterielle Materialauswahl\n                        zur optimierten Kreislauffähigkeit von\n                        Kunststoffprodukten – DIMOP“ wichtige Informationen\n                        zur Kreislauffähigkeit verschiedener\n                        Kunststoffmaterialien und Materialkombinationen beim\n                        Produktdesign zur Verfügung gestellt werden. Dadurch\n                        können verschiedene Kriterien, z. B. Funktionalität,\n                        Ressourceneffizienz und Kreislauffähigkeit,\n                        gegeneinander abgewogen werden und eine ganzheitlich\n                        optimierte Materialauswahl getroffen werden. Am Ende\n                        des Lebenszyklus ist es möglich, die Produkte besser\n                        zu recyceln und die Wertstoffe dem Kreislauf erneut\n                        zuzuführen.\"\n          />\n          <TriangleSpacer variant=\"topRight\" backgroundColor={colors.lightGrey} />\n          <Paragraph\n            heading=\"Lösungsansatz\"\n            text=\"Im Forschungsvorhaben werden für relevante und\n                        materialbedingte Problemfelder des Recyclings\n                        alternative Ansätze für die Materialauswahl erfasst,\n                        systematisiert und verallgemeinert. Darauf aufbauend\n                        soll eine Methode zur multikriteriell optimierten\n                        Materialauswahl entwickelt werden. Dabei gilt es,\n                        Zielkonflikte zu identifizieren und Hilfestellungen\n                        zu deren Vermeidung zu geben.\"\n            backgroundColor={colors.lightGrey}\n          />\n          <TriangleSpacer variant=\"bottomRight\" backgroundColor={colors.lightGrey} />\n          <Grid item>\n            <img src={solution} alt=\"solution\" style={{ height: 220, padding: 5 }}></img>\n            <Grid item xs={12} className={classes.paragraph}>\n              <Typography variant=\"body1\" align=\"justify\">\n                <i>Abbildung: Konzeptuelle Darstellung des Lösungsansatzes von DIMOP</i>\n              </Typography>\n            </Grid>\n          </Grid>\n          <TriangleSpacer variant=\"topLeft\" backgroundColor={colors.lightGrey} />\n          <Paragraph\n            heading=\"Ergebnisverwertung und Umsetzung\"\n            text=\"Auf dieser Basis wird ein Software-Tool zur\n                        praxistauglichen Umsetzung des erarbeiteten Modells\n                        entwickelt. Durch Schaffung von Schnittstellen zu\n                        Unternehmenssoftware soll die Integration in\n                        betriebliche Prozesse unterstützt werden. Der\n                        Projektfortschritt wird kontinuierlich unter\n                        Einbeziehung der beteiligten Unternehmen validiert.\n                        Die Überprüfung der Praxistauglichkeit der\n                        Forschungsergebnisse erfolgt durch die Entwicklung\n                        einer Pilotanwendung. Als Ergebnis des\n                        DIMOP-Projekts sollen allen Unternehmen der\n                        bayerischen Kunststoffindustrie digitale Werkzeuge\n                        zur Verfügung stehen, die eine Entscheidungshilfe\n                        bei der Materialauswahl für Kunststoffprodukte\n                        liefern, um somit deren Kreislauffähigkeit zu\n                        steigern.\"\n            backgroundColor={colors.lightGrey}\n          />\n          <TriangleSpacer variant=\"bottomLeft\" backgroundColor={colors.lightGrey} />\n          <Paragraph\n            heading=\"Beitrag zur Ressourceneffizienz\"\n            text=\"Die Ergebnisse führen durch eine verbesserte\n                        Kreislauffähigkeit von Kunststoffen zu einer\n                        Steigerung der Ressourceneffizienz und\n                        Wettbewerbsfähigkeit dieses Werkstoffs in Bayern. So\n                        können „grüne“ Produkte steigenden\n                        Marktanforderungen gerecht werden. Ferner werden\n                        Qualität und Verfügbarkeit von Sekundärrohstoffen\n                        erhöht. Darüber hinaus ergibt sich eine Verbesserung\n                        der Materialeffizienz durch das vereinfachte\n                        Recycling von Produktionsabfällen.\"\n          />\n          <TriangleSpacer variant=\"topRight\" backgroundColor={colors.lightGrey} />\n          <Paragraph heading=\"Veröffentlichungen und weiterführende Links\" text=\"\" backgroundColor={colors.lightGrey}>\n            <List>\n              <ListItem>\n                <Typography variant=\"body1\" align=\"justify\">\n                  <a\n                    href=\"https://www.stmuv.bayern.de/themen/ressourcenschutz/forcycle/forcycle2/teilprojekt_6.htm\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Projektseite (Bayerisches Staatsministerium für Umwelt und Verbraucherschutz)\n                  </a>\n                </Typography>\n              </ListItem>\n              <ListItem>\n                <Typography variant=\"body1\" align=\"justify\">\n                  <a\n                    href=\"https://www.recyclingmagazin.de/2019/09/11/mehr-kunststoffe-recyclingfaehig-machen/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Mehr Kunststoffe recyclingfähig machen (RECYCLING magazin)\n                  </a>\n                </Typography>\n              </ListItem>\n              <ListItem>\n                <Typography variant=\"body1\" align=\"justify\">\n                  <a\n                    href=\"https://www.kunststoffweb.de/branchen-news/skz_projekt_fuer_recyclinggerechtes_produktdesign_t243364\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    SKZ: Projekt für recyclinggerechtes Produktdesign (Kunststoff Web)\n                  </a>\n                </Typography>\n              </ListItem>\n            </List>\n          </Paragraph>\n          <TriangleSpacer variant=\"bottomRight\" backgroundColor={colors.lightGrey} />\n          <Paragraph heading=\"Ansprechpartner\">\n            <Ansprechpartner />\n          </Paragraph>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n","import Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { authenticationService } from \"../../services/authenticationService\";\nimport colors from \"../../variables/colors\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const Login = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [orga, setOrga] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showErrorText, setShowErrorText] = useState(false);\n\n  const validateLogin = () => {\n    const dummyLogins = [\n      {\n        orga: \"Uni\",\n        password: \"1234\",\n      },\n      {\n        orga: \"SKZ\",\n        password: \"1234\",\n      },\n    ];\n\n    authenticationService.login(orga, password).then(\n      (user) => {\n        //login valid\n        history.push(\"/\");\n      },\n      (error) => {\n        //login invalid\n        // TODO: show that input is wrong / change color to red\n        console.log(\"ERROR\");\n      }\n    );\n\n    //! check orga and password\n    // if (validation successful) {\n\n    // console.log(orga, password);\n    // if (\n    //   dummyLogins.filter((e) => {\n    //     return orga.toLowerCase() == e.orga.toLowerCase() && password == e.password;\n    //   }).length > 0\n    // ) {\n    //   localStorage.setItem(\"auth\", true);\n    //   localStorage.setItem(\"orga\", orga);\n    //   login(orga);\n    //   history.push(\"/home\");\n    // } else {\n    //   setShowErrorText(true);\n    // }\n\n    // } else {\n    //  handle wrong login\n    // }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n          Bitte melden Sie sich mit Ihrem Organisationskonto an\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            error={showErrorText}\n            helperText={\n              showErrorText ? \"Bitte überprüfen Sie ihre Eingabe\" : \"\"\n            }\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Organisation\"\n            name=\"orga\"\n            // autoComplete=\"email\"\n            autoFocus\n            onChange={(e) => setOrga(e.target.value)}\n            value={orga}\n          />\n          <TextField\n            error={showErrorText}\n            helperText={\n              showErrorText ? \"Bitte überprüfen Sie ihre Eingabe\" : \"\"\n            }\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Passwort\"\n            type=\"password\"\n            id=\"password\"\n            // autoComplete=\"current-password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n\n          <Button\n            // type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            className={classes.submit}\n            onClick={() => validateLogin()}\n            style={{\n              backgroundColor: colors.primaryGreen,\n              color: colors.lightGrey,\n            }}\n          >\n            Anmelden\n          </Button>\n        </form>\n      </div>\n      <p>testaccounts</p>\n      <table>\n        <tr>\n          <td>uni</td>\n          <td>1234</td>\n        </tr>\n        <tr>\n          <td>skz</td>\n          <td>1234</td>\n        </tr>\n      </table>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport {\n  withStyles,\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  buttons2: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  stepdiv: {\n    height: 150,\n    width: 400,\n  },\n}));\n\nconst muiTheme = createMuiTheme({\n  overrides: {\n    MuiStepIcon: {\n      root: {\n        color: \"lightgrey\",\n        \"&$active\": {\n          color: \"grey\",\n        },\n        \"&$completed\": {\n          color: \"#005000\",\n        },\n      },\n    },\n  },\n});\n\nconst GreenRadio = withStyles({\n  root: {\n    color: \"#005000\",\n    \"&$checked\": {\n      color: \"#005000\",\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst EvaluationDialog = () => {\n  const classes = useStyles();\n\n  const [isDangerous, setIsDangerous] = useState(0);\n  const [hasTakebackSystem, setHasTakebackSystem] = useState(0);\n\n  const handleChangeDangerous = (event) => {\n    setIsDangerous(event.target.value);\n  };\n\n  const handleChangeTakebackSystem = (event) => {\n    setHasTakebackSystem(event.target.value);\n  };\n\n  function getSteps() {\n    return [\"\", \"\", \"\"];\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <div className={classes.stepdiv}>\n            <Grid container item xs={12}>\n              Bitte beantworten Sie die nachfolgenden Fragen zu Ihrem geplanten\n              Produkt.{\" \"}\n            </Grid>\n          </div>\n        );\n      case 1:\n        return (\n          <div className={classes.stepdiv}>\n            <Grid container item xs={12}>\n              Enthält Ihr Produkt umwelt- oder gesundheitsgefährdende Stoffe?\n            </Grid>\n            <Grid container item xs={12}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\"></FormLabel>\n                <RadioGroup\n                  aria-label=\"is-dangerous\"\n                  value={isDangerous}\n                  onChange={handleChangeDangerous}\n                >\n                  <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio />}\n                    label=\"Ja\"\n                  />\n                  <FormControlLabel\n                    value=\"0\"\n                    control={<GreenRadio />}\n                    label=\"Nein\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </div>\n        );\n      case 2:\n        return (\n          <div className={classes.stepdiv}>\n            <Grid container item xs={12}>\n              Ist ein Rücknahmesystem für Ihre verwendeten Kunststoffe\n              vorhanden?\n            </Grid>\n            <Grid container item xs={12}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\"></FormLabel>\n                <RadioGroup\n                  aria-label=\"is-dangerous\"\n                  value={hasTakebackSystem}\n                  onChange={handleChangeTakebackSystem}\n                >\n                  <FormControlLabel\n                    value=\"1\"\n                    control={<GreenRadio />}\n                    label=\"Ja\"\n                  />\n                  <FormControlLabel\n                    value=\"0\"\n                    control={<GreenRadio />}\n                    label=\"Nein\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </div>\n        );\n      default:\n        return (\n          <div className={classes.stepdiv}>\n            <Grid container item xs={12}></Grid>\n          </div>\n        );\n    }\n  }\n\n  const { evaluation_open } = useContext(MainContext);\n  const [evaluationOpen, setEvaluationOpen] = evaluation_open;\n\n  const handleClickOpen = () => {\n    setEvaluationOpen(true);\n  };\n\n  const handleClose = () => {\n    setEvaluationOpen(false);\n  };\n\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(1);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickOpen}>\n        <PlayCircleOutlineIcon\n          style={{ marginRight: 5 }}\n        ></PlayCircleOutlineIcon>\n        Bewerten\n      </Button>\n      <Dialog\n        open={evaluationOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">Stückliste bewerten</DialogTitle>\n\n        <DialogContent>\n          <MuiThemeProvider theme={muiTheme}>\n            <div>\n              <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                  const stepProps = {};\n                  const labelProps = {};\n\n                  return (\n                    <Step key={label} {...stepProps}>\n                      <StepLabel {...labelProps}>{label}</StepLabel>\n                    </Step>\n                  );\n                })}\n              </Stepper>\n              <div>\n                {activeStep === steps.length ? (\n                  <div>\n                    <Typography className={classes.instructions}>\n                      Vielen Dank für Ihre Eingaben. Sie können den Dialog jetzt\n                      schließen.\n                    </Typography>\n\n                    <Grid container item xs={12} justify=\"center\">\n                      <Button\n                        onClick={handleReset}\n                        className={classes.buttons2}\n                      >\n                        Eingaben ändern\n                      </Button>\n                      <Button\n                        onClick={() => {\n                          handleReset();\n                          handleClose();\n                        }}\n                        className={classes.buttons2}\n                      >\n                        Abschließen\n                      </Button>\n                    </Grid>\n                  </div>\n                ) : (\n                  <div>\n                    <Typography className={classes.instructions}>\n                      {getStepContent(activeStep)}\n                    </Typography>\n                    <div>\n                      <Grid container item xs={12} justify=\"center\">\n                        <Button\n                          disabled={activeStep === 0}\n                          onClick={handleBack}\n                          className={classes.buttons2}\n                        >\n                          Zurück\n                        </Button>\n                        <Button\n                          onClick={handleNext}\n                          className={classes.buttons2}\n                        >\n                          Weiter\n                        </Button>\n                      </Grid>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </MuiThemeProvider>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default EvaluationDialog;\n","import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\n\n// Component\nimport { MainContext } from \"./MainContext.jsx\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport CreateIcon from \"@material-ui/icons/Create\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst AddBomDialog = () => {\n  const classes = useStyles();\n\n  const {\n    add_bom_open,\n    orga_id,\n    selected_construction_id,\n    new_bom_created,\n  } = useContext(MainContext);\n\n  const [addBomOpen, setAddBomOpen] = add_bom_open;\n  const [orgaId, setOrgaId] = orga_id;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n\n  const handleClickBomOpen = () => {\n    setAddBomOpen(true);\n  };\n\n  const handleClickBomClose = () => {\n    setAddBomOpen(false);\n  };\n\n  const [newBom, setNewBom] = useState({\n    mat_desc: \"\",\n    mat_desc_int: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"mm\",\n    weight: \"\",\n    weight_unit: \"g\",\n    volume: \"\",\n    volume_unit: \"mm^3\",\n  });\n\n  const handleNewBomInputs = (event) => {\n    setNewBom({ ...newBom, [event.target.id]: event.target.value });\n  };\n\n  const [showErrorText1, setShowErrorText1] = useState(false);\n  const [showErrorText2, setShowErrorText2] = useState(false);\n\n  const validateBom = () => {\n    var weightIsFloat = /^\\d+\\.\\d+$/.test(newBom.weight);\n    var weightIsNumeric = /^\\d+$/.test(newBom.weight);\n    var heightIsFloat = /^\\d+\\.\\d+$/.test(newBom.height);\n    var heightIsNumeric = /^\\d+$/.test(newBom.height);\n    var widthIsFloat = /^\\d+\\.\\d+$/.test(newBom.width);\n    var widthIsNumeric = /^\\d+$/.test(newBom.width);\n    var depthIsFloat = /^\\d+\\.\\d+$/.test(newBom.depth);\n    var depthIsNumeric = /^\\d+$/.test(newBom.depth);\n    var volumeIsFloat = /^\\d+\\.\\d+$/.test(newBom.volume);\n    var volumeIsNumeric = /^\\d+$/.test(newBom.volume);\n\n    if (newBom.mat_desc == \"\" || newBom.weight == \"\") {\n      setShowErrorText1(true);\n    } else if (\n      (!weightIsFloat && !weightIsNumeric) ||\n      (newBom.height != \"\" && !heightIsFloat && !heightIsNumeric) ||\n      (newBom.width != \"\" && !widthIsFloat && !widthIsNumeric) ||\n      (newBom.depth != \"\" && !depthIsFloat && !depthIsNumeric) ||\n      (newBom.volume != \"\" && !volumeIsFloat && !volumeIsNumeric)\n    ) {\n      setShowErrorText2(true);\n    } else {\n      setShowErrorText1(false);\n      setShowErrorText2(false);\n      addBom();\n      handleClickBomClose();\n    }\n  };\n\n  const addBom = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        mat_desc: newBom.mat_desc,\n        mat_desc_int: newBom.mat_desc_int,\n        mat_id_int: newBom.mat_id_int,\n        cad_id: newBom.cad_id,\n        mara_plast_id: parseInt(newBom.mara_plast_id),\n        mat_rw: parseFloat(newBom.mat_rw),\n        height: parseFloat(newBom.height),\n        width: parseFloat(newBom.width),\n        depth: parseFloat(newBom.depth),\n        unit: newBom.unit,\n        weight: parseFloat(newBom.weight),\n        weight_unit: newBom.weight_unit,\n        volume: parseFloat(newBom.volume),\n        volume_unit: newBom.volume_unit,\n        is_atomic: 0,\n        orga_id: orgaId,\n        cons_id: selectedConstructionId,\n        del_kz: 0,\n      }),\n      redirect: \"follow\",\n    };\n\n    fetch(\"/mat\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setNewBomCreated(!newBomCreated);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickBomOpen}>\n        <CreateIcon style={{ marginRight: 5 }}></CreateIcon>\n        Erstellen\n      </Button>\n      <Dialog\n        open={addBomOpen}\n        onClose={handleClickBomClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClickBomClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">\n          Neue Stückliste erstellen\n        </DialogTitle>\n        <DialogContent>\n          <Grid container item xs={12} justify=\"center\">\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <TextField\n                error={showErrorText1}\n                helperText={\n                  showErrorText1 ? \"Bitte füllen Sie dieses Feld aus.\" : \"\"\n                }\n                required\n                id=\"mat_desc\"\n                label=\"Mat.Bez.\"\n                value={newBom.mat_desc}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"mat_desc_int\"\n                label=\"ERP Mat.Bez.\"\n                value={newBom.mat_desc_int}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"mat_id_int\"\n                label=\"ERP Mat.Nr.\"\n                value={newBom.mat_id_int}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"cad_id\"\n                label=\"CAD Nr.\"\n                value={newBom.cad_id}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"height\"\n                label=\"Höhe\"\n                value={newBom.height}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"width\"\n                label=\"Breite\"\n                value={newBom.width}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"depth\"\n                label=\"Tiefe\"\n                value={newBom.depth}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"unit\"\n                label=\"Einheit\"\n                value={newBom.unit}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                disabled\n              />\n\n              <TextField\n                id=\"weight\"\n                label=\"Gewicht\"\n                value={newBom.weight}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                error={showErrorText1}\n                helperText={\n                  showErrorText1\n                    ? \"Bitte füllen Sie dieses Feld mit numerischen Werten oder Gleitkommazahlen aus.\"\n                    : \"\"\n                }\n                required\n              />\n\n              <TextField\n                id=\"weight_unit\"\n                label=\"G. Einheit\"\n                value={newBom.weight_unit}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                disabled\n              />\n\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"volume\"\n                label=\"Volumen\"\n                value={newBom.volume}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"volume_unit\"\n                label=\"V. Einheit\"\n                value={newBom.volume_unit}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                disabled\n              />\n            </form>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\">\n            <Grid item xs={4}></Grid>\n            <Grid item xs={2}>\n              {\" \"}\n              <Button className={classes.buttons} onClick={handleClickBomClose}>\n                Abbrechen\n              </Button>\n            </Grid>\n            <Grid item xs={2}>\n              <Button className={classes.buttons} onClick={validateBom}>\n                Erstellen\n              </Button>\n            </Grid>\n            <Grid item xs={4}></Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default AddBomDialog;\n","import React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography } from \"@material-ui/core\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\n//Devexpress\nimport {\n  SelectionState,\n  FilteringState,\n  IntegratedFiltering,\n  IntegratedSorting,\n  SortingState,\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid as GridDevExpress,\n  Table,\n  TableSelection,\n  TableColumnVisibility,\n  ColumnChooser,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 10,\n    height: 30,\n    width: 140,\n  },\n}));\n\nconst MatFertTable = () => {\n  const classes = useStyles();\n\n  const {\n    selected_material,\n    new_material,\n    add_component_open,\n    orga_id,\n    bom_updated,\n    parent_material,\n    child_updated,\n    add_component_mode,\n    active_step,\n  } = useContext(MainContext);\n\n  const [activeStep, setActiveStep] = active_step;\n  const [selectedMaterial, setSelectedMaterial] = selected_material;\n  const [addComponentOpen, setAddComponentOpen] = add_component_open;\n  const [orgaId, setOrgaId] = orga_id;\n  const [childUpdated, setChildUpdated] = child_updated;\n  const [loading, setLoading] = useState(true);\n  const [materialData, setMaterialData] = useState([]);\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [materialValid, setMaterialValid] = useState(true);\n  const [addComponentMode, setAddComponentMode] = add_component_mode;\n\n  useEffect(() => {\n    fetch(\"/mat?orga_id=\" + orgaId)\n      .then((res) => {\n        return res.json();\n      })\n      .then((d) => {\n        console.log(d);\n        setMaterialData(d.filter((d) => d.id !== parentMaterial));\n        console.log(materialData);\n        setChildUpdated(false);\n      });\n  }, []);\n\n  const [materialColumns] = useState([\n    { name: \"id\", title: \"Mat.Nr.\" },\n    { name: \"mat_desc\", title: \"Mat.Bez.\" },\n    { name: \"mat_id_int\", title: \"ERP Mat.Nr.\" },\n    { name: \"mat_desc_int\", title: \"ERP Bez.\" },\n    { name: \"cad_id\", title: \"CAD Nr.\" },\n    { name: \"mara_plast_id\", title: \"Kunststoff\" },\n    { name: \"mat_rw\", title: \"Recycl.\" },\n    { name: \"height\", title: \"Höhe\" },\n    { name: \"width\", title: \"Breite\" },\n    { name: \"depth\", title: \"Tiefe\" },\n    { name: \"unit\", title: \"Einheit\" },\n    { name: \"weight\", title: \"Gewicht\" },\n    { name: \"weight_unit\", title: \"G. Einheit\" },\n    { name: \"volume\", title: \"Volumen\" },\n    { name: \"volume_unit\", title: \"Vol. Einheit\" },\n    { name: \"is_atomic\", title: \"Atomar?\" },\n  ]);\n\n  const [defaultHiddenColumnNames] = useState([\n    \"mat_id_int\",\n    \"mat_desc_int\",\n    \"cad_id\",\n    \"mara_plast_id\",\n    \"mat_rw\",\n    \"height\",\n    \"width\",\n    \"depth\",\n    \"unit\",\n    \"weight\",\n    \"weight_unit\",\n    \"volume\",\n    \"volume_unit\",\n    \"is_atomic\",\n  ]);\n\n  const [tableColumnExtensions] = useState([{ columnName: \"id\", width: 100 }]);\n\n  const [selection, setSelection] = useState([]);\n\n  const onClickSelect = () => {\n    if (selection.length == 1) {\n      setSelectedMaterial(materialData[selection].id);\n      setAddComponentMode(\"existing\");\n      setActiveStep(2);\n    } else {\n      setMaterialValid(false);\n    }\n  };\n\n  return (\n    <div>\n      <GridDevExpress rows={materialData} columns={materialColumns}>\n        <SelectionState\n          selection={selection}\n          onSelectionChange={setSelection}\n        />\n        <SortingState />\n        <FilteringState defaultFilters={[]} />\n        <IntegratedFiltering />\n        <IntegratedSorting />\n        <Table columnExtensions={tableColumnExtensions} />\n        <TableSelection />\n        <TableColumnVisibility\n          defaultHiddenColumnNames={defaultHiddenColumnNames}\n        />\n        <Toolbar />\n        <ColumnChooser />\n        <TableFilterRow />\n        <TableHeaderRow showSortingControls />\n      </GridDevExpress>\n      <Grid container item xs={12} justify=\"center\">\n        <Grid item xs={2}></Grid>\n        <Grid item xs={8}>\n          <Button className={classes.buttons} onClick={onClickSelect}>\n            Material auswählen\n          </Button>\n          {materialValid ? (\n            <div />\n          ) : (\n            <div style={{ color: \"red\" }}>\n              <WarningIcon\n                style={{\n                  fontSize: \"small\",\n                  marginRight: 10,\n                }}\n              ></WarningIcon>{\" \"}\n              Bitte ein Material wählen\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={2}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MatFertTable;\n","import React, { useContext, useState } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120,\n  },\n}));\n\nconst MaterialFertNew = (saveItem) => {\n  const classes = useStyles();\n\n  const {\n    add_component_open,\n    selected_construction_id,\n    new_bom_created,\n    orga_id,\n    add_component_mode,\n    active_step,\n    material_created,\n  } = useContext(MainContext);\n\n  const [materialCreated, setMaterialCreated] = material_created;\n  const [activeStep, setActiveStep] = active_step;\n  const [addComponentOpen, setAddComponentOpen] = add_component_open;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [orgaId, setOrgaId] = orga_id;\n  const [addComponentMode, setAddComponentMode] = add_component_mode;\n\n  const [newMaterial, setNewMaterial] = useState({\n    mat_desc: \"\",\n    mat_desc_int: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"mm\",\n    weight: \"\",\n    weight_unit: \"g\",\n    volume: \"\",\n    volume_unit: \"mm^3\",\n  });\n\n  const [isAtomic, setIsAtomic] = useState(\"1\");\n\n  const handleNewMaterialInputs = (event) => {\n    setNewMaterial({ ...newMaterial, [event.target.id]: event.target.value });\n  };\n\n  const handleRadioChange = (event) => {\n    setIsAtomic(event.target.value);\n  };\n\n  const [showErrorText1, setShowErrorText1] = useState(false);\n  const [showErrorText2, setShowErrorText2] = useState(false);\n\n  const validateNewMat = () => {\n    var weightIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.weight);\n    var weightIsNumeric = /^\\d+$/.test(newMaterial.weight);\n    var heightIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.height);\n    var heightIsNumeric = /^\\d+$/.test(newMaterial.height);\n    var widthIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.width);\n    var widthIsNumeric = /^\\d+$/.test(newMaterial.width);\n    var depthIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.depth);\n    var depthIsNumeric = /^\\d+$/.test(newMaterial.depth);\n    var volumeIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.volume);\n    var volumeIsNumeric = /^\\d+$/.test(newMaterial.volume);\n\n    if (newMaterial.mat_desc == \"\" || newMaterial.weight == \"\") {\n      setShowErrorText1(true);\n    } else if (\n      (!weightIsFloat && !weightIsNumeric) ||\n      (newMaterial.height != \"\" && !heightIsFloat && !heightIsNumeric) ||\n      (newMaterial.width != \"\" && !widthIsFloat && !widthIsNumeric) ||\n      (newMaterial.depth != \"\" && !depthIsFloat && !depthIsNumeric) ||\n      (newMaterial.volume != \"\" && !volumeIsFloat && !volumeIsNumeric)\n    ) {\n      setShowErrorText2(true);\n    } else {\n      setShowErrorText1(false);\n      setShowErrorText2(false);\n      addMaterial();\n      setMaterialCreated(!materialCreated);\n      setAddComponentMode(\"new\");\n      setActiveStep(2);\n    }\n  };\n\n  const addMaterial = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        mat_desc: newMaterial.mat_desc,\n        mat_desc_int: newMaterial.mat_desc_int,\n        mat_id_int: newMaterial.mat_id_int,\n        cad_id: newMaterial.cad_id,\n        mara_plast_id: parseInt(newMaterial.mara_plast_id),\n        mat_rw: parseFloat(newMaterial.mat_rw),\n        height: parseFloat(newMaterial.height),\n        width: parseFloat(newMaterial.width),\n        depth: parseFloat(newMaterial.depth),\n        unit: newMaterial.unit,\n        weight: parseFloat(newMaterial.weight),\n        weight_unit: newMaterial.weight_unit,\n        volume: parseFloat(newMaterial.volume),\n        volume_unit: newMaterial.volume_unit,\n        is_atomic: parseInt(isAtomic),\n        orga_id: orgaId,\n        cons_id: selectedConstructionId,\n        del_kz: 0,\n      }),\n      redirect: \"follow\",\n    };\n\n    fetch(\"/mat\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setNewBomCreated(!newBomCreated);\n  };\n\n  return (\n    <div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          error={showErrorText1}\n          helperText={showErrorText1 ? \"Bitte füllen Sie dieses Feld aus.\" : \"\"}\n          required\n          id=\"mat_desc\"\n          label=\"Mat.Bez.\"\n          value={newMaterial.mat_desc}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"mat_desc_int\"\n          label=\"ERP Mat.Bez.\"\n          value={newMaterial.mat_desc_int}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"mat_id_int\"\n          label=\"ERP Mat.Nr.\"\n          value={newMaterial.mat_id_int}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"cad_id\"\n          label=\"CAD Nr.\"\n          value={newMaterial.cad_id}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"height\"\n          label=\"Höhe\"\n          value={newMaterial.height}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"width\"\n          label=\"Breite\"\n          value={newMaterial.width}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"depth\"\n          label=\"Tiefe\"\n          value={newMaterial.depth}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n\n        <TextField\n          id=\"unit\"\n          label=\"Einheit\"\n          value={newMaterial.unit}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          disabled\n        />\n\n        <TextField\n          id=\"weight\"\n          label=\"Gewicht\"\n          value={newMaterial.weight}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          error={showErrorText1}\n          helperText={\n            showErrorText1\n              ? \"Bitte füllen Sie dieses Feld mit numerischen Werten oder Gleitkommazahlen aus.\"\n              : \"\"\n          }\n          required\n        />\n\n        <TextField\n          id=\"weight_unit\"\n          label=\"G. Einheit\"\n          value={newMaterial.weight_unit}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          disabled\n        />\n\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"volume\"\n          label=\"Volumen\"\n          value={newMaterial.volume}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n\n        <TextField\n          id=\"volume_unit\"\n          label=\"V. Einheit\"\n          value={newMaterial.volume_unit}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          disabled\n        />\n\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">\n            {\" \"}\n            Anlage als Stückliste?\n            <Tooltip\n              title={\n                <Typography variant=\"body1\">\n                  Wird ein Material als Stückliste angelegt, können dem Material\n                  Komponenten hinzugefügt werden, dafür kann kein Rohstoff bzw.\n                  Kunststoff zugeordnet werden.\n                </Typography>\n              }\n            >\n              <HelpIcon style={{ marginLeft: 10 }} fontSize=\"small\"></HelpIcon>\n            </Tooltip>\n          </FormLabel>\n          <RadioGroup\n            aria-label=\"atomic\"\n            value={isAtomic}\n            onChange={handleRadioChange}\n          >\n            <FormControlLabel value=\"0\" control={<Radio />} label=\"Ja\" />\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"Nein\" />\n          </RadioGroup>\n        </FormControl>\n      </form>\n\n      <Grid container item xs={12} justify=\"center\">\n        <Grid item xs={4}></Grid>\n        <Grid item xs={4}>\n          <Button\n            className={classes.buttons}\n            onClick={() => {\n              validateNewMat();\n            }}\n          >\n            Material anlegen\n          </Button>\n          {materialCreated ? <div>Neues Material angelegt!</div> : <div />}\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MaterialFertNew;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//Components\nimport MaterialFertTable from \"./MaterialFertTable.jsx\";\nimport MaterialFertNew from \"./MaterialFertNew.jsx\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    height: 60,\n    backgroundColor: \"#005000\",\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          centered\n        >\n          <Tab label=\"Bestehendes Material\" {...a11yProps(0)} />\n          <Tab label=\"Neues Material\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <MaterialFertTable></MaterialFertTable>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <MaterialFertNew></MaterialFertNew>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\nimport Tabs from \"./AddComponentTabs.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport {\n  makeStyles,\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 220,\n  },\n  buttons2: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  formControl: {\n    minWidth: 200,\n    marginBottom: 50,\n  },\n  root_card: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    marginBottom: 20,\n    height: 100,\n    width: 200,\n  },\n}));\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    action: {\n      disabled: \"white\",\n    },\n  },\n  overrides: {\n    MuiStepIcon: {\n      root: {\n        color: \"lightgrey\",\n        \"&$active\": {\n          color: \"grey\",\n        },\n        \"&$completed\": {\n          color: \"#005000\",\n        },\n      },\n    },\n  },\n});\n\nconst AddMaterialDialog = () => {\n  const classes = useStyles();\n  const {\n    add_component_open,\n    selected_material,\n    parent_material,\n    data_backend,\n    highest_level_id,\n    add_component_mode,\n    bom_updated,\n    active_step,\n    selection_atomic,\n    material_created,\n  } = useContext(MainContext);\n\n  const [materialCreated, setMaterialCreated] = material_created;\n  const [activeStep, setActiveStep] = active_step;\n  const [addComponentOpen, setAddComponentOpen] = add_component_open;\n  const [dataBackend, setDataBackend] = data_backend;\n  const [selectedMaterial, setSelectedMaterial] = selected_material;\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [highestLevelId, setHighestLevelId] = highest_level_id;\n  const [relations, setRelations] = useState({});\n  const [addComponentMode, setAddComponentMode] = add_component_mode;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n\n  const [selectionAtomic, setSelectionAtomic] = selection_atomic;\n\n  const handleClickOpen = () => {\n    setAddComponentOpen(true);\n  };\n\n  const handleClose = () => {\n    setAddComponentOpen(false);\n  };\n\n  const handleDropdownChange = (event, id) => {\n    console.log(id);\n    console.log(event.target.value);\n    setRelations({ ...relations, [id]: event.target.value });\n  };\n\n  //To filter backend for unique mat_id\n  var setObj = new Set();\n\n  const [relationError, setRelationError] = useState(false);\n\n  useEffect(() => {\n    if (addComponentMode === \"new\") {\n      fetch(\"/mat/newest\")\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          console.log(d);\n          setSelectedMaterial(d);\n        });\n    } else {\n    }\n  }, [materialCreated]);\n\n  const addComponentAndRelations = () => {\n    if ((addComponentMode === \"new\") | (addComponentMode === \"existing\")) {\n      const siblings = [];\n\n      dataBackend\n        .filter((dataBackend) => dataBackend.parent_id == highestLevelId)\n        .map((dataBackend) => siblings.push(dataBackend.mat_id));\n\n      const siblings_unique = [...new Set(siblings)];\n\n      if (siblings_unique.length == Object.keys(relations).length) {\n        siblings_unique.map((s) => {\n          //Hier kommt rel hin\n          const requestOptionsRel = {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              p_id: parseInt(parentMaterial),\n              m1_id: parseInt(selectedMaterial),\n              m2_id: parseInt(s),\n              rel_type: parseInt(relations[s]),\n            }),\n            redirect: \"follow\",\n          };\n\n          fetch(\"/rel\", requestOptionsRel)\n            .then((response) => response.text())\n            .then((result) => console.log(result))\n            .catch((error) => console.log(\"error\", error));\n        });\n\n        const requestOptionsBom = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            mat_id: selectedMaterial,\n            parent_mat_id: parentMaterial,\n          }),\n          redirect: \"follow\",\n        };\n\n        fetch(\"/bom\", requestOptionsBom)\n          .then((response) => response.text())\n          .then((result) => console.log(result))\n          .catch((error) => console.log(\"error\", error));\n\n        setBomUpdated(true);\n        setActiveStep(steps.length);\n      } else {\n        setRelationError(true);\n      }\n    }\n    //Wenn nicht's ausgewählt wurde (kein Modus)\n  };\n\n  function getSteps() {\n    return [\"Start\", \"Material wählen\", \"Beziehungen festlegen\"];\n  }\n\n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return (\n          <div>\n            <Grid container item xs={12}>\n              Bitte wählen Sie zuerst ein Material und legen Sie anschließend\n              die Beziehungen zu seinen Geschwistern fest.\n            </Grid>\n          </div>\n        );\n      case 1:\n        return (\n          <div>\n            <Grid container item xs={12}>\n              <Tabs></Tabs>\n            </Grid>\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <Grid container item xs={12} justify=\"center\">\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Parent Material:\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {parentMaterial}\n                  </Typography>\n                </CardContent>\n              </Card>\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Ausgewähltes Material:\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {selectedMaterial}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Typography style={{ marginTop: 20, marginBottom: 20 }}>\n              Bitte legen Sie nachfolgend fest, wie das neue Material mit seinen\n              Geschwistermaterialien verbunden sein soll.\n            </Typography>\n            <Grid container item xs={12} direction=\"column\">\n              {dataBackend\n                .filter(\n                  (dataBackend) => dataBackend.parent_id == highestLevelId\n                )\n                .reduce((acc, item) => {\n                  if (!setObj.has(item.mat_id)) {\n                    setObj.add(item.mat_id, item);\n                    acc.push(item);\n                  }\n                  return acc;\n                }, [])\n\n                .map((dataBackend) => (\n                  <div>\n                    <Grid container item xs={12} direction=\"r0w\">\n                      <Grid item xs={6}>\n                        <Typography>\n                          {dataBackend.mat_id} {dataBackend.mat_desc}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <FormControl className={classes.formControl}>\n                          <InputLabel id=\"demo-simple-select-label\">\n                            Verbindungsart\n                          </InputLabel>\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id={dataBackend.mat_id}\n                            value={relations[dataBackend.mat_id]}\n                            onChange={(e) => {\n                              handleDropdownChange(e, dataBackend.mat_id);\n                            }}\n                          >\n                            <MenuItem value={1}>Direkt und löslich</MenuItem>\n                            <MenuItem value={2}>Indirekt und löslich</MenuItem>\n                            <MenuItem value={3}>\n                              Direkt und nicht löslich\n                            </MenuItem>\n                            <MenuItem value={4}>\n                              Indirekt und nicht löslich\n                            </MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n                    </Grid>\n                  </div>\n                ))}\n            </Grid>\n            <Grid container item xs={12} justify=\"center\">\n              <Button\n                className={classes.buttons}\n                onClick={() => {\n                  addComponentAndRelations();\n                }}\n              >\n                Beziehungen anlegen\n              </Button>\n            </Grid>\n            <Grid container item xs={12} justify=\"center\">\n              {relationError ? (\n                <div style={{ color: \"red\" }}>\n                  <WarningIcon\n                    style={{\n                      fontSize: \"small\",\n                      marginRight: 10,\n                    }}\n                  ></WarningIcon>{\" \"}\n                  Bitte Relationen vollständig eingeben\n                </div>\n              ) : (\n                <div />\n              )}\n            </Grid>\n          </div>\n        );\n      default:\n        return <div></div>;\n    }\n  }\n\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons2} onClick={handleClickOpen}>\n        <AddIcon style={{ marginRight: 5 }}></AddIcon>\n        Hinzufügen\n      </Button>\n      <Dialog\n        open={addComponentOpen}\n        onClose={() => {\n          handleClose();\n          handleReset();\n        }}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={() => {\n              handleClose();\n              handleReset();\n            }}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">Komponente hinzufügen</DialogTitle>\n        <DialogContent>\n          <MuiThemeProvider theme={muiTheme}>\n            {selectionAtomic == 0 ? (\n              <div>\n                <Stepper activeStep={activeStep}>\n                  {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n\n                    return (\n                      <Step key={label} {...stepProps}>\n                        <StepLabel {...labelProps}>{label}</StepLabel>\n                      </Step>\n                    );\n                  })}\n                </Stepper>\n                <div>\n                  {activeStep === steps.length ? (\n                    <div>\n                      <Typography className={classes.instructions}>\n                        Vielen Dank für Ihre Eingaben. Sie können den Dialog\n                        jetzt schließen.\n                      </Typography>\n\n                      <Grid container item xs={12} justify=\"center\">\n                        <Button\n                          onClick={() => {\n                            handleReset();\n                            handleClose();\n                          }}\n                          className={classes.buttons2}\n                        >\n                          Abschließen\n                        </Button>\n                      </Grid>\n                    </div>\n                  ) : (\n                    <div>\n                      <Typography className={classes.instructions}>\n                        {getStepContent(activeStep)}\n                      </Typography>\n                      <div>\n                        <Grid container item xs={12} justify=\"center\">\n                          <Grid item xs={3}>\n                            {\" \"}\n                            <Button\n                              disabled={activeStep === 0}\n                              onClick={handleBack}\n                              className={classes.buttons2}\n                            >\n                              Zurück\n                            </Button>\n                          </Grid>\n                          <Grid item xs={6}></Grid>\n                          <Grid item xs={3}>\n                            {\" \"}\n                            <Button\n                              onClick={handleNext}\n                              className={classes.buttons2}\n                              disabled={activeStep >= steps.length - 2}\n                            >\n                              Weiter\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <div>\n                <Grid container item xs={12} justify=\"center\">\n                  <Typography className={classes.instructions}>\n                    Diese Komponente ist atomar. Ihr können nur Rohmaterialien\n                    jedoch keine weiteren Komponenten zugeordnet werden.\n                  </Typography>\n                  <Button onClick={handleClose} className={classes.buttons2}>\n                    Ok\n                  </Button>\n                </Grid>\n              </div>\n            )}\n          </MuiThemeProvider>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default AddMaterialDialog;\n","import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\n\n// Component\nimport { MainContext } from \"./MainContext.jsx\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120,\n  },\n}));\n\nconst AddPlastToMat = () => {\n  const classes = useStyles();\n  const { add_plast_open, parent_material, bom_updated } = useContext(\n    MainContext\n  );\n  const [addPlastOpen, setAddPlastOpen] = add_plast_open;\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n\n  const handleClickPlastOpen = () => {\n    setAddPlastOpen(true);\n  };\n\n  const handleClickPlastClose = () => {\n    setAddPlastOpen(false);\n  };\n\n  const [newPlast, setNewPlast] = useState({\n    mara_plast_id: \"\",\n  });\n\n  const handleNewPlastInputs = (event) => {\n    setNewPlast({ ...newPlast, [event.target.id]: event.target.value });\n  };\n\n  const addPlast = () => {\n    console.log(newPlast);\n\n    var requestOptions = {\n      method: \"PUT\",\n      redirect: \"follow\",\n    };\n\n    fetch(\n      \"/mat/\" +\n        parentMaterial +\n        \"?mara_plast_id=\" +\n        newPlast.mara_plast_id,\n      requestOptions\n    )\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setBomUpdated(true);\n  };\n\n  return (\n    <div>\n      <Button\n        className={classes.buttons}\n        onClick={handleClickPlastOpen}\n      >\n        Neuen Kunststoff zuordnen\n      </Button>\n\n      <Dialog\n        open={addPlastOpen}\n        onClose={handleClickPlastClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClickPlastClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogContent>\n          <Grid container item xs={12}>\n            <Grid items xs={6}>\n              {\" \"}\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Parent\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {parentMaterial}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid items xs={6}>\n              {\" \"}\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Plast\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {newPlast.mara_plast_id}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n          <Grid container item xs={12}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"mara_plast_id\"\n                label=\"Plast.Id.\"\n                value={newPlast.mara_plast_id}\n                onChange={handleNewPlastInputs}\n                margin=\"normal\"\n              />\n            </form>\n          </Grid>\n          <Grid container item xs={12}>\n            <Button\n              className={classes.buttons}\n              onClick={() => {\n                addPlast();\n                handleClickPlastClose();\n              }}\n            >\n              Zuordnen\n            </Button>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default AddPlastToMat;\n","import React from \"react\";\nimport { useContext } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { Typography } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst DeleteMaterialDialog = () => {\n  const classes = useStyles();\n\n  const { delete_component_open, bom_updated, delete_material } = useContext(\n    MainContext\n  );\n\n  const [deleteComponentOpen, setDeleteComponentOpen] = delete_component_open;\n  const [deleteMaterial, setDeleteMaterial] = delete_material;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n\n  const handleClickOpen = () => {\n    setDeleteComponentOpen(true);\n  };\n\n  const handleClose = () => {\n    setDeleteMaterial([]);\n    setDeleteComponentOpen(false);\n  };\n\n  const deleteBomEntry = (compId) => {\n    var requestOptions = {\n      method: \"DELETE\",\n      redirect: \"follow\",\n    };\n    fetch(\"/bom/\" + compId, requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setBomUpdated(true);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickOpen}>\n        <DeleteIcon style={{ marginRight: 5 }}></DeleteIcon>\n        Löschen\n      </Button>\n      <Dialog\n        open={deleteComponentOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">Komponente löschen</DialogTitle>\n        <DialogContent>\n          <Typography>Wollen Sie die Komponente wirklich löschen?</Typography>\n          <Grid container item xs={12} justify=\"center\">\n            <Card className={classes.root_card} variant=\"outlined\">\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                  align=\"center\"\n                >\n                  Ausgewähltes Material:\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                  {deleteMaterial}\n                </Typography>\n              </CardContent>\n            </Card>\n            {!deleteMaterial ? (\n              <div style={{ color: \"red\", marginTop: 10, marginBottom: 10 }}>\n                <WarningIcon\n                  style={{\n                    fontSize: \"small\",\n                    marginRight: 10,\n                  }}\n                ></WarningIcon>{\" \"}\n                Sie müssen ein Unterkomponente auswählen, um diese zu Löschen.\n              </div>\n            ) : (\n              <div />\n            )}\n          </Grid>\n\n          <Grid container item xs={12}>\n            <Grid item xs={6}>\n              <Button\n                color=\"primary\"\n                className={classes.buttons}\n                variant=\"outlined\"\n                onClick={handleClose}\n              >\n                Nein\n              </Button>\n            </Grid>\n\n            <Grid item xs={6}>\n              <Button\n                color=\"primary\"\n                className={classes.buttons}\n                variant=\"outlined\"\n                onClick={() => {\n                  deleteBomEntry(deleteMaterial);\n                  handleClose();\n                }}\n              >\n                Ja\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default DeleteMaterialDialog;\n","import React from \"react\";\nimport { useContext, useState } from \"react\";\nimport * as XLSX from \"xlsx\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { Typography } from \"@material-ui/core\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {\n  Grid as GridDevExpress,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst CsvUploadDialog = () => {\n  const classes = useStyles();\n\n  const { csv_upload_open } = useContext(MainContext);\n  const [csvUploadOpen, setCsvUploadOpen] = csv_upload_open;\n  const [loaded, setLoaded] = useState(false);\n\n  const handleClickOpen = () => {\n    setCsvUploadOpen(true);\n  };\n\n  const handleClose = () => {\n    setCsvUploadOpen(false);\n  };\n\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n\n  // process CSV data\n  const processData = (dataString) => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n    );\n\n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n      );\n      if (headers && row.length == headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] == '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] == '\"') d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        // remove the blank rows\n        if (Object.values(obj).filter((x) => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n\n    // prepare columns list from headers\n    const columns = headers.map((c) => ({\n      name: c,\n      selector: c,\n    }));\n\n    setData(list);\n    setColumns(columns);\n    setLoaded(true);\n  };\n\n  // handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      processData(data);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const [exampleColumns] = useState([\n    { name: \"colName\", title: \"Spaltenbezeichnung\" },\n    { name: \"colDesc\", title: \"Spaltenbeschreibung\" },\n    { name: \"colContent\", title: \"Spalteninhalt\" },\n    { name: \"required\", title: \"Erforderlich\" },\n  ]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"colName\", width: 150 },\n    { columnName: \"colDesc\", width: 400, wordWrapEnabled: true },\n    { columnName: \"colContent\", width: 150 },\n    { columnName: \"required\", width: 100 },\n  ]);\n\n  const [requiredData, setRequiredData] = useState([\n    {\n      colName: \"id\",\n      colDesc: \"Identifikation eine Komponente innerhalb der Stückliste\",\n      colContent: \"Integer (Ganzzahl)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"parent_id\",\n      colDesc: \"Zuordnung der Parentkomponente (deren id)\",\n      colContent: \"Integer (Ganzzahl)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"mat_desc\",\n      colDesc: \"Bezeichnung des Materials\",\n      colContent: \"String (Text)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"is_atomic\",\n      colDesc:\n        \"Handelt es sich um eine Komponente der untersten Stufe? Falls ja, kann der Kompente ein Kunststoff zugeordnet werden. Falls nicht, können weitere Komponenten zugeordnet werden.\",\n      colContent: \"1 (Ja) oder 0 (Nein)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"weight\",\n      colDesc: \"Gewicht in g\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"mat_rw\",\n      colDesc: \"Recycling-/Verträglichkeitswert\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"mat_id_int\",\n      colDesc: \"Interne Materialnummer (z.B. aus ERP-System)\",\n      colContent: \"String (Text)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"cad_id\",\n      colDesc: \"Interne Materialnummer aus CAD-System\",\n      colContent: \"String (Text)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"plast_desc\",\n      colDesc:\n        'Zugeordneter Kunststoff. Muss der Beschreibung in der Campus-Datenbank entsprechen (z.B. \"ACRYMID® TT50\").',\n      colContent: \"String (Text)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"height\",\n      colDesc: \"Höhe in mm\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"width\",\n      colDesc: \"Breite in mm\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"depth\",\n      colDesc: \"Tiefe in mm\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"volume\",\n      colDesc: \"Volumen in mm^3\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n  ]);\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickOpen}>\n        <PublishIcon style={{ marginRight: 5 }}></PublishIcon>\n        Upload\n      </Button>\n      <Dialog\n        open={csvUploadOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth={\"md\"}\n      >\n        <div style={{ width: \"100%\" }}>\n          <DialogActions>\n            <HighlightOffIcon\n              style={{ color: \"#005000\" }}\n              onClick={handleClose}\n            ></HighlightOffIcon>\n          </DialogActions>\n          <DialogTitle id=\"form-dialog-title\">Stückliste uploaden</DialogTitle>\n          <DialogContent>\n            <Typography>\n              Bitte wählen Sie eine csv-Datei aus und achten Sie darauf, dass\n              diese korrekt formatiert ist. Sie können auf \"Mehr anzeigen\"\n              klicken, um Hilfe bei der Formatierung zu erhalten.\n            </Typography>\n\n            <Grid\n              container\n              item\n              xs={12}\n              justify=\"center\"\n              style={{ marginTop: 30, marginBottom: 30 }}\n            >\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>Mehr anzeigen</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <GridDevExpress rows={requiredData} columns={exampleColumns}>\n                    <Table columnExtensions={tableColumnExtensions} />\n                    <TableHeaderRow />\n                  </GridDevExpress>\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              <div style={{ width: \"100%\" }}>\n                <input\n                  type=\"file\"\n                  accept=\".csv,.xlsx,.xls\"\n                  onChange={handleFileUpload}\n                  style={{ marginBottom: 10 }}\n                />\n              </div>\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              {loaded ? (\n                <div style={{ marginTop: 20, marginBottom: 20 }}>\n                  <Typography style={{ fontWeight: \"bold\" }}>\n                    Vorschau\n                  </Typography>\n                </div>\n              ) : (\n                <div style={{ marginTop: 20, marginBottom: 20 }} />\n              )}\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              <div style={{ width: \"100%\" }}>\n                <GridDevExpress rows={data} columns={columns}>\n                  <Table />\n                  <TableHeaderRow />\n                </GridDevExpress>\n              </div>\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              {loaded ? (\n                <div style={{ marginTop: 20 }}>\n                  <Button\n                    onClick={() => {\n                      handleClose();\n                    }}\n                    style={{\n                      borderColor: \"#005000\",\n                      color: \"#005000\",\n                      textTransform: \"none\",\n                      margin: 20,\n                      height: 30,\n                      width: 120,\n                    }}\n                  >\n                    Upload\n                  </Button>\n                </div>\n              ) : (\n                <div style={{ marginTop: 20 }}>\n                  <Button\n                    onClick={handleClose}\n                    style={{\n                      borderColor: \"#005000\",\n                      color: \"#005000\",\n                      textTransform: \"none\",\n                      margin: 20,\n                      height: 30,\n                      width: 120,\n                    }}\n                  >\n                    Abbrechen\n                  </Button>\n                </div>\n              )}\n            </Grid>\n          </DialogContent>\n        </div>\n      </Dialog>\n    </div>\n  );\n};\nexport default CsvUploadDialog;\n","import {\n  ColumnChooser,\n  Grid as GridDevExpress,\n  Table,\n  TableColumnVisibility,\n  TableHeaderRow,\n  TableTreeColumn,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport {\n  CustomTreeData,\n  DataTypeProvider,\n  IntegratedSorting,\n  SelectionState,\n  SortingState,\n  TreeDataState,\n} from \"@devexpress/dx-react-grid\";\nimport { useContext, useEffect, useState } from \"react\";\n\nimport EvaluationDialog from \"./EvaluationDialog.jsx\";\nimport AddBomDialog from \"./AddBomDialog.jsx\";\nimport AddMaterialDialog from \"./AddMaterialDialog.jsx\";\nimport AddPlastToMat from \"./AddPlastToMat.jsx\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DeleteMaterialDialog from \"./DeleteMaterialDialog.jsx\";\nimport CsvUploadDialog from \"./CsvUploadDialog.jsx\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { FormControl } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport { MainContext } from \"./MainContext.jsx\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PolymerIcon from \"@material-ui/icons/Polymer\";\nimport React from \"react\";\nimport { SearchDialog } from \"../../components/Search/SearchDialog.jsx\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainwindow: {\n    padding: 20,\n    minHeight: \"calc(100vh - 115px - 100px)\",\n    height: \"100%\",\n    paddingBottom: 0,\n    textAlign: \"left\",\n  },\n  divider: {\n    margin: 0,\n    marginTop: 15,\n  },\n  progress: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 15,\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  label: { marginTop: 10 },\n  buttonbox: {\n    textAlign: \"right\",\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  textfield: { margin: 0, padding: 0, background: \"white\" },\n  root_card: {\n    marginTop: 15,\n    marginBottom: 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n  card_div: {\n    marginBottom: 15,\n  },\n  formControl: {\n    minWidth: 325,\n  },\n}));\n\nconst getChildRows = (row, rootRows) => {\n  const childRows = rootRows.filter(\n    (r) => r.parent_id === (row ? row.result_id : null)\n  );\n  return childRows.length ? childRows : null;\n};\n\nconst RecyclingTypeProviderFormatter = ({ value, row }) => {\n  if (value > 0.9 && value <= 1)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,9 und 1,0.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"green\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.6 && value <= 0.9)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,6 und 0,9.\n              Verändern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhöhen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"yellow\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.3 && value <= 0.6)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,3 und 0,6.\n              Verändern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhöhen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"orange\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.0 && value <= 0.3)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,0 und 0,3.\n              Verändern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhöhen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"red\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  return (\n    <span>\n      <Tooltip\n        title={\n          <Typography variant=\"body1\">\n            Diese Komponente besitzt keine eigenen Recyclingwert, da sie nicht\n            aus mehreren Komponenten besteht.\n          </Typography>\n        }\n      >\n        <FiberManualRecordIcon\n          style={{ color: \"lightgrey\" }}\n          fontSize=\"large\"\n        ></FiberManualRecordIcon>\n      </Tooltip>\n    </span>\n  );\n};\n\nconst RecyclingTypeProvider = (props) => (\n  <DataTypeProvider\n    formatterComponent={RecyclingTypeProviderFormatter}\n    {...props}\n  />\n);\n\nconst PlasticTypeProviderFormatter = ({ value, row }) => {\n  if (value == 1)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Dieser Komponente kann ein Kunststoff zugeordnet werden.\n            </Typography>\n          }\n        >\n          <PolymerIcon style={{ color: \"black\" }}></PolymerIcon>\n        </Tooltip>\n      </span>\n    );\n  else\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Dieser Komponente kann kein Kunststoff zugeordnet werden.\n            </Typography>\n          }\n        >\n          <PolymerIcon style={{ color: \"lightgrey\" }}></PolymerIcon>\n        </Tooltip>\n      </span>\n    );\n};\n\nconst PlasticTypeProvider = (props) => (\n  <DataTypeProvider\n    formatterComponent={PlasticTypeProviderFormatter}\n    {...props}\n  />\n);\n\nconst TableTree = () => {\n  const {\n    selected_material,\n    parent_material,\n    bom_updated,\n    delete_material,\n    selected_construction_id,\n    selected_construction_title,\n    child_updated,\n    evaluation_open,\n    data_backend,\n    highest_level_id,\n    new_bom_created,\n    selection_atomic,\n  } = useContext(MainContext);\n\n  const [evaluationOpen, setEvaluationOpen] = evaluation_open;\n  const [selectedMaterial, setSelectedMaterial] = selected_material;\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [deleteMaterial, setDeleteMaterial] = delete_material;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n  const [bomMaterialId, setBomMaterialId] = useState(\"\");\n\n  const classes = useStyles();\n  const [dataBackend, setDataBackend] = data_backend;\n  const [childUpdated, setChildUpdated] = child_updated;\n  const [highestLevelId, setHighestLevelId] = highest_level_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [selectionAtomic, setSelectionAtomic] = selection_atomic;\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"/tree/\" + bomMaterialId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          console.log(d);\n          setDataBackend(d);\n          console.log(dataBackend);\n          setBomUpdated(false);\n          setRowSelection([]);\n        });\n    } else {\n    }\n  }, [bomUpdated, bomMaterialId]);\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"/mat?cons_id=\" + selectedConstructionId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          transformDropdownData(d);\n        });\n    } else {\n    }\n  }, [selectedConstructionId, newBomCreated]);\n\n  const [columns] = useState([\n    { name: \"result_id\", title: \"Id\" },\n    { name: \"parent_id\", title: \"Parent\" },\n    { name: \"mat_id\", title: \"Mat.Nr.\" },\n    { name: \"bom_id\", title: \"Id. BOM Eintrag\" },\n    { name: \"mat_desc\", title: \"Mat.Bez.\" },\n    { name: \"level\", title: \"Ebene\" },\n    { name: \"mat_rw\", title: \"Recycl.\" },\n    { name: \"mat_id_int\", title: \"ERP Mat.Nr.\" },\n    { name: \"mat_desc_int\", title: \"ERP Bez.\" },\n    { name: \"cad_id\", title: \"CAD Nr.\" },\n    { name: \"is_atomic\", title: \" \" },\n    { name: \"mara_plast_id\", title: \"Kunststoff_ID\" },\n    { name: \"plast_desc\", title: \"Kunstst.Bez.\" },\n    { name: \"plast_fam\", title: \"Kunstst.Fam.\" },\n    { name: \"height\", title: \"Höhe\" },\n    { name: \"width\", title: \"Breite\" },\n    { name: \"depth\", title: \"Tiefe\" },\n    { name: \"unit\", title: \"Einheit\" },\n    { name: \"weight\", title: \"Gewicht\" },\n    { name: \"weight_unit\", title: \"G. Einheit\" },\n    { name: \"volume\", title: \"Volumen\" },\n    { name: \"volume_unit\", title: \"Vol. Einheit\" },\n    { name: \"orga_id\", title: \"Organisations Id\" },\n  ]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"mat_id\", width: 250 },\n    { columnName: \"mat_desc\", width: 250 },\n    { columnName: \"plast_desc\", width: 250 },\n    { columnName: \"is_atomic\", width: 50 },\n  ]);\n  const [defaultExpandedRowIds] = useState([0]);\n  const [defaultHiddenColumnNames] = useState([\n    \"level\",\n    \"result_id\",\n    \"parent_id\",\n    \"mat_id_int\",\n    \"mat_desc_int\",\n    \"cad_id\",\n    \"mara_plast_id\",\n    \"orga_id\",\n    //\"bom_id\",\n  ]);\n\n  const [rowSelection, setRowSelection] = useState([]);\n  const [selectedMaraId, setSelectedMaraId] = useState(0);\n\n  const [listDropdownData, setListDropdownData] = useState([]);\n  const [dropdownSelected, setDropdownSelected] = useState([]);\n\n  const setParent = () => {\n    if (rowSelection.length == 1) {\n      setParentMaterial(dataBackend[rowSelection].mat_id);\n      setHighestLevelId(dataBackend[rowSelection].result_id);\n      setSelectionAtomic(dataBackend[rowSelection].is_atomic);\n    }\n  };\n\n  const handleDropdownChange = (event) => {\n    setDropdownSelected(event.target.textContent);\n    setBomMaterialId(parseInt(event.target.textContent.split(\" \")[0]));\n  };\n\n  const transformDropdownData = (data) => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map((item) => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  const setDeleteComponent = () => {\n    if (rowSelection.length == 1) {\n      setDeleteMaterial(dataBackend[rowSelection].bom_id);\n    }\n  };\n\n  const [searchDialogOpen, setSearchDialogOpen] = useState(false);\n\n  const handleSearchDialogClose = () => {\n    setSearchDialogOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\"search dialog changed\", searchDialogOpen);\n  }, [searchDialogOpen]);\n\n  return (\n    <div>\n      <SearchDialog\n        open={searchDialogOpen}\n        handleSearchDialogClose={handleSearchDialogClose}\n        // selectedId={[1,2,3,4,5]} // used to be able to make the post/update request within each search result\n      />\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          background: \"white\",\n          marginTop: 25,\n          textAlign: \"left\",\n        }}\n      >\n        <Grid item xs={6}>\n          <Typography>Bitte wählen Sie eine Stückliste aus.</Typography>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              disableClearable\n              value={dropdownSelected}\n              onChange={handleDropdownChange}\n              options={listDropdownData}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  value={dropdownSelected}\n                  margin=\"dense\"\n                  className={classes.textfield}\n                />\n              )}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine neue Stückliste als csv-Datei\n                importieren.\n              </Typography>\n            }\n          >\n            <div>\n              <CsvUploadDialog></CsvUploadDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine neue Stückliste erstellen.\n              </Typography>\n            }\n          >\n            <div>\n              <AddBomDialog></AddBomDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie die gewählte Stückliste bewerten.\n              </Typography>\n            }\n          >\n            <div>\n              <EvaluationDialog></EvaluationDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <div>\n        <GridDevExpress rows={dataBackend} columns={columns}>\n          <SelectionState\n            selection={rowSelection}\n            onSelectionChange={setRowSelection}\n          />\n          <TreeDataState defaultExpandedRowIds={defaultExpandedRowIds} />\n          <SortingState />\n          <CustomTreeData getChildRows={getChildRows} />\n          <IntegratedSorting />\n          <RecyclingTypeProvider for={[\"mat_rw\"]} />\n          <PlasticTypeProvider for={[\"is_atomic\"]} />\n          <Table columnExtensions={tableColumnExtensions} />\n          <TableColumnVisibility\n            defaultHiddenColumnNames={defaultHiddenColumnNames}\n          />\n          <TableHeaderRow showSortingControls />\n          <TableTreeColumn for=\"mat_id\" showSelectionControls />\n          <Toolbar />\n          <ColumnChooser />\n        </GridDevExpress>\n      </div>\n\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          background: \"white\",\n          marginTop: 25,\n          marginBottom: 25,\n        }}\n      >\n        <Grid item xs={6}></Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine ausgewählte Komponente löschen.\n              </Typography>\n            }\n          >\n            <div onClick={setDeleteComponent}>\n              <DeleteMaterialDialog></DeleteMaterialDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie einer bestehenden Komponente eine weitere\n                Komponente hinzufügen.\n              </Typography>\n            }\n          >\n            <div onClick={setParent}>\n              <AddMaterialDialog></AddMaterialDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie einer bestehenden Komponente einen Kunststoff\n                zuordnen.\n              </Typography>\n            }\n          >\n            <Button\n              className={classes.buttons}\n              onClick={() => {\n                setParent();\n                setSearchDialogOpen(!searchDialogOpen);\n              }}\n            >\n              <PolymerIcon style={{ marginRight: 5 }}></PolymerIcon>\n              Zuordnen\n            </Button>\n            {/* <div onClick={setParent}>\n              <AddPlastToMat></AddPlastToMat>\n            </div> */}\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container item xs={12} justify=\"center\">\n        {(rowSelection.length == 1) == false &&\n        selectedConstructionTitle != \"Bitte auswaehlen\" &&\n        bomMaterialId != \"\" ? (\n          <div style={{ color: \"red\", marginTop: 20, marginBottom: 20 }}>\n            <WarningIcon\n              style={{ fontSize: \"small\", marginRight: 10 }}\n            ></WarningIcon>{\" \"}\n            Bitte wählen Sie eine Komponente aus.\n          </div>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default TableTree;\n","import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\nimport Tabs from \"./AddComponentTabs.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport {\n  makeStyles,\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  formControl: {\n    minWidth: 200,\n    marginBottom: 50,\n  },\n}));\n\nconst AddConstructionDialog = () => {\n  const classes = useStyles();\n  const {\n    add_construction_open,\n    constructions_updated,\n    new_construction,\n  } = useContext(MainContext);\n  const [constructionsUpdated, setConstructionsUpdated] = constructions_updated;\n  const [addConstructionOpen, setAddConstructionOpen] = add_construction_open;\n  const [newConstruction, setNewConstruction] = new_construction;\n\n  const handleClickOpen = () => {\n    setAddConstructionOpen(true);\n  };\n\n  const handleClose = () => {\n    setAddConstructionOpen(false);\n  };\n\n  const handleNewConstInput = (event) => {\n    setNewConstruction({\n      ...newConstruction,\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  const AddConstruction = () => {\n    var requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        cons_title: newConstruction.cons_title,\n        cons_desc: newConstruction.cons_desc,\n        orga_id: newConstruction.orga_id,\n        del_kz: newConstruction.del_kz,\n      }),\n      redirect: \"follow\",\n    };\n\n    fetch(\"/cons\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setConstructionsUpdated(!constructionsUpdated);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickOpen}>\n        <CreateIcon style={{ marginRight: 5 }}></CreateIcon>\n        Erstellen\n      </Button>\n\n      <Dialog\n        open={addConstructionOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">Konstruktion anlegen</DialogTitle>\n        <DialogContent>\n          <Grid container item xs={12}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <TextField\n                id=\"cons_title\"\n                label=\"Konstr.Titel\"\n                value={newConstruction.cons_title}\n                onChange={handleNewConstInput}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"cons_desc\"\n                label=\"Konstr.Beschreibung\"\n                value={newConstruction.cons_desc}\n                onChange={handleNewConstInput}\n                margin=\"normal\"\n              />\n            </form>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\">\n            <Grid item xs={6}>\n              {\" \"}\n              <Button className={classes.buttons} onClick={handleClose}>\n                Abbrechen\n              </Button>\n            </Grid>\n            <Grid item xs={6}>\n              {\" \"}\n              <Button\n                className={classes.buttons}\n                onClick={() => {\n                  AddConstruction();\n                  handleClose();\n                }}\n              >\n                Erstellen\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default AddConstructionDialog;\n","import React from \"react\";\nimport { useContext } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { Typography } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst DeleteConstructionDialog = () => {\n  const classes = useStyles();\n\n  const {\n    delete_construction_open,\n    constructions_updated,\n    selected_construction_id,\n  } = useContext(MainContext);\n\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [constructionsUpdated, setConstructionsUpdated] = constructions_updated;\n  const [\n    delecteConstructionOpen,\n    setDeleteConstructionOpen,\n  ] = delete_construction_open;\n\n  const handleClickOpen = () => {\n    setDeleteConstructionOpen(true);\n  };\n\n  const handleClose = () => {\n    setDeleteConstructionOpen(false);\n    setSelectedConstructionId([]);\n  };\n\n  const deleteConstructionEntry = (consId) => {\n    var requestOptions = {\n      method: \"DELETE\",\n      redirect: \"follow\",\n    };\n    fetch(\"/cons/\" + consId, requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setConstructionsUpdated(!constructionsUpdated);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickOpen}>\n        <DeleteIcon style={{ marginRight: 5 }}></DeleteIcon>\n        Löschen\n      </Button>\n      <Dialog\n        open={delecteConstructionOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">Konstruktion löschen</DialogTitle>\n        <DialogContent>\n          <Typography>Wollen Sie die Konstruktion wirklich löschen?</Typography>\n\n          <Grid container item xs={12} justify=\"center\">\n            <Card className={classes.root_card} variant=\"outlined\">\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                  align=\"center\"\n                >\n                  Ausgewählte Konstruktion:\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                  {selectedConstructionId}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid container item xs={12}>\n            <Grid item xs={6}>\n              <Button\n                color=\"primary\"\n                className={classes.buttons}\n                variant=\"outlined\"\n                onClick={handleClose}\n              >\n                Nein\n              </Button>\n            </Grid>\n\n            <Grid item xs={6}>\n              <Button\n                color=\"primary\"\n                className={classes.buttons}\n                variant=\"outlined\"\n                onClick={() => {\n                  console.log(typeof selectedConstructionId);\n                  deleteConstructionEntry(selectedConstructionId);\n                  handleClose();\n                }}\n              >\n                Ja\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default DeleteConstructionDialog;\n","import React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\n\n// Components\nimport { MainContext } from \"./MainContext.jsx\";\nimport AddConstructionDialog from \"./AddConstructionDialog.jsx\";\nimport DeleteConstructionDialog from \"./DeleteConstructionDialog.jsx\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport {\n  SelectionState,\n  FilteringState,\n  IntegratedFiltering,\n} from \"@devexpress/dx-react-grid\";\n\nimport {\n  Grid as GridDevExpress,\n  Table,\n  TableSelection,\n  TableColumnVisibility,\n  ColumnChooser,\n  TableHeaderRow,\n  TableFilterRow,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst ConstructionTable = () => {\n  const classes = useStyles();\n\n  const {\n    selected_construction_id,\n    selected_construction_title,\n    orga_id,\n    constructions_updated,\n  } = useContext(MainContext);\n\n  const [orgaId, setOrgaId] = orga_id;\n\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n\n  const [constructionData, setConstructionData] = useState([]);\n  const [constructionsUpdated, setConstructionsUpdate] = constructions_updated;\n\n  useEffect(() => {\n    fetch(\"/cons/\" + orgaId)\n      .then((res) => {\n        return res.json();\n      })\n      .then((d) => {\n        setConstructionData(d.filter((d) => d.del_kz === 0));\n      });\n  }, [constructionsUpdated]);\n\n  const [constructionColumns] = useState([\n    { name: \"id\", title: \"Konstr.Nr.\" },\n    { name: \"cons_title\", title: \"Konstr.Titel.\" },\n    { name: \"cons_desc\", title: \"Konstr.Beschr.\" },\n    { name: \"del_kz\", title: \"Lösch.Kennz.\" },\n  ]);\n\n  const [defaultHiddenColumnNames] = useState([\"del_kz\"]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"id\", width: 100 },\n    { columnName: \"cons_title\", width: 250 },\n    { columnName: \"cons_desc\", width: 550, wordWrapEnabled: true },\n    { columnName: \"del_kz\", width: 50 },\n  ]);\n\n  const [selection, setSelection] = useState([]);\n\n  const onClickSelect = () => {\n    if (selection.length == 1) {\n      setSelectedConstructionId(constructionData[selection].id);\n      setSelectedConstructionTitle(constructionData[selection].cons_title);\n    }\n  };\n\n  return (\n    <div>\n      <GridDevExpress rows={constructionData} columns={constructionColumns}>\n        <SelectionState\n          selection={selection}\n          onSelectionChange={setSelection}\n        />\n        <FilteringState defaultFilters={[]} />\n        <IntegratedFiltering />\n        <Table columnExtensions={tableColumnExtensions} />\n        <TableSelection />\n        <TableColumnVisibility\n          defaultHiddenColumnNames={defaultHiddenColumnNames}\n        />\n        <Toolbar />\n        <ColumnChooser />\n        <TableFilterRow />\n        <TableHeaderRow />\n      </GridDevExpress>\n\n      <Grid container item xs={12}>\n        <Grid item xs={6}></Grid>\n        <Grid item xs={2}>\n          <div onClick={onClickSelect}>\n            <Tooltip\n              title={\n                <Typography variant=\"body1\">\n                  Hiermit können Sie eine Konstruktion löschen.\n                </Typography>\n              }\n            >\n              <div>\n                <DeleteConstructionDialog></DeleteConstructionDialog>\n              </div>\n            </Tooltip>\n          </div>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine Konstruktion erstellen.\n              </Typography>\n            }\n          >\n            <div>\n              <AddConstructionDialog></AddConstructionDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine Konstruktion auswählen.\n              </Typography>\n            }\n          >\n            <Button className={classes.buttons} onClick={onClickSelect}>\n              <CheckCircleIcon style={{ marginRight: 5 }}></CheckCircleIcon>\n              Auswählen\n            </Button>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container item xs={12} justify=\"center\">\n        {(selection.length == 1) == false ? (\n          <div style={{ color: \"red\", marginTop: 20, marginBottom: 20 }}>\n            <WarningIcon\n              style={{ fontSize: \"small\", marginRight: 10 }}\n            ></WarningIcon>{\" \"}\n            Bitte wählen Sie eine Konstruktion.\n          </div>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ConstructionTable;\n","// author: topr\n// last updated: 11.11.2020\n// currently used: yes\n// description: includes topsis method\n\nimport React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\n\n//Devexpress\nimport {\n  SelectionState,\n  IntegratedSorting,\n  SortingState,\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid as GridDevExpress,\n  Table,\n  TableSelection,\n  TableColumnVisibility,\n  TableHeaderRow,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120,\n  },\n  textfield: { margin: 0, padding: 0, background: \"white\" },\n  title: {\n    fontSize: 13,\n  },\n  card_div: {\n    marginBottom: 15,\n  },\n  formControl: {\n    minWidth: 325,\n  },\n  root_card: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    marginBottom: 20,\n    height: 100,\n    width: 200,\n  },\n}));\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#005000\",\n  },\n  iconHover: {\n    color: \"#005000\",\n  },\n})(Rating);\n\nconst Comparison = () => {\n  const classes = useStyles();\n\n  const { selected_construction_id, selected_construction_title } = useContext(\n    MainContext\n  );\n\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n\n  const [weightsSet, setWeightsSet] = useState(false);\n  const [comparisionDone, setComparisonDone] = useState(false);\n\n  const [evaluationRatings, setEvaluationRatings] = useState({\n    recycling: 2,\n    co2: 2,\n    price: 2,\n  });\n\n  const [weights, setWeights] = useState({\n    price: 0.33,\n    co2: 0.33,\n    recycling: 0.33,\n  });\n\n  const calcWeights = () => {\n    setWeights({\n      ...weights,\n      [\"recycling\"]:\n        evaluationRatings.recycling /\n        (evaluationRatings.price +\n          evaluationRatings.co2 +\n          evaluationRatings.recycling),\n      [\"co2\"]:\n        evaluationRatings.co2 /\n        (evaluationRatings.price +\n          evaluationRatings.co2 +\n          evaluationRatings.recycling),\n      [\"price\"]:\n        evaluationRatings.price /\n        (evaluationRatings.price +\n          evaluationRatings.co2 +\n          evaluationRatings.recycling),\n    });\n  };\n\n  const [alternatives, setAlternatives] = useState([]);\n  const [listDropdownData, setListDropdownData] = useState([]);\n\n  const transformDropdownData = (data) => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map((item) => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"/mat?cons_id=\" + selectedConstructionId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          transformDropdownData(d);\n        });\n    } else {\n    }\n  }, [selectedConstructionId]);\n\n  const handleDropdownChange = (event) => {\n    setAlternatives(event.target.value);\n  };\n\n  const [topsisData, setTopsisData] = useState([\n    {\n      id: 1,\n      mat_desc: \"Elektrische Zahnbuerste A\",\n      price: 1.9,\n      co2: 0.75,\n      recycling: 0.75,\n    },\n    {\n      id: 2,\n      mat_desc: \"Elektrische Zahnbuerste B\",\n      price: 2.0,\n      co2: 0.8,\n      recycling: 0.9,\n    },\n    {\n      id: 3,\n      mat_desc: \"Elektrische Zahnbuerste C\",\n      price: 1.6,\n      co2: 0.7,\n      recycling: 0.55,\n    },\n    {\n      id: 4,\n      mat_desc: \"Elektrische Zahnbuerste D\",\n      price: 1.2,\n      co2: 0.8,\n      recycling: 0.3,\n    },\n  ]);\n\n  const [topsisColumns] = useState([\n    { name: \"id\", title: \"Mat.Nr.\" },\n    { name: \"mat_desc\", title: \"Mat.Bez.\" },\n    { name: \"price\", title: \"Preis\" },\n    { name: \"co2\", title: \"C02-Wert\" },\n    { name: \"recycling\", title: \"Recyclingwert\" },\n  ]);\n\n  const [selection, setSelection] = useState([]);\n  const [resultData, setResultData] = useState([]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"id\", width: 100 },\n    { columnName: \"mat_desc\", width: 350 },\n    { columnName: \"price\", width: 150 },\n    { columnName: \"co2\", width: 150 },\n    { columnName: \"recycling\", width: 150 },\n  ]);\n\n  const compareAlternatives = () => {\n    calcWeights();\n    setWeightsSet(true);\n  };\n\n  useEffect(() => {\n    if (setWeightsSet) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          topsis_data: topsisData,\n          topsis_weights: weights,\n        }),\n      };\n      fetch(\"/topsis\", requestOptions, { mode: \"no-cors\" })\n        .then((res) => {\n          res.json();\n          console.log(res);\n        })\n        .then((data) => {\n          setResultData(data);\n          setComparisonDone(true);\n          setWeightsSet(false);\n        });\n    } else {\n    }\n  }, [weightsSet]);\n\n  return (\n    <div>\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          marginTop: 25,\n          textAlign: \"center\",\n        }}\n      >\n        <Grid item xs={4} style={{ marginTop: 30 }}>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">Recyclingwert</Typography>\n            <StyledRating\n              name=\"recycling\"\n              value={evaluationRatings.recycling}\n              max={10}\n              onChange={(event, newValue) => {\n                setEvaluationRatings({\n                  ...evaluationRatings,\n                  [\"recycling\"]: newValue,\n                });\n              }}\n              icon={<FiberManualRecordIcon fontSize=\"inherit\" />}\n            />\n          </Box>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">Preis</Typography>\n            <StyledRating\n              name=\"price\"\n              value={evaluationRatings.price}\n              max={10}\n              onChange={(event, newValue) => {\n                setEvaluationRatings({\n                  ...evaluationRatings,\n                  [\"price\"]: newValue,\n                });\n              }}\n              icon={<FiberManualRecordIcon fontSize=\"inherit\" />}\n            />\n          </Box>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">CO2-Wert</Typography>\n            <StyledRating\n              name=\"co2\"\n              value={evaluationRatings.co2}\n              max={10}\n              onChange={(event, newValue) => {\n                setEvaluationRatings({\n                  ...evaluationRatings,\n                  [\"co2\"]: newValue,\n                });\n              }}\n              icon={<FiberManualRecordIcon fontSize=\"inherit\" />}\n            />\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <Grid\n            container\n            item\n            xs={12}\n            style={{\n              marginTop: 25,\n              textAlign: \"center\",\n            }}\n          >\n            <Grid item xs={4}>\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Gewichtung Recyclingwert\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {Number(\n                      (evaluationRatings.recycling * 100) /\n                        (evaluationRatings.price +\n                          evaluationRatings.co2 +\n                          evaluationRatings.recycling)\n                    ).toFixed(2)}{\" \"}\n                    %\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              {\" \"}\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Gewichtung Preis\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {Number(\n                      (evaluationRatings.price * 100) /\n                        (evaluationRatings.price +\n                          evaluationRatings.co2 +\n                          evaluationRatings.recycling)\n                    ).toFixed(2)}{\" \"}\n                    %\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Gewichtung C02-Wert\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {Number(\n                      (evaluationRatings.co2 * 100) /\n                        (evaluationRatings.price +\n                          evaluationRatings.co2 +\n                          evaluationRatings.recycling)\n                    ).toFixed(2)}{\" \"}\n                    %\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={12}\n              style={{\n                marginTop: 25,\n                marginLeft: 50,\n                textAlign: \"left\",\n              }}\n            >\n              <Grid xd={6}>\n                <Typography>\n                  Bitte wählen Sie zwei oder mehr Stücklisten aus.\n                </Typography>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id=\"demo-mutiple-checkbox-label\">\n                    Stücklisten\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-mutiple-checkbox-label\"\n                    id=\"demo-mutiple-checkbox\"\n                    multiple\n                    value={alternatives}\n                    onChange={handleDropdownChange}\n                    input={<Input />}\n                    renderValue={(selected) => selected.join(\", \")}\n                  >\n                    {listDropdownData.map((name) => (\n                      <MenuItem key={name} value={name}>\n                        <Checkbox checked={alternatives.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                xd={3}\n                style={{\n                  textAlign: \"right\",\n                }}\n              >\n                <Button\n                  className={classes.buttons}\n                  onClick={() => {\n                    compareAlternatives();\n                    console.log(weights);\n                  }}\n                >\n                  Vergleich durchführen\n                </Button>\n                <Grid\n                  xd={3}\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Button\n                    className={classes.buttons}\n                    variant=\"outlined\"\n                    onClick={() => {\n                      console.log(resultData);\n                    }}\n                  >\n                    Print Ergebnis\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          marginLeft: 25,\n          textAlign: \"center\",\n        }}\n      >\n        <GridDevExpress rows={topsisData} columns={topsisColumns}>\n          <SelectionState\n            selection={selection}\n            onSelectionChange={setSelection}\n          />\n          <SortingState />\n          <IntegratedSorting />\n          <Table columnExtensions={tableColumnExtensions} />\n          <TableSelection />\n          <TableColumnVisibility />\n          <Toolbar />\n          <TableHeaderRow showSortingControls />\n        </GridDevExpress>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Comparison;\n","import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\n\n//Components\nimport PartnerLogos from \"../../components/PartnerLogos/PartnerLogos\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport TableTree from \"./TableTree.jsx\";\nimport ConstructionsTable from \"./ConstructionsTable.jsx\";\nimport Comparison from \"./Comparison.jsx\";\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialUIToolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport AccountTreeOutlinedIcon from \"@material-ui/icons/AccountTreeOutlined\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainwindow: {\n    padding: 20,\n    minHeight: \"calc(100vh - 115px - 100px)\",\n    height: \"100%\",\n    paddingBottom: 0,\n    textAlign: \"left\",\n  },\n  divider: {\n    margin: 0,\n    marginTop: 15,\n  },\n  progress: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 15,\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    \"&:hover\": {\n      backgroundColor: \"red\",\n      color: \"blue\",\n    },\n  },\n  label: { marginTop: 10 },\n  buttonbox: {\n    textAlign: \"right\",\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  autocomplete: {\n    color: \"black\",\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      border: 0,\n    },\n    \"&:hover .MuiOutlinedInput-notchedOutline\": {\n      border: 0,\n    },\n    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      border: 0,\n    },\n  },\n  textfield: { margin: 0, padding: 0, background: \"white\" },\n  root_card: {\n    marginTop: 15,\n    marginBottom: 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n  card_div: {\n    marginBottom: 15,\n  },\n  highlighted: {\n    // color: \"#005000\",\n    color: \"#f1c40f\",\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n\n  const {\n    selected_construction_id,\n    selected_construction_title,\n    orga_id,\n  } = useContext(MainContext);\n\n  const [orgaId, setOrgaId] = orga_id;\n\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n\n  const [contentNum, setContentNum] = useState(1);\n\n  return (\n    <div>\n      <NavBar></NavBar>\n      <PartnerLogos></PartnerLogos>\n      <AppBar position=\"relative\" style={{ background: \"#007F3D\" }}>\n        <MaterialUIToolbar>\n          <Grid container alignItems=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"h6\" noWrap>\n                {\"Konstruktion: \" +\n                  selectedConstructionId +\n                  \" \" +\n                  selectedConstructionTitle}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"center\"\n              >\n                <InfoOutlinedIcon\n                  style={{\n                    fontSize: 32,\n                  }}\n                  onClick={() => setContentNum(1)}\n                  className={clsx({\n                    [classes.highlighted]: contentNum === 1 ? true : false,\n                  })}\n                />\n                <AccountTreeOutlinedIcon\n                  style={{\n                    fontSize: 32,\n                  }}\n                  onClick={() => setContentNum(2)}\n                  className={clsx({\n                    [classes.highlighted]: contentNum === 2 ? true : false,\n                  })}\n                />\n                <RateReviewOutlinedIcon\n                  style={{\n                    fontSize: 32,\n                  }}\n                  onClick={() => setContentNum(3)}\n                  className={clsx({\n                    [classes.highlighted]: contentNum === 3 ? true : false,\n                  })}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </MaterialUIToolbar>\n      </AppBar>\n      <Grid container item xs={12}>\n        <Grid item xs={1}></Grid>\n\n        <Grid item xs={10}>\n          <div>\n            {/* Check selected Button */}\n            {contentNum === 1 ? (\n              <ConstructionsTable></ConstructionsTable>\n            ) : contentNum === 2 ? (\n              <TableTree></TableTree>\n            ) : contentNum === 3 ? (\n              <Comparison></Comparison>\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </Grid>\n        <Grid item xs={1}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\n//Components\nimport { MainProvider } from \"./MainContext\";\nimport Main from \"./Main\";\n\n// import provider for wrapping and state management in construction Info\nfunction MainWrapper() {\n  return (\n    <MainProvider>\n      <div>\n        <Main></Main>\n      </div>\n    </MainProvider>\n  );\n}\n\nexport default MainWrapper;","import React, { useEffect, useState } from \"react\";\nimport {\n    Grid,\n    List,\n    ListItem,\n    CircularProgress,\n    Button,\n} from \"@material-ui/core\";\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport PartnerLogos from \"../../components/PartnerLogos/PartnerLogos\";\n\nexport default function Settings() {\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n    const [anzeige, setAnzeige] = useState(1);\n\n    useEffect(() => {\n        // fetch data\n        fetch(\"http://dummy.restapiexample.com/api/v1/employees\") //url/endpoint austauschen\n            .then((result) => result.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    // result verarbeiten\n                    setData(result.data);\n\n                    setLoading(false);\n                },\n                (error) => {\n                    console.log(\"error while fetching data\");\n                }\n            );\n\n        // data state auf daten setzen\n        // loading auf false setzen\n    }, []);\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n                <Grid item xs={12} style={{ background: \"red\" }}>\n                    <Grid container style={{}}>\n                        <Grid item xs={3} style={{ background: \"yellow\" }}>\n                            {loading ? (\n                                <CircularProgress />\n                            ) : (\n                                <List>\n                                    {data.map((elem) => {\n                                        return (\n                                            <ListItem>\n                                                {elem.employee_name}\n                                            </ListItem>\n                                        );\n                                    })}\n                                </List>\n                            )}\n                        </Grid>\n                        <Grid item xs={9} style={{ background: \"orange\" }}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    Prozessschritte\n                                </Grid>\n                                <Grid item xs={12} style={{ height: 400 }}>\n                                    <Grid container>\n                                        <Grid item xs={12}>\n                                            <Button\n                                                variant=\"contained\"\n                                                onClick={() => setAnzeige(1)}\n                                            >\n                                                1\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                onClick={() => setAnzeige(2)}\n                                            >\n                                                2\n                                            </Button>\n                                        </Grid>\n                                        <h1>Aktuelle Anzeige: </h1>\n                                        <h1>{anzeige}</h1>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} style={{ background: \"teal\" }}>\n                    <PartnerLogos />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport { APIProvider } from \"./APIContext\";\nimport { PrivateRoute } from \"./components/PrivateRoute/PrivateRoute\";\nimport { UserProvider } from \"./contexts/UserContext\";\nimport { history } from \"./helpers/history\";\nimport \"./index.css\";\nimport { authenticationService } from \"./services/authenticationService\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ConstructionWrapper from \"./views/Construction/ConstructionWrapper\";\nimport { Home } from \"./views/Home/Home\";\nimport { Login } from \"./views/Login/Login\";\nimport MainWrapper from \"./views/Main/MainWrapper\";\nimport Settings from \"./views/Settings/Settings\";\n\n// using router and debugging API Context in all sources\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href =\n  \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    authenticationService.currentUser.subscribe((x) =>\n      setUser({ currentUser: x })\n    );\n  }, []);\n\n  const logout = () => {\n    authenticationService.logout();\n    history.push(\"/login\");\n  };\n\n  return (\n    <Router history={history}>\n      <APIProvider>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <PrivateRoute path=\"/home\" component={Home}></PrivateRoute>\n          <PrivateRoute\n            path=\"/construction\"\n            component={ConstructionWrapper}\n          ></PrivateRoute>\n          <PrivateRoute path=\"/settings\" component={Settings}></PrivateRoute>\n          <PrivateRoute path=\"/main\" component={MainWrapper}></PrivateRoute>\n          <Route path=\"/login\" component={Login}></Route>\n        </Switch>\n      </APIProvider>\n    </Router>\n  );\n};\n\nReactDOM.render(\n  <UserProvider>\n    <App />\n  </UserProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}