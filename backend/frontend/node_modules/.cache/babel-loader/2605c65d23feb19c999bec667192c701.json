{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/components/PrivateRoute/PrivateRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authenticationService } from \"../../services/authenticationService\";\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    const currentUser = authenticationService.currentUserValue;\n\n    if (!currentUser) {\n      // not logged in so redirect to login page with the return url\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      });\n    } // auth success => Return Component\n\n\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }\n    }));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}));","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/components/PrivateRoute/PrivateRoute.jsx"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","component","Component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAC1B,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,UAAMC,WAAW,GAAGN,qBAAqB,CAACO,gBAA1C;;AACA,QAAI,CAACD,WAAL,EAAkB;AAChB;AACA,0BACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL,KAAK,CAACM;AAAd;AAA7B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD,KATgB,CAWjB;;;AACA,wBAAO,oBAAC,SAAD,oBAAeN,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { authenticationService } from \"../../services/authenticationService\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const currentUser = authenticationService.currentUserValue;\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      // auth success => Return Component\n      return <Component {...props} />;\n    }}\n  />\n);\n"]},"metadata":{},"sourceType":"module"}