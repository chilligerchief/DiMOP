{"ast":null,"code":"import _slicedToArray from\"/home/adrian/DiMOP/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Grid,List,ListItem,CircularProgress,Button}from\"@material-ui/core\";import NavBar from\"../../components/NavBar/NavBar\";import PartnerLogos from\"../../components/PartnerLogos/PartnerLogos\";export default function Settings(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),anzeige=_useState6[0],setAnzeige=_useState6[1];useEffect(function(){// fetch data\nfetch(\"http://dummy.restapiexample.com/api/v1/employees\")//url/endpoint austauschen\n.then(function(result){return result.json();}).then(function(result){console.log(result);// result verarbeiten\nsetData(result.data);setLoading(false);},function(error){console.log(\"error while fetching data\");});// data state auf daten setzen\n// loading auf false setzen\n},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(NavBar,null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{background:\"red\"}},/*#__PURE__*/React.createElement(Grid,{container:true,style:{}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:3,style:{background:\"yellow\"}},loading?/*#__PURE__*/React.createElement(CircularProgress,null):/*#__PURE__*/React.createElement(List,null,data.map(function(elem){return/*#__PURE__*/React.createElement(ListItem,null,elem.employee_name);}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:9,style:{background:\"orange\"}},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},\"Prozessschritte\"),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{height:400}},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",onClick:function onClick(){return setAnzeige(1);}},\"1\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",onClick:function onClick(){return setAnzeige(2);}},\"2\")),/*#__PURE__*/React.createElement(\"h1\",null,\"Aktuelle Anzeige: \"),/*#__PURE__*/React.createElement(\"h1\",null,anzeige))))))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,style:{background:\"teal\"}},/*#__PURE__*/React.createElement(PartnerLogos,null))));}","map":{"version":3,"sources":["/home/adrian/DiMOP/backend/frontend/src/views/Settings/Settings.jsx"],"names":["React","useEffect","useState","Grid","List","ListItem","CircularProgress","Button","NavBar","PartnerLogos","Settings","loading","setLoading","data","setData","anzeige","setAnzeige","fetch","then","result","json","console","log","error","background","map","elem","employee_name","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    Grid,\n    List,\n    ListItem,\n    CircularProgress,\n    Button,\n} from \"@material-ui/core\";\n\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport PartnerLogos from \"../../components/PartnerLogos/PartnerLogos\";\n\nexport default function Settings() {\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n    const [anzeige, setAnzeige] = useState(1);\n\n    useEffect(() => {\n        // fetch data\n        fetch(\"http://dummy.restapiexample.com/api/v1/employees\") //url/endpoint austauschen\n            .then((result) => result.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    // result verarbeiten\n                    setData(result.data);\n\n                    setLoading(false);\n                },\n                (error) => {\n                    console.log(\"error while fetching data\");\n                }\n            );\n\n        // data state auf daten setzen\n        // loading auf false setzen\n    }, []);\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n                <Grid item xs={12} style={{ background: \"red\" }}>\n                    <Grid container style={{}}>\n                        <Grid item xs={3} style={{ background: \"yellow\" }}>\n                            {loading ? (\n                                <CircularProgress />\n                            ) : (\n                                <List>\n                                    {data.map((elem) => {\n                                        return (\n                                            <ListItem>\n                                                {elem.employee_name}\n                                            </ListItem>\n                                        );\n                                    })}\n                                </List>\n                            )}\n                        </Grid>\n                        <Grid item xs={9} style={{ background: \"orange\" }}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    Prozessschritte\n                                </Grid>\n                                <Grid item xs={12} style={{ height: 400 }}>\n                                    <Grid container>\n                                        <Grid item xs={12}>\n                                            <Button\n                                                variant=\"contained\"\n                                                onClick={() => setAnzeige(1)}\n                                            >\n                                                1\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                onClick={() => setAnzeige(2)}\n                                            >\n                                                2\n                                            </Button>\n                                        </Grid>\n                                        <h1>Aktuelle Anzeige: </h1>\n                                        <h1>{anzeige}</h1>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} style={{ background: \"teal\" }}>\n                    <PartnerLogos />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}