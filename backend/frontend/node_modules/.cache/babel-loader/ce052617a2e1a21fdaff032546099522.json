{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/components/NavBar/NavBar.jsx\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport logo from \"../../assets/img/header_dimop.svg\";\nimport { authenticationService } from \"../../services/authenticationService\";\nimport colors from \"../../variables/colors\";\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    color: \"white\",\n    border: 0,\n    \"&:hover\": {\n      backgroundColor: colors.lightGreen,\n      color: colors.primaryGreen\n    }\n  },\n  text: {\n    color: \"white\"\n  },\n  logo: {\n    height: 64,\n    padding: 16\n  }\n}));\nexport default function NavBar() {\n  const classes = useStyles(); // const { use_API } = useContext(APIContext);\n  // const [useAPI, setUseAPI] = use_API;\n\n  const user = localStorage.getItem(\"currentUser\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    style: {\n      // background: useAPI ? \"#007F3D\" : \"red\",\n      background: \"#007F3D\",\n      marginBottom: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/construction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/construction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"DIMOP\"))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"space-evenly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, user !== null ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.buttons,\n    href: \"/main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Main\")) : \"\", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.buttons,\n    href: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Startseite\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, user !== null ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.buttons,\n    onClick: () => {\n      authenticationService.logout();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Abmelden\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.buttons,\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Anmelden\"))))));\n}","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/components/NavBar/NavBar.jsx"],"names":["Button","Grid","makeStyles","Typography","React","authenticationService","colors","useStyles","theme","buttons","color","border","backgroundColor","lightGreen","primaryGreen","text","logo","height","padding","NavBar","classes","user","localStorage","getItem","background","marginBottom","logout"],"mappings":"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","sourcesContent":["import { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport logo from \"../../assets/img/header_dimop.svg\";\nimport { authenticationService } from \"../../services/authenticationService\";\nimport colors from \"../../variables/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    color: \"white\",\n    border: 0,\n    \"&:hover\": {\n      backgroundColor: colors.lightGreen,\n      color: colors.primaryGreen,\n    },\n  },\n  text: {\n    color: \"white\",\n  },\n  logo: {\n    height: 64,\n    padding: 16,\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n\n  // const { use_API } = useContext(APIContext);\n  // const [useAPI, setUseAPI] = use_API;\n\n  const user = localStorage.getItem(\"currentUser\");\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{\n          // background: useAPI ? \"#007F3D\" : \"red\",\n          background: \"#007F3D\",\n          marginBottom: 16,\n        }}\n      >\n        <Grid item xs={6}>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <a href=\"/construction\">\n                <img src={logo} alt=\"logo\" className={classes.logo}></img>\n              </a>\n            </Grid>\n            <Grid item>\n              <a href=\"/construction\">\n                <Typography variant=\"h6\" noWrap className={classes.text}>\n                  DIMOP\n                </Typography>\n              </a>\n            </Grid>\n\n            {/*}\n            <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.buttons}\n                                href=\"/login\"\n                            >\n                                Registrieren\n                            </Button>\n                        </Grid>\n            <Grid item style={{ marginLeft: 32 }}>\n                            <span>useAPI: </span>\n                            <span>{useAPI ? \"true\" : \"false\"}</span>\n                        </Grid>\n                          */}\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container spacing={2} justify=\"space-evenly\">\n            {user !== null ? (\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  href=\"/main\"\n                >\n                  Main\n                </Button>\n              </Grid>\n            ) : (\n              \"\"\n            )}\n\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                className={classes.buttons}\n                href=\"/home\"\n              >\n                Startseite\n              </Button>\n            </Grid>\n            <Grid item>\n              {user !== null ? (\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  onClick={() => {\n                    authenticationService.logout();\n                  }}\n                >\n                  Abmelden\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  href=\"/login\"\n                >\n                  Anmelden\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}