{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/views/Main/Comparison.jsx\";\n// author: topr\n// last updated: 11.11.2020\n// currently used: yes\n// description: includes topsis method\nimport React from \"react\";\nimport { useEffect, useContext, useState } from \"react\"; //Components\n\nimport { MainContext } from \"./MainContext.jsx\"; //Material UI\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\"; //Devexpress\n\nimport { SelectionState, IntegratedSorting, SortingState } from \"@devexpress/dx-react-grid\";\nimport { Grid as GridDevExpress, Table, TableSelection, TableColumnVisibility, TableHeaderRow, Toolbar } from \"@devexpress/dx-react-grid-material-ui\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120\n  },\n  textfield: {\n    margin: 0,\n    padding: 0,\n    background: \"white\"\n  },\n  title: {\n    fontSize: 13\n  },\n  card_div: {\n    marginBottom: 15\n  },\n  formControl: {\n    minWidth: 325\n  },\n  root_card: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    marginBottom: 20,\n    height: 100,\n    width: 200\n  }\n}));\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#005000\"\n  },\n  iconHover: {\n    color: \"#005000\"\n  }\n})(Rating);\n\nconst Comparison = () => {\n  const classes = useStyles();\n  const {\n    selected_construction_id,\n    selected_construction_title\n  } = useContext(MainContext);\n  const [selectedConstructionId, setSelectedConstructionId] = selected_construction_id;\n  const [selectedConstructionTitle, setSelectedConstructionTitle] = selected_construction_title;\n  const [weightsSet, setWeightsSet] = useState(false);\n  const [comparisionDone, setComparisonDone] = useState(false);\n  const [evaluationRatings, setEvaluationRatings] = useState({\n    recycling: 2,\n    co2: 2,\n    price: 2\n  });\n  const [weights, setWeights] = useState({\n    price: 0.33,\n    co2: 0.33,\n    recycling: 0.33\n  });\n\n  const calcWeights = () => {\n    setWeights({ ...weights,\n      [\"recycling\"]: evaluationRatings.recycling / (evaluationRatings.price + evaluationRatings.co2 + evaluationRatings.recycling),\n      [\"co2\"]: evaluationRatings.co2 / (evaluationRatings.price + evaluationRatings.co2 + evaluationRatings.recycling),\n      [\"price\"]: evaluationRatings.price / (evaluationRatings.price + evaluationRatings.co2 + evaluationRatings.recycling)\n    });\n  };\n\n  const [alternatives, setAlternatives] = useState([]);\n  const [listDropdownData, setListDropdownData] = useState([]);\n\n  const transformDropdownData = data => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map(item => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"http://localhost:5000/mat?cons_id=\" + selectedConstructionId).then(res => {\n        return res.json();\n      }).then(d => {\n        transformDropdownData(d);\n      });\n    } else {}\n  }, [selectedConstructionId]);\n\n  const handleDropdownChange = event => {\n    setAlternatives(event.target.value);\n  };\n\n  const [topsisData, setTopsisData] = useState([{\n    id: 1,\n    mat_desc: \"Elektrische Zahnbuerste A\",\n    price: 1.9,\n    co2: 0.75,\n    recycling: 0.75\n  }, {\n    id: 2,\n    mat_desc: \"Elektrische Zahnbuerste B\",\n    price: 2.0,\n    co2: 0.8,\n    recycling: 0.9\n  }, {\n    id: 3,\n    mat_desc: \"Elektrische Zahnbuerste C\",\n    price: 1.6,\n    co2: 0.7,\n    recycling: 0.55\n  }, {\n    id: 4,\n    mat_desc: \"Elektrische Zahnbuerste D\",\n    price: 1.2,\n    co2: 0.8,\n    recycling: 0.3\n  }]);\n  const [topsisColumns] = useState([{\n    name: \"id\",\n    title: \"Mat.Nr.\"\n  }, {\n    name: \"mat_desc\",\n    title: \"Mat.Bez.\"\n  }, {\n    name: \"price\",\n    title: \"Preis\"\n  }, {\n    name: \"co2\",\n    title: \"C02-Wert\"\n  }, {\n    name: \"recycling\",\n    title: \"Recyclingwert\"\n  }]);\n  const [selection, setSelection] = useState([]);\n  const [resultData, setResultData] = useState([]);\n  const [tableColumnExtensions] = useState([{\n    columnName: \"id\",\n    width: 100\n  }, {\n    columnName: \"mat_desc\",\n    width: 350\n  }, {\n    columnName: \"price\",\n    width: 150\n  }, {\n    columnName: \"co2\",\n    width: 150\n  }, {\n    columnName: \"recycling\",\n    width: 150\n  }]);\n\n  const compareAlternatives = () => {\n    calcWeights();\n    setWeightsSet(true);\n  };\n\n  useEffect(() => {\n    if (setWeightsSet) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          topsis_data: topsisData,\n          topsis_weights: weights\n        })\n      };\n      fetch(\"http://localhost:5000/topsis\", requestOptions, {\n        mode: \"no-cors\"\n      }).then(res => {\n        res.json();\n        console.log(res);\n      }).then(data => {\n        setResultData(data);\n        setComparisonDone(true);\n        setWeightsSet(false);\n      });\n    } else {}\n  }, [weightsSet]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      marginTop: 25,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      marginTop: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"Recyclingwert\"), /*#__PURE__*/React.createElement(StyledRating, {\n    name: \"recycling\",\n    value: evaluationRatings.recycling,\n    max: 10,\n    onChange: (event, newValue) => {\n      setEvaluationRatings({ ...evaluationRatings,\n        [\"recycling\"]: newValue\n      });\n    },\n    icon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, \"Preis\"), /*#__PURE__*/React.createElement(StyledRating, {\n    name: \"price\",\n    value: evaluationRatings.price,\n    max: 10,\n    onChange: (event, newValue) => {\n      setEvaluationRatings({ ...evaluationRatings,\n        [\"price\"]: newValue\n      });\n    },\n    icon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"CO2-Wert\"), /*#__PURE__*/React.createElement(StyledRating, {\n    name: \"co2\",\n    value: evaluationRatings.co2,\n    max: 10,\n    onChange: (event, newValue) => {\n      setEvaluationRatings({ ...evaluationRatings,\n        [\"co2\"]: newValue\n      });\n    },\n    icon: /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n      fontSize: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      marginTop: 25,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root_card,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, \"Gewichtung Recyclingwert\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }, Number(evaluationRatings.recycling * 100 / (evaluationRatings.price + evaluationRatings.co2 + evaluationRatings.recycling)).toFixed(2), \" \", \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Card, {\n    className: classes.root_card,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 19\n    }\n  }, \"Gewichtung Preis\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 19\n    }\n  }, Number(evaluationRatings.price * 100 / (evaluationRatings.price + evaluationRatings.co2 + evaluationRatings.recycling)).toFixed(2), \" \", \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root_card,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 19\n    }\n  }, \"Gewichtung C02-Wert\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 19\n    }\n  }, Number(evaluationRatings.co2 * 100 / (evaluationRatings.price + evaluationRatings.co2 + evaluationRatings.recycling)).toFixed(2), \" \", \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      marginTop: 25,\n      marginLeft: 50,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xd: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }, \"Bitte w\\xE4hlen Sie zwei oder mehr St\\xFCcklisten aus.\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-mutiple-checkbox-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 19\n    }\n  }, \"St\\xFCcklisten\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-checkbox-label\",\n    id: \"demo-mutiple-checkbox\",\n    multiple: true,\n    value: alternatives,\n    onChange: handleDropdownChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 28\n      }\n    }),\n    renderValue: selected => selected.join(\", \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 19\n    }\n  }, listDropdownData.map(name => /*#__PURE__*/React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: alternatives.indexOf(name) > -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    xd: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: () => {\n      compareAlternatives();\n      console.log(weights);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, \"Vergleich durchf\\xFChren\"), /*#__PURE__*/React.createElement(Grid, {\n    xd: 3,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    variant: \"outlined\",\n    onClick: () => {\n      console.log(resultData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 19\n    }\n  }, \"Print Ergebnis\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      marginLeft: 25,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridDevExpress, {\n    rows: topsisData,\n    columns: topsisColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectionState, {\n    selection: selection,\n    onSelectionChange: setSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SortingState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IntegratedSorting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columnExtensions: tableColumnExtensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableSelection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableColumnVisibility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableHeaderRow, {\n    showSortingControls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Comparison;","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/views/Main/Comparison.jsx"],"names":["React","useEffect","useContext","useState","MainContext","makeStyles","withStyles","Rating","Typography","Box","FiberManualRecordIcon","Grid","Button","Card","CardContent","Checkbox","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","SelectionState","IntegratedSorting","SortingState","GridDevExpress","Table","TableSelection","TableColumnVisibility","TableHeaderRow","Toolbar","useStyles","theme","root","margin","spacing","width","buttons","borderColor","color","textTransform","height","textfield","padding","background","title","fontSize","card_div","marginBottom","formControl","minWidth","root_card","marginLeft","marginRight","marginTop","StyledRating","iconFilled","iconHover","Comparison","classes","selected_construction_id","selected_construction_title","selectedConstructionId","setSelectedConstructionId","selectedConstructionTitle","setSelectedConstructionTitle","weightsSet","setWeightsSet","comparisionDone","setComparisonDone","evaluationRatings","setEvaluationRatings","recycling","co2","price","weights","setWeights","calcWeights","alternatives","setAlternatives","listDropdownData","setListDropdownData","transformDropdownData","data","length","source","map","item","id","mat_desc","fetch","then","res","json","d","handleDropdownChange","event","target","value","topsisData","setTopsisData","topsisColumns","name","selection","setSelection","resultData","setResultData","tableColumnExtensions","columnName","compareAlternatives","requestOptions","method","headers","Accept","body","JSON","stringify","topsis_data","topsis_weights","mode","console","log","textAlign","newValue","Number","toFixed","selected","join","indexOf"],"mappings":"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","sourcesContent":["// author: topr\n// last updated: 11.11.2020\n// currently used: yes\n// description: includes topsis method\n\nimport React from \"react\";\nimport { useEffect, useContext, useState } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\n\n//Devexpress\nimport {\n  SelectionState,\n  IntegratedSorting,\n  SortingState,\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid as GridDevExpress,\n  Table,\n  TableSelection,\n  TableColumnVisibility,\n  TableHeaderRow,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120,\n  },\n  textfield: { margin: 0, padding: 0, background: \"white\" },\n  title: {\n    fontSize: 13,\n  },\n  card_div: {\n    marginBottom: 15,\n  },\n  formControl: {\n    minWidth: 325,\n  },\n  root_card: {\n    marginLeft: 50,\n    marginRight: 50,\n    marginTop: 20,\n    marginBottom: 20,\n    height: 100,\n    width: 200,\n  },\n}));\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: \"#005000\",\n  },\n  iconHover: {\n    color: \"#005000\",\n  },\n})(Rating);\n\nconst Comparison = () => {\n  const classes = useStyles();\n\n  const { selected_construction_id, selected_construction_title } = useContext(\n    MainContext\n  );\n\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n\n  const [weightsSet, setWeightsSet] = useState(false);\n  const [comparisionDone, setComparisonDone] = useState(false);\n\n  const [evaluationRatings, setEvaluationRatings] = useState({\n    recycling: 2,\n    co2: 2,\n    price: 2,\n  });\n\n  const [weights, setWeights] = useState({\n    price: 0.33,\n    co2: 0.33,\n    recycling: 0.33,\n  });\n\n  const calcWeights = () => {\n    setWeights({\n      ...weights,\n      [\"recycling\"]:\n        evaluationRatings.recycling /\n        (evaluationRatings.price +\n          evaluationRatings.co2 +\n          evaluationRatings.recycling),\n      [\"co2\"]:\n        evaluationRatings.co2 /\n        (evaluationRatings.price +\n          evaluationRatings.co2 +\n          evaluationRatings.recycling),\n      [\"price\"]:\n        evaluationRatings.price /\n        (evaluationRatings.price +\n          evaluationRatings.co2 +\n          evaluationRatings.recycling),\n    });\n  };\n\n  const [alternatives, setAlternatives] = useState([]);\n  const [listDropdownData, setListDropdownData] = useState([]);\n\n  const transformDropdownData = (data) => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map((item) => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"http://localhost:5000/mat?cons_id=\" + selectedConstructionId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          transformDropdownData(d);\n        });\n    } else {\n    }\n  }, [selectedConstructionId]);\n\n  const handleDropdownChange = (event) => {\n    setAlternatives(event.target.value);\n  };\n\n  const [topsisData, setTopsisData] = useState([\n    {\n      id: 1,\n      mat_desc: \"Elektrische Zahnbuerste A\",\n      price: 1.9,\n      co2: 0.75,\n      recycling: 0.75,\n    },\n    {\n      id: 2,\n      mat_desc: \"Elektrische Zahnbuerste B\",\n      price: 2.0,\n      co2: 0.8,\n      recycling: 0.9,\n    },\n    {\n      id: 3,\n      mat_desc: \"Elektrische Zahnbuerste C\",\n      price: 1.6,\n      co2: 0.7,\n      recycling: 0.55,\n    },\n    {\n      id: 4,\n      mat_desc: \"Elektrische Zahnbuerste D\",\n      price: 1.2,\n      co2: 0.8,\n      recycling: 0.3,\n    },\n  ]);\n\n  const [topsisColumns] = useState([\n    { name: \"id\", title: \"Mat.Nr.\" },\n    { name: \"mat_desc\", title: \"Mat.Bez.\" },\n    { name: \"price\", title: \"Preis\" },\n    { name: \"co2\", title: \"C02-Wert\" },\n    { name: \"recycling\", title: \"Recyclingwert\" },\n  ]);\n\n  const [selection, setSelection] = useState([]);\n  const [resultData, setResultData] = useState([]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"id\", width: 100 },\n    { columnName: \"mat_desc\", width: 350 },\n    { columnName: \"price\", width: 150 },\n    { columnName: \"co2\", width: 150 },\n    { columnName: \"recycling\", width: 150 },\n  ]);\n\n  const compareAlternatives = () => {\n    calcWeights();\n    setWeightsSet(true);\n  };\n\n  useEffect(() => {\n    if (setWeightsSet) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          topsis_data: topsisData,\n          topsis_weights: weights,\n        }),\n      };\n      fetch(\"http://localhost:5000/topsis\", requestOptions, { mode: \"no-cors\" })\n        .then((res) => {\n          res.json();\n          console.log(res);\n        })\n        .then((data) => {\n          setResultData(data);\n          setComparisonDone(true);\n          setWeightsSet(false);\n        });\n    } else {\n    }\n  }, [weightsSet]);\n\n  return (\n    <div>\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          marginTop: 25,\n          textAlign: \"center\",\n        }}\n      >\n        <Grid item xs={4} style={{ marginTop: 30 }}>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">Recyclingwert</Typography>\n            <StyledRating\n              name=\"recycling\"\n              value={evaluationRatings.recycling}\n              max={10}\n              onChange={(event, newValue) => {\n                setEvaluationRatings({\n                  ...evaluationRatings,\n                  [\"recycling\"]: newValue,\n                });\n              }}\n              icon={<FiberManualRecordIcon fontSize=\"inherit\" />}\n            />\n          </Box>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">Preis</Typography>\n            <StyledRating\n              name=\"price\"\n              value={evaluationRatings.price}\n              max={10}\n              onChange={(event, newValue) => {\n                setEvaluationRatings({\n                  ...evaluationRatings,\n                  [\"price\"]: newValue,\n                });\n              }}\n              icon={<FiberManualRecordIcon fontSize=\"inherit\" />}\n            />\n          </Box>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">CO2-Wert</Typography>\n            <StyledRating\n              name=\"co2\"\n              value={evaluationRatings.co2}\n              max={10}\n              onChange={(event, newValue) => {\n                setEvaluationRatings({\n                  ...evaluationRatings,\n                  [\"co2\"]: newValue,\n                });\n              }}\n              icon={<FiberManualRecordIcon fontSize=\"inherit\" />}\n            />\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <Grid\n            container\n            item\n            xs={12}\n            style={{\n              marginTop: 25,\n              textAlign: \"center\",\n            }}\n          >\n            <Grid item xs={4}>\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Gewichtung Recyclingwert\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {Number(\n                      (evaluationRatings.recycling * 100) /\n                        (evaluationRatings.price +\n                          evaluationRatings.co2 +\n                          evaluationRatings.recycling)\n                    ).toFixed(2)}{\" \"}\n                    %\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              {\" \"}\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Gewichtung Preis\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {Number(\n                      (evaluationRatings.price * 100) /\n                        (evaluationRatings.price +\n                          evaluationRatings.co2 +\n                          evaluationRatings.recycling)\n                    ).toFixed(2)}{\" \"}\n                    %\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card className={classes.root_card} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                    align=\"center\"\n                  >\n                    Gewichtung C02-Wert\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\n                    {Number(\n                      (evaluationRatings.co2 * 100) /\n                        (evaluationRatings.price +\n                          evaluationRatings.co2 +\n                          evaluationRatings.recycling)\n                    ).toFixed(2)}{\" \"}\n                    %\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid\n              container\n              item\n              xs={12}\n              style={{\n                marginTop: 25,\n                marginLeft: 50,\n                textAlign: \"left\",\n              }}\n            >\n              <Grid xd={6}>\n                <Typography>\n                  Bitte wählen Sie zwei oder mehr Stücklisten aus.\n                </Typography>\n                <FormControl className={classes.formControl}>\n                  <InputLabel id=\"demo-mutiple-checkbox-label\">\n                    Stücklisten\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-mutiple-checkbox-label\"\n                    id=\"demo-mutiple-checkbox\"\n                    multiple\n                    value={alternatives}\n                    onChange={handleDropdownChange}\n                    input={<Input />}\n                    renderValue={(selected) => selected.join(\", \")}\n                  >\n                    {listDropdownData.map((name) => (\n                      <MenuItem key={name} value={name}>\n                        <Checkbox checked={alternatives.indexOf(name) > -1} />\n                        <ListItemText primary={name} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                xd={3}\n                style={{\n                  textAlign: \"right\",\n                }}\n              >\n                <Button\n                  className={classes.buttons}\n                  onClick={() => {\n                    compareAlternatives();\n                    console.log(weights);\n                  }}\n                >\n                  Vergleich durchführen\n                </Button>\n                <Grid\n                  xd={3}\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                >\n                  <Button\n                    className={classes.buttons}\n                    variant=\"outlined\"\n                    onClick={() => {\n                      console.log(resultData);\n                    }}\n                  >\n                    Print Ergebnis\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          marginLeft: 25,\n          textAlign: \"center\",\n        }}\n      >\n        <GridDevExpress rows={topsisData} columns={topsisColumns}>\n          <SelectionState\n            selection={selection}\n            onSelectionChange={setSelection}\n          />\n          <SortingState />\n          <IntegratedSorting />\n          <Table columnExtensions={tableColumnExtensions} />\n          <TableSelection />\n          <TableColumnVisibility />\n          <Toolbar />\n          <TableHeaderRow showSortingControls />\n        </GridDevExpress>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Comparison;\n"]},"metadata":{},"sourceType":"module"}