{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/views/Main/MainContext.jsx\";\nimport React, { createContext, useState } from \"react\";\nexport const MainContext = createContext();\nexport const MainProvider = props => {\n  const [orga_id, setOrgaId] = useState(1);\n  const [selected_construction_id, setSelectedConstructionId] = useState([]);\n  const [selected_construction_title, setSelectedConstructionTitle] = useState(\"Bitte auswaehlen\");\n  const [selected_material, setSelectedMaterial] = useState();\n  const [delete_material, setDeleteMaterial] = useState();\n  const [parent_material, setParentMaterial] = useState();\n  const [new_material, setNewMaterial] = useState({\n    mat_desc: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"\",\n    weight: \"\",\n    weight_unit: \"\",\n    volume: \"\",\n    volume_unit: \"\"\n  });\n  const [new_construction, setNewConstruction] = useState({\n    cons_title: \"\",\n    cons_desc: \"\",\n    orga_id: orga_id,\n    del_kz: 0\n  });\n  const [add_component_open, setAddComponentOpen] = useState(false);\n  const [delete_component_open, setDeleteComponentOpen] = useState(false);\n  const [add_bom_open, setAddBomOpen] = useState(false);\n  const [bom_updated, setBomUpdated] = useState(false);\n  const [child_updated, setChildUpdated] = useState(false);\n  const [add_plast_open, setAddPlastOpen] = useState(false);\n  const [evaluation_open, setEvaluationOpen] = useState(false);\n  const [data_backend, setDataBackend] = useState([]);\n  const [highest_level_id, setHighestLevelId] = useState();\n  const [add_construction_open, setAddConstructionOpen] = useState(false);\n  const [constructions_updated, setConstructionsUpdated] = useState(false);\n  const [delete_construction_open, setDeleteConstructionOpen] = useState(false);\n  const [delete_construction, setDeleteConstruction] = useState();\n  const [new_bom_created, setNewBomCreated] = useState(false);\n  const [add_component_mode, setComponentMode] = useState(\"\");\n  const [active_step, setActiveStep] = useState(0);\n  const [selection_atomic, setSelectionAtomic] = useState([]);\n  const [material_created, setMaterialCreated] = useState(false);\n  const [csv_upload_open, setCsvUploadOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(MainContext.Provider, {\n    value: {\n      selected_construction_id: [selected_construction_id, setSelectedConstructionId],\n      selected_construction_title: [selected_construction_title, setSelectedConstructionTitle],\n      selected_material: [selected_material, setSelectedMaterial],\n      parent_material: [parent_material, setParentMaterial],\n      delete_material: [delete_material, setDeleteMaterial],\n      new_material: [new_material, setNewMaterial],\n      add_component_open: [add_component_open, setAddComponentOpen],\n      delete_component_open: [delete_component_open, setDeleteComponentOpen],\n      add_bom_open: [add_bom_open, setAddBomOpen],\n      orga_id: [orga_id, setOrgaId],\n      bom_updated: [bom_updated, setBomUpdated],\n      child_updated: [child_updated, setChildUpdated],\n      add_plast_open: [add_plast_open, setAddPlastOpen],\n      evaluation_open: [evaluation_open, setEvaluationOpen],\n      data_backend: [data_backend, setDataBackend],\n      highest_level_id: [highest_level_id, setHighestLevelId],\n      add_construction_open: [add_construction_open, setAddConstructionOpen],\n      constructions_updated: [constructions_updated, setConstructionsUpdated],\n      new_construction: [new_construction, setNewConstruction],\n      delete_construction: [delete_construction, setDeleteConstruction],\n      delete_construction_open: [delete_construction_open, setDeleteConstructionOpen],\n      new_bom_created: [new_bom_created, setNewBomCreated],\n      add_component_mode: [add_component_mode, setComponentMode],\n      active_step: [active_step, setActiveStep],\n      selection_atomic: [selection_atomic, setSelectionAtomic],\n      material_created: [material_created, setMaterialCreated],\n      csv_upload_open: [csv_upload_open, setCsvUploadOpen]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/views/Main/MainContext.jsx"],"names":["React","createContext","useState","MainContext","MainProvider","props","orga_id","setOrgaId","selected_construction_id","setSelectedConstructionId","selected_construction_title","setSelectedConstructionTitle","selected_material","setSelectedMaterial","delete_material","setDeleteMaterial","parent_material","setParentMaterial","new_material","setNewMaterial","mat_desc","mat_id_int","cad_id","mara_plast_id","mat_rw","height","width","depth","unit","weight","weight_unit","volume","volume_unit","new_construction","setNewConstruction","cons_title","cons_desc","del_kz","add_component_open","setAddComponentOpen","delete_component_open","setDeleteComponentOpen","add_bom_open","setAddBomOpen","bom_updated","setBomUpdated","child_updated","setChildUpdated","add_plast_open","setAddPlastOpen","evaluation_open","setEvaluationOpen","data_backend","setDataBackend","highest_level_id","setHighestLevelId","add_construction_open","setAddConstructionOpen","constructions_updated","setConstructionsUpdated","delete_construction_open","setDeleteConstructionOpen","delete_construction","setDeleteConstruction","new_bom_created","setNewBomCreated","add_component_mode","setComponentMode","active_step","setActiveStep","selection_atomic","setSelectionAtomic","material_created","setMaterialCreated","csv_upload_open","setCsvUploadOpen","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;AAEP,OAAO,MAAMG,YAAY,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBL,QAAQ,CAAC,CAAD,CAArC;AACA,QAAM,CAACM,wBAAD,EAA2BC,yBAA3B,IAAwDP,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACQ,2BAAD,EAA8BC,4BAA9B,IAA8DT,QAAQ,CAC1E,kBAD0E,CAA5E;AAGA,QAAM,CAACU,iBAAD,EAAoBC,mBAApB,IAA2CX,QAAQ,EAAzD;AACA,QAAM,CAACY,eAAD,EAAkBC,iBAAlB,IAAuCb,QAAQ,EAArD;AACA,QAAM,CAACc,eAAD,EAAkBC,iBAAlB,IAAuCf,QAAQ,EAArD;AACA,QAAM,CAACgB,YAAD,EAAeC,cAAf,IAAiCjB,QAAQ,CAAC;AAC9CkB,IAAAA,QAAQ,EAAE,EADoC;AAE9CC,IAAAA,UAAU,EAAE,EAFkC;AAG9CC,IAAAA,MAAM,EAAE,EAHsC;AAI9CC,IAAAA,aAAa,EAAE,EAJ+B;AAK9CC,IAAAA,MAAM,EAAE,EALsC;AAM9CC,IAAAA,MAAM,EAAE,EANsC;AAO9CC,IAAAA,KAAK,EAAE,EAPuC;AAQ9CC,IAAAA,KAAK,EAAE,EARuC;AAS9CC,IAAAA,IAAI,EAAE,EATwC;AAU9CC,IAAAA,MAAM,EAAE,EAVsC;AAW9CC,IAAAA,WAAW,EAAE,EAXiC;AAY9CC,IAAAA,MAAM,EAAE,EAZsC;AAa9CC,IAAAA,WAAW,EAAE;AAbiC,GAAD,CAA/C;AAeA,QAAM,CAACC,gBAAD,EAAmBC,kBAAnB,IAAyChC,QAAQ,CAAC;AACtDiC,IAAAA,UAAU,EAAE,EAD0C;AAEtDC,IAAAA,SAAS,EAAE,EAF2C;AAGtD9B,IAAAA,OAAO,EAAEA,OAH6C;AAItD+B,IAAAA,MAAM,EAAE;AAJ8C,GAAD,CAAvD;AAMA,QAAM,CAACC,kBAAD,EAAqBC,mBAArB,IAA4CrC,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACsC,qBAAD,EAAwBC,sBAAxB,IAAkDvC,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACwC,YAAD,EAAeC,aAAf,IAAgCzC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC0C,WAAD,EAAcC,aAAd,IAA+B3C,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAAC4C,aAAD,EAAgBC,eAAhB,IAAmC7C,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM,CAAC8C,cAAD,EAAiBC,eAAjB,IAAoC/C,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACgD,eAAD,EAAkBC,iBAAlB,IAAuCjD,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACkD,YAAD,EAAeC,cAAf,IAAiCnD,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACoD,gBAAD,EAAmBC,iBAAnB,IAAwCrD,QAAQ,EAAtD;AACA,QAAM,CAACsD,qBAAD,EAAwBC,sBAAxB,IAAkDvD,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACwD,qBAAD,EAAwBC,uBAAxB,IAAmDzD,QAAQ,CAAC,KAAD,CAAjE;AACA,QAAM,CAAC0D,wBAAD,EAA2BC,yBAA3B,IAAwD3D,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAM,CAAC4D,mBAAD,EAAsBC,qBAAtB,IAA+C7D,QAAQ,EAA7D;AACA,QAAM,CAAC8D,eAAD,EAAkBC,gBAAlB,IAAsC/D,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACgE,kBAAD,EAAqBC,gBAArB,IAAyCjE,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAACkE,WAAD,EAAcC,aAAd,IAA+BnE,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAM,CAACoE,gBAAD,EAAmBC,kBAAnB,IAAyCrE,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAACsE,gBAAD,EAAmBC,kBAAnB,IAAyCvE,QAAQ,CAAC,KAAD,CAAvD;AACA,QAAM,CAACwE,eAAD,EAAkBC,gBAAlB,IAAsCzE,QAAQ,CAAC,KAAD,CAApD;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,wBAAwB,EAAE,CACxBA,wBADwB,EAExBC,yBAFwB,CADrB;AAKLC,MAAAA,2BAA2B,EAAE,CAC3BA,2BAD2B,EAE3BC,4BAF2B,CALxB;AASLC,MAAAA,iBAAiB,EAAE,CAACA,iBAAD,EAAoBC,mBAApB,CATd;AAULG,MAAAA,eAAe,EAAE,CAACA,eAAD,EAAkBC,iBAAlB,CAVZ;AAWLH,MAAAA,eAAe,EAAE,CAACA,eAAD,EAAkBC,iBAAlB,CAXZ;AAYLG,MAAAA,YAAY,EAAE,CAACA,YAAD,EAAeC,cAAf,CAZT;AAaLmB,MAAAA,kBAAkB,EAAE,CAACA,kBAAD,EAAqBC,mBAArB,CAbf;AAcLC,MAAAA,qBAAqB,EAAE,CAACA,qBAAD,EAAwBC,sBAAxB,CAdlB;AAeLC,MAAAA,YAAY,EAAE,CAACA,YAAD,EAAeC,aAAf,CAfT;AAgBLrC,MAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,SAAV,CAhBJ;AAiBLqC,MAAAA,WAAW,EAAE,CAACA,WAAD,EAAcC,aAAd,CAjBR;AAkBLC,MAAAA,aAAa,EAAE,CAACA,aAAD,EAAgBC,eAAhB,CAlBV;AAmBLC,MAAAA,cAAc,EAAE,CAACA,cAAD,EAAiBC,eAAjB,CAnBX;AAoBLC,MAAAA,eAAe,EAAE,CAACA,eAAD,EAAkBC,iBAAlB,CApBZ;AAqBLC,MAAAA,YAAY,EAAE,CAACA,YAAD,EAAeC,cAAf,CArBT;AAsBLC,MAAAA,gBAAgB,EAAE,CAACA,gBAAD,EAAmBC,iBAAnB,CAtBb;AAuBLC,MAAAA,qBAAqB,EAAE,CAACA,qBAAD,EAAwBC,sBAAxB,CAvBlB;AAwBLC,MAAAA,qBAAqB,EAAE,CAACA,qBAAD,EAAwBC,uBAAxB,CAxBlB;AAyBL1B,MAAAA,gBAAgB,EAAE,CAACA,gBAAD,EAAmBC,kBAAnB,CAzBb;AA0BL4B,MAAAA,mBAAmB,EAAE,CAACA,mBAAD,EAAsBC,qBAAtB,CA1BhB;AA2BLH,MAAAA,wBAAwB,EAAE,CACxBA,wBADwB,EAExBC,yBAFwB,CA3BrB;AA+BLG,MAAAA,eAAe,EAAE,CAACA,eAAD,EAAkBC,gBAAlB,CA/BZ;AAgCLC,MAAAA,kBAAkB,EAAE,CAACA,kBAAD,EAAqBC,gBAArB,CAhCf;AAiCLC,MAAAA,WAAW,EAAE,CAACA,WAAD,EAAcC,aAAd,CAjCR;AAkCLC,MAAAA,gBAAgB,EAAE,CAACA,gBAAD,EAAmBC,kBAAnB,CAlCb;AAmCLC,MAAAA,gBAAgB,EAAE,CAACA,gBAAD,EAAmBC,kBAAnB,CAnCb;AAoCLC,MAAAA,eAAe,EAAE,CAACA,eAAD,EAAkBC,gBAAlB;AApCZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwCGtE,KAAK,CAACuE,QAxCT,CADF;AA4CD,CA9FM","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const MainContext = createContext();\n\nexport const MainProvider = (props) => {\n  const [orga_id, setOrgaId] = useState(1);\n  const [selected_construction_id, setSelectedConstructionId] = useState([]);\n  const [selected_construction_title, setSelectedConstructionTitle] = useState(\n    \"Bitte auswaehlen\"\n  );\n  const [selected_material, setSelectedMaterial] = useState();\n  const [delete_material, setDeleteMaterial] = useState();\n  const [parent_material, setParentMaterial] = useState();\n  const [new_material, setNewMaterial] = useState({\n    mat_desc: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"\",\n    weight: \"\",\n    weight_unit: \"\",\n    volume: \"\",\n    volume_unit: \"\",\n  });\n  const [new_construction, setNewConstruction] = useState({\n    cons_title: \"\",\n    cons_desc: \"\",\n    orga_id: orga_id,\n    del_kz: 0,\n  });\n  const [add_component_open, setAddComponentOpen] = useState(false);\n  const [delete_component_open, setDeleteComponentOpen] = useState(false);\n  const [add_bom_open, setAddBomOpen] = useState(false);\n  const [bom_updated, setBomUpdated] = useState(false);\n  const [child_updated, setChildUpdated] = useState(false);\n  const [add_plast_open, setAddPlastOpen] = useState(false);\n  const [evaluation_open, setEvaluationOpen] = useState(false);\n  const [data_backend, setDataBackend] = useState([]);\n  const [highest_level_id, setHighestLevelId] = useState();\n  const [add_construction_open, setAddConstructionOpen] = useState(false);\n  const [constructions_updated, setConstructionsUpdated] = useState(false);\n  const [delete_construction_open, setDeleteConstructionOpen] = useState(false);\n  const [delete_construction, setDeleteConstruction] = useState();\n  const [new_bom_created, setNewBomCreated] = useState(false);\n  const [add_component_mode, setComponentMode] = useState(\"\");\n  const [active_step, setActiveStep] = useState(0);\n  const [selection_atomic, setSelectionAtomic] = useState([]);\n  const [material_created, setMaterialCreated] = useState(false);\n  const [csv_upload_open, setCsvUploadOpen] = useState(false);\n\n  return (\n    <MainContext.Provider\n      value={{\n        selected_construction_id: [\n          selected_construction_id,\n          setSelectedConstructionId,\n        ],\n        selected_construction_title: [\n          selected_construction_title,\n          setSelectedConstructionTitle,\n        ],\n        selected_material: [selected_material, setSelectedMaterial],\n        parent_material: [parent_material, setParentMaterial],\n        delete_material: [delete_material, setDeleteMaterial],\n        new_material: [new_material, setNewMaterial],\n        add_component_open: [add_component_open, setAddComponentOpen],\n        delete_component_open: [delete_component_open, setDeleteComponentOpen],\n        add_bom_open: [add_bom_open, setAddBomOpen],\n        orga_id: [orga_id, setOrgaId],\n        bom_updated: [bom_updated, setBomUpdated],\n        child_updated: [child_updated, setChildUpdated],\n        add_plast_open: [add_plast_open, setAddPlastOpen],\n        evaluation_open: [evaluation_open, setEvaluationOpen],\n        data_backend: [data_backend, setDataBackend],\n        highest_level_id: [highest_level_id, setHighestLevelId],\n        add_construction_open: [add_construction_open, setAddConstructionOpen],\n        constructions_updated: [constructions_updated, setConstructionsUpdated],\n        new_construction: [new_construction, setNewConstruction],\n        delete_construction: [delete_construction, setDeleteConstruction],\n        delete_construction_open: [\n          delete_construction_open,\n          setDeleteConstructionOpen,\n        ],\n        new_bom_created: [new_bom_created, setNewBomCreated],\n        add_component_mode: [add_component_mode, setComponentMode],\n        active_step: [active_step, setActiveStep],\n        selection_atomic: [selection_atomic, setSelectionAtomic],\n        material_created: [material_created, setMaterialCreated],\n        csv_upload_open: [csv_upload_open, setCsvUploadOpen],\n      }}\n    >\n      {props.children}\n    </MainContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}