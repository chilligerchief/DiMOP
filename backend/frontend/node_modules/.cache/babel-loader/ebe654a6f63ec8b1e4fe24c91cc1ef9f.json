{"ast":null,"code":"import _slicedToArray from\"/home/adrian/DiMOP/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect,Fragment}from\"react\";import{Button,CircularProgress,Grid,Step,StepLabel,Stepper,Table,TableBody,TableCell,TableHead,TableRow,Typography}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import NavBar from\"../../components/NavBar/NavBar\";import ConstructionLoad from\"./ConstructionLoad\";import variants from\"../../files/constructionVariantsById.json\";import{DataTable}from\"../../components/DataTable/DataTable\";// css theme || use classes.NAME\nvar useStyles=makeStyles(function(theme){return{};});// build construction view\nexport default function Construction(){// standard import for using styles\nvar classes=useStyles();// const theme = useTheme();\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),constructionLoadedId=_useState2[0],setConstructionLoadedId=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loadDialogOpen=_useState4[0],setLoadDialogOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];useEffect(function(){//fetch data\n// fetch(\"constructionById/constructionLoadedId\").then(res => res.json()).then(res => {\n//     setData(res)\n//     setLoading(false)\n// })\nconsole.log(\"use effect\");},[constructionLoadedId]);// get managed states from context\n// const {\n//     open_load_cons,\n//     content_num,\n// } = useContext(ConstructionContext);\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(NavBar,null))),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Stepper,{activeStep:\"1\"},/*#__PURE__*/React.createElement(Step,{key:\"1\"},/*#__PURE__*/React.createElement(StepLabel,null,\"Konstruktion laden\")),/*#__PURE__*/React.createElement(Step,{key:\"2\"},/*#__PURE__*/React.createElement(StepLabel,null,\"Varianten vergleichen\"))))),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3,justify:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true},constructionLoadedId?/*#__PURE__*/React.createElement(Fragment,null,isLoading?/*#__PURE__*/React.createElement(CircularProgress,null):/*#__PURE__*/React.createElement(DataTable,{data:variants.data,columns:variants.columns,rowClick:function rowClick(){return console.log(\"asd\");}})):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h1\",align:\"center\"},\"Laden Sie eine Konstruktion\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return setLoadDialogOpen(true);}},\"Konstruktion ausw\\xE4hlen\")))),/*#__PURE__*/React.createElement(ConstructionLoad,{open:loadDialogOpen,setOpen:setLoadDialogOpen,setConstructionLoadedId:setConstructionLoadedId}));}","map":{"version":3,"sources":["/home/adrian/DiMOP/backend/frontend/src/views/Construction/Construction.jsx"],"names":["React","useContext","useState","useEffect","Fragment","Button","CircularProgress","Grid","Step","StepLabel","Stepper","Table","TableBody","TableCell","TableHead","TableRow","Typography","makeStyles","NavBar","ConstructionLoad","variants","DataTable","useStyles","theme","Construction","classes","constructionLoadedId","setConstructionLoadedId","loadDialogOpen","setLoadDialogOpen","isLoading","setIsLoading","console","log","data","columns"],"mappings":"sHAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,CAAiDC,QAAjD,KAAiE,OAAjE,CAEA,OACIC,MADJ,CAEIC,gBAFJ,CAGIC,IAHJ,CAIIC,IAJJ,CAKIC,SALJ,CAMIC,OANJ,CAOIC,KAPJ,CAQIC,SARJ,CASIC,SATJ,CAUIC,SAVJ,CAWIC,QAXJ,CAYIC,UAZJ,KAaO,mBAbP,CAcA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,QAAP,KAAqB,2CAArB,CACA,OAASC,SAAT,KAA0B,sCAA1B,CAEA;AACA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAAC,SAACM,KAAD,QAAY,EAAZ,EAAD,CAA5B,CAEA;AACA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACnC;AACA,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA;AAHmC,cAKqBpB,QAAQ,CAAC,IAAD,CAL7B,wCAK5BwB,oBAL4B,eAKNC,uBALM,8BAMSzB,QAAQ,CAAC,KAAD,CANjB,yCAM5B0B,cAN4B,eAMZC,iBANY,8BAOD3B,QAAQ,CAAC,KAAD,CAPP,yCAO5B4B,SAP4B,eAOjBC,YAPiB,eASnC5B,SAAS,CAAC,UAAM,CACZ;AACA;AACA;AACA;AACA;AACA6B,OAAO,CAACC,GAAR,CAAY,YAAZ,EACH,CAPQ,CAON,CAACP,oBAAD,CAPM,CAAT,CASA;AACA;AACA;AACA;AACA;AAEA,mBACI,4CACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACI,oBAAC,MAAD,MADJ,CADJ,CADJ,cAOI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,OAAO,CAAC,QAApC,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,eACI,oBAAC,OAAD,EAAS,UAAU,CAAC,GAApB,eACI,oBAAC,IAAD,EAAM,GAAG,CAAC,GAAV,eACI,oBAAC,SAAD,2BADJ,CADJ,cAII,oBAAC,IAAD,EAAM,GAAG,CAAC,GAAV,eACI,oBAAC,SAAD,8BADJ,CAJJ,CADJ,CADJ,CAPJ,cAmBI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CAA4B,OAAO,CAAC,QAApC,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,EACKA,oBAAoB,cACjB,oBAAC,QAAD,MACKI,SAAS,cACN,oBAAC,gBAAD,MADM,cAGN,oBAAC,SAAD,EACI,IAAI,CAAEV,QAAQ,CAACc,IADnB,CAEI,OAAO,CAAEd,QAAQ,CAACe,OAFtB,CAGI,QAAQ,CAAE,0BAAMH,CAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN,EAHd,EAJR,CADiB,cAajB,oBAAC,QAAD,mBACI,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,KAAK,CAAC,QAA/B,gCADJ,cAII,oBAAC,MAAD,EAAQ,OAAO,CAAE,yBAAMJ,CAAAA,iBAAiB,CAAC,IAAD,CAAvB,EAAjB,8BAJJ,CAdR,CADJ,CAnBJ,cA+CI,oBAAC,gBAAD,EACI,IAAI,CAAED,cADV,CAEI,OAAO,CAAEC,iBAFb,CAGI,uBAAuB,CAAEF,uBAH7B,EA/CJ,CADJ,CAuDH","sourcesContent":["import React, { useContext, useState, useEffect, Fragment } from \"react\";\n\nimport {\n    Button,\n    CircularProgress,\n    Grid,\n    Step,\n    StepLabel,\n    Stepper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport NavBar from \"../../components/NavBar/NavBar\";\n\nimport ConstructionLoad from \"./ConstructionLoad\";\nimport variants from \"../../files/constructionVariantsById.json\";\nimport { DataTable } from \"../../components/DataTable/DataTable\";\n\n// css theme || use classes.NAME\nconst useStyles = makeStyles((theme) => ({}));\n\n// build construction view\nexport default function Construction() {\n    // standard import for using styles\n    const classes = useStyles();\n    // const theme = useTheme();\n\n    const [constructionLoadedId, setConstructionLoadedId] = useState(null);\n    const [loadDialogOpen, setLoadDialogOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        //fetch data\n        // fetch(\"constructionById/constructionLoadedId\").then(res => res.json()).then(res => {\n        //     setData(res)\n        //     setLoading(false)\n        // })\n        console.log(\"use effect\");\n    }, [constructionLoadedId]);\n\n    // get managed states from context\n    // const {\n    //     open_load_cons,\n    //     content_num,\n    // } = useContext(ConstructionContext);\n\n    return (\n        <div>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <NavBar></NavBar>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item>\n                    <Stepper activeStep=\"1\">\n                        <Step key=\"1\">\n                            <StepLabel>Konstruktion laden</StepLabel>\n                        </Step>\n                        <Step key=\"2\">\n                            <StepLabel>Varianten vergleichen</StepLabel>\n                        </Step>\n                    </Stepper>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item>\n                    {constructionLoadedId ? (\n                        <Fragment>\n                            {isLoading ? (\n                                <CircularProgress />\n                            ) : (\n                                <DataTable\n                                    data={variants.data}\n                                    columns={variants.columns}\n                                    rowClick={() => console.log(\"asd\")}\n                                />\n                            )}\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            <Typography variant=\"h1\" align=\"center\">\n                                Laden Sie eine Konstruktion\n                            </Typography>\n                            <Button onClick={() => setLoadDialogOpen(true)}>\n                                Konstruktion ausw√§hlen\n                            </Button>\n                        </Fragment>\n                    )}\n                </Grid>\n            </Grid>\n\n            {/* Dialogs */}\n            <ConstructionLoad\n                open={loadDialogOpen}\n                setOpen={setLoadDialogOpen}\n                setConstructionLoadedId={setConstructionLoadedId}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}