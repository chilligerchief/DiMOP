{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/views/Main/AddBomDialog.jsx\";\nimport React from \"react\";\nimport { useContext, useState, useEffect } from \"react\"; // Component\n\nimport { MainContext } from \"./MainContext.jsx\"; // Material UI\n\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport CreateIcon from \"@material-ui/icons/Create\"; // css theme\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120\n  }\n}));\n\nconst AddBomDialog = () => {\n  const classes = useStyles();\n  const {\n    add_bom_open,\n    orga_id,\n    selected_construction_id,\n    new_bom_created\n  } = useContext(MainContext);\n  const [addBomOpen, setAddBomOpen] = add_bom_open;\n  const [orgaId, setOrgaId] = orga_id;\n  const [selectedConstructionId, setSelectedConstructionId] = selected_construction_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n\n  const handleClickBomOpen = () => {\n    setAddBomOpen(true);\n  };\n\n  const handleClickBomClose = () => {\n    setAddBomOpen(false);\n  };\n\n  const [newBom, setNewBom] = useState({\n    mat_desc: \"\",\n    mat_desc_int: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"mm\",\n    weight: \"\",\n    weight_unit: \"g\",\n    volume: \"\",\n    volume_unit: \"mm^3\"\n  });\n\n  const handleNewBomInputs = event => {\n    setNewBom({ ...newBom,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const [showErrorText1, setShowErrorText1] = useState(false);\n  const [showErrorText2, setShowErrorText2] = useState(false);\n\n  const validateBom = () => {\n    var weightIsFloat = /^\\d+\\.\\d+$/.test(newBom.weight);\n    var weightIsNumeric = /^\\d+$/.test(newBom.weight);\n    var heightIsFloat = /^\\d+\\.\\d+$/.test(newBom.height);\n    var heightIsNumeric = /^\\d+$/.test(newBom.height);\n    var widthIsFloat = /^\\d+\\.\\d+$/.test(newBom.width);\n    var widthIsNumeric = /^\\d+$/.test(newBom.width);\n    var depthIsFloat = /^\\d+\\.\\d+$/.test(newBom.depth);\n    var depthIsNumeric = /^\\d+$/.test(newBom.depth);\n    var volumeIsFloat = /^\\d+\\.\\d+$/.test(newBom.volume);\n    var volumeIsNumeric = /^\\d+$/.test(newBom.volume);\n\n    if (newBom.mat_desc == \"\" || newBom.weight == \"\") {\n      setShowErrorText1(true);\n    } else if (!weightIsFloat && !weightIsNumeric || newBom.height != \"\" && !heightIsFloat && !heightIsNumeric || newBom.width != \"\" && !widthIsFloat && !widthIsNumeric || newBom.depth != \"\" && !depthIsFloat && !depthIsNumeric || newBom.volume != \"\" && !volumeIsFloat && !volumeIsNumeric) {\n      setShowErrorText2(true);\n    } else {\n      setShowErrorText1(false);\n      setShowErrorText2(false);\n      addBom();\n      handleClickBomClose();\n    }\n  };\n\n  const addBom = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        mat_desc: newBom.mat_desc,\n        mat_desc_int: newBom.mat_desc_int,\n        mat_id_int: newBom.mat_id_int,\n        cad_id: newBom.cad_id,\n        mara_plast_id: parseInt(newBom.mara_plast_id),\n        mat_rw: parseFloat(newBom.mat_rw),\n        height: parseFloat(newBom.height),\n        width: parseFloat(newBom.width),\n        depth: parseFloat(newBom.depth),\n        unit: newBom.unit,\n        weight: parseFloat(newBom.weight),\n        weight_unit: newBom.weight_unit,\n        volume: parseFloat(newBom.volume),\n        volume_unit: newBom.volume_unit,\n        is_atomic: 0,\n        orga_id: orgaId,\n        cons_id: selectedConstructionId,\n        del_kz: 0\n      }),\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:5000/mat\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n    setNewBomCreated(!newBomCreated);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: handleClickBomOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CreateIcon, {\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), \"Erstellen\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: addBomOpen,\n    onClose: handleClickBomClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n    style: {\n      color: \"#005000\"\n    },\n    onClick: handleClickBomClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"Neue St\\xFCckliste erstellen\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText1,\n    helperText: showErrorText1 ? \"Bitte f√ºllen Sie dieses Feld aus.\" : \"\",\n    required: true,\n    id: \"mat_desc\",\n    label: \"Mat.Bez.\",\n    value: newBom.mat_desc,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"mat_desc_int\",\n    label: \"ERP Mat.Bez.\",\n    value: newBom.mat_desc_int,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"mat_id_int\",\n    label: \"ERP Mat.Nr.\",\n    value: newBom.mat_id_int,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"cad_id\",\n    label: \"CAD Nr.\",\n    value: newBom.cad_id,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"height\",\n    label: \"H\\xF6he\",\n    value: newBom.height,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"width\",\n    label: \"Breite\",\n    value: newBom.width,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"depth\",\n    label: \"Tiefe\",\n    value: newBom.depth,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"unit\",\n    label: \"Einheit\",\n    value: newBom.unit,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"weight\",\n    label: \"Gewicht\",\n    value: newBom.weight,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    error: showErrorText1,\n    helperText: showErrorText1 ? \"Bitte f√ºllen Sie dieses Feld mit numerischen Werten oder Gleitkommazahlen aus.\" : \"\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"weight_unit\",\n    label: \"G. Einheit\",\n    value: newBom.weight_unit,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"volume\",\n    label: \"Volumen\",\n    value: newBom.volume,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"volume_unit\",\n    label: \"V. Einheit\",\n    value: newBom.volume_unit,\n    onChange: handleNewBomInputs,\n    margin: \"normal\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: handleClickBomClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"Abbrechen\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: validateBom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, \"Erstellen\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default AddBomDialog;","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/views/Main/AddBomDialog.jsx"],"names":["React","useContext","useState","useEffect","MainContext","Button","makeStyles","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Grid","HighlightOffIcon","CreateIcon","useStyles","theme","root","margin","spacing","width","buttons","borderColor","color","textTransform","height","AddBomDialog","classes","add_bom_open","orga_id","selected_construction_id","new_bom_created","addBomOpen","setAddBomOpen","orgaId","setOrgaId","selectedConstructionId","setSelectedConstructionId","newBomCreated","setNewBomCreated","handleClickBomOpen","handleClickBomClose","newBom","setNewBom","mat_desc","mat_desc_int","mat_id_int","cad_id","mara_plast_id","mat_rw","depth","unit","weight","weight_unit","volume","volume_unit","handleNewBomInputs","event","target","id","value","showErrorText1","setShowErrorText1","showErrorText2","setShowErrorText2","validateBom","weightIsFloat","test","weightIsNumeric","heightIsFloat","heightIsNumeric","widthIsFloat","widthIsNumeric","depthIsFloat","depthIsNumeric","volumeIsFloat","volumeIsNumeric","addBom","requestOptions","method","headers","Accept","body","JSON","stringify","parseInt","parseFloat","is_atomic","cons_id","del_kz","redirect","fetch","then","response","text","result","console","log","catch","error","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContext, useState, useEffect } from \"react\";\n\n// Component\nimport { MainContext } from \"./MainContext.jsx\";\n\n// Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport CreateIcon from \"@material-ui/icons/Create\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst AddBomDialog = () => {\n  const classes = useStyles();\n\n  const {\n    add_bom_open,\n    orga_id,\n    selected_construction_id,\n    new_bom_created,\n  } = useContext(MainContext);\n\n  const [addBomOpen, setAddBomOpen] = add_bom_open;\n  const [orgaId, setOrgaId] = orga_id;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n\n  const handleClickBomOpen = () => {\n    setAddBomOpen(true);\n  };\n\n  const handleClickBomClose = () => {\n    setAddBomOpen(false);\n  };\n\n  const [newBom, setNewBom] = useState({\n    mat_desc: \"\",\n    mat_desc_int: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"mm\",\n    weight: \"\",\n    weight_unit: \"g\",\n    volume: \"\",\n    volume_unit: \"mm^3\",\n  });\n\n  const handleNewBomInputs = (event) => {\n    setNewBom({ ...newBom, [event.target.id]: event.target.value });\n  };\n\n  const [showErrorText1, setShowErrorText1] = useState(false);\n  const [showErrorText2, setShowErrorText2] = useState(false);\n\n  const validateBom = () => {\n    var weightIsFloat = /^\\d+\\.\\d+$/.test(newBom.weight);\n    var weightIsNumeric = /^\\d+$/.test(newBom.weight);\n    var heightIsFloat = /^\\d+\\.\\d+$/.test(newBom.height);\n    var heightIsNumeric = /^\\d+$/.test(newBom.height);\n    var widthIsFloat = /^\\d+\\.\\d+$/.test(newBom.width);\n    var widthIsNumeric = /^\\d+$/.test(newBom.width);\n    var depthIsFloat = /^\\d+\\.\\d+$/.test(newBom.depth);\n    var depthIsNumeric = /^\\d+$/.test(newBom.depth);\n    var volumeIsFloat = /^\\d+\\.\\d+$/.test(newBom.volume);\n    var volumeIsNumeric = /^\\d+$/.test(newBom.volume);\n\n    if (newBom.mat_desc == \"\" || newBom.weight == \"\") {\n      setShowErrorText1(true);\n    } else if (\n      (!weightIsFloat && !weightIsNumeric) ||\n      (newBom.height != \"\" && !heightIsFloat && !heightIsNumeric) ||\n      (newBom.width != \"\" && !widthIsFloat && !widthIsNumeric) ||\n      (newBom.depth != \"\" && !depthIsFloat && !depthIsNumeric) ||\n      (newBom.volume != \"\" && !volumeIsFloat && !volumeIsNumeric)\n    ) {\n      setShowErrorText2(true);\n    } else {\n      setShowErrorText1(false);\n      setShowErrorText2(false);\n      addBom();\n      handleClickBomClose();\n    }\n  };\n\n  const addBom = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        mat_desc: newBom.mat_desc,\n        mat_desc_int: newBom.mat_desc_int,\n        mat_id_int: newBom.mat_id_int,\n        cad_id: newBom.cad_id,\n        mara_plast_id: parseInt(newBom.mara_plast_id),\n        mat_rw: parseFloat(newBom.mat_rw),\n        height: parseFloat(newBom.height),\n        width: parseFloat(newBom.width),\n        depth: parseFloat(newBom.depth),\n        unit: newBom.unit,\n        weight: parseFloat(newBom.weight),\n        weight_unit: newBom.weight_unit,\n        volume: parseFloat(newBom.volume),\n        volume_unit: newBom.volume_unit,\n        is_atomic: 0,\n        orga_id: orgaId,\n        cons_id: selectedConstructionId,\n        del_kz: 0,\n      }),\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:5000/mat\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setNewBomCreated(!newBomCreated);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickBomOpen}>\n        <CreateIcon style={{ marginRight: 5 }}></CreateIcon>\n        Erstellen\n      </Button>\n      <Dialog\n        open={addBomOpen}\n        onClose={handleClickBomClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogActions>\n          <HighlightOffIcon\n            style={{ color: \"#005000\" }}\n            onClick={handleClickBomClose}\n          ></HighlightOffIcon>\n        </DialogActions>\n        <DialogTitle id=\"form-dialog-title\">\n          Neue St√ºckliste erstellen\n        </DialogTitle>\n        <DialogContent>\n          <Grid container item xs={12} justify=\"center\">\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <TextField\n                error={showErrorText1}\n                helperText={\n                  showErrorText1 ? \"Bitte f√ºllen Sie dieses Feld aus.\" : \"\"\n                }\n                required\n                id=\"mat_desc\"\n                label=\"Mat.Bez.\"\n                value={newBom.mat_desc}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"mat_desc_int\"\n                label=\"ERP Mat.Bez.\"\n                value={newBom.mat_desc_int}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"mat_id_int\"\n                label=\"ERP Mat.Nr.\"\n                value={newBom.mat_id_int}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"cad_id\"\n                label=\"CAD Nr.\"\n                value={newBom.cad_id}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"height\"\n                label=\"H√∂he\"\n                value={newBom.height}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"width\"\n                label=\"Breite\"\n                value={newBom.width}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"depth\"\n                label=\"Tiefe\"\n                value={newBom.depth}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"unit\"\n                label=\"Einheit\"\n                value={newBom.unit}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                disabled\n              />\n\n              <TextField\n                id=\"weight\"\n                label=\"Gewicht\"\n                value={newBom.weight}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                error={showErrorText1}\n                helperText={\n                  showErrorText1\n                    ? \"Bitte f√ºllen Sie dieses Feld mit numerischen Werten oder Gleitkommazahlen aus.\"\n                    : \"\"\n                }\n                required\n              />\n\n              <TextField\n                id=\"weight_unit\"\n                label=\"G. Einheit\"\n                value={newBom.weight_unit}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                disabled\n              />\n\n              <TextField\n                error={showErrorText2}\n                helperText={\n                  showErrorText2\n                    ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n                    : \"\"\n                }\n                id=\"volume\"\n                label=\"Volumen\"\n                value={newBom.volume}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n              />\n\n              <TextField\n                id=\"volume_unit\"\n                label=\"V. Einheit\"\n                value={newBom.volume_unit}\n                onChange={handleNewBomInputs}\n                margin=\"normal\"\n                disabled\n              />\n            </form>\n          </Grid>\n          <Grid container item xs={12} justify=\"center\">\n            <Grid item xs={4}></Grid>\n            <Grid item xs={2}>\n              {\" \"}\n              <Button className={classes.buttons} onClick={handleClickBomClose}>\n                Abbrechen\n              </Button>\n            </Grid>\n            <Grid item xs={2}>\n              <Button className={classes.buttons} onClick={validateBom}>\n                Erstellen\n              </Button>\n            </Grid>\n            <Grid item xs={4}></Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\nexport default AddBomDialog;\n"]},"metadata":{},"sourceType":"module"}