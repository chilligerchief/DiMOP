{"ast":null,"code":"import _objectWithoutProperties from\"/home/adrian/DiMOP/backend/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{authenticationService}from\"../../services/authenticationService\";export var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:function render(props){var currentUser=authenticationService.currentUserValue;if(!currentUser){// not logged in so redirect to login page with the return url\nreturn/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/login\",state:{from:props.location}}});}// auth success => Return Component\nreturn/*#__PURE__*/React.createElement(Component,props);}}));};","map":{"version":3,"sources":["/home/adrian/DiMOP/backend/frontend/src/components/PrivateRoute/PrivateRoute.jsx"],"names":["React","Route","Redirect","authenticationService","PrivateRoute","Component","component","rest","props","currentUser","currentUserValue","pathname","state","from","location"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CAEA,OAASC,qBAAT,KAAsC,sCAAtC,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAcC,CAAAA,SAAd,MAAGC,SAAH,CAA4BC,IAA5B,iEAC1B,oBAAC,KAAD,kBACMA,IADN,EAEE,MAAM,CAAE,gBAACC,KAAD,CAAW,CACjB,GAAMC,CAAAA,WAAW,CAAGN,qBAAqB,CAACO,gBAA1C,CACA,GAAI,CAACD,WAAL,CAAkB,CAChB;AACA,mBACE,oBAAC,QAAD,EACE,EAAE,CAAE,CAAEE,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,IAAI,CAAEL,KAAK,CAACM,QAAd,CAA7B,CADN,EADF,CAKD,CAED;AACA,mBAAO,oBAAC,SAAD,CAAeN,KAAf,CAAP,CACD,CAfH,GAD0B,EAArB","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { authenticationService } from \"../../services/authenticationService\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      const currentUser = authenticationService.currentUserValue;\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      // auth success => Return Component\n      return <Component {...props} />;\n    }}\n  />\n);\n"]},"metadata":{},"sourceType":"module"}