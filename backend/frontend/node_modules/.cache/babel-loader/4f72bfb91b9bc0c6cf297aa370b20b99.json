{"ast":null,"code":"import{Button,Grid}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import Typography from\"@material-ui/core/Typography\";import React from\"react\";import logo from\"../../assets/img/header_dimop.svg\";import{authenticationService}from\"../../services/authenticationService\";import colors from\"../../variables/colors\";var useStyles=makeStyles(function(theme){return{buttons:{color:\"white\",border:0,\"&:hover\":{backgroundColor:colors.lightGreen,color:colors.primaryGreen}},text:{color:\"white\"},logo:{height:64,padding:16}};});export default function NavBar(){var classes=useStyles();// const { use_API } = useContext(APIContext);\n// const [useAPI, setUseAPI] = use_API;\nvar user=localStorage.getItem(\"currentUser\");return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",style:{// background: useAPI ? \"#007F3D\" : \"red\",\nbackground:\"#007F3D\",marginBottom:16}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(\"a\",{href:\"/construction\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo\",className:classes.logo}))),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(\"a\",{href:\"/construction\"},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",noWrap:true,className:classes.text},\"DIMOP\"))))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"space-evenly\"},user!==null?/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",className:classes.buttons,href:\"/main\"},\"Main\")):\"\",/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",className:classes.buttons,href:\"/home\"},\"Startseite\")),/*#__PURE__*/React.createElement(Grid,{item:true},user!==null?/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",className:classes.buttons,onClick:function onClick(){authenticationService.logout();}},\"Abmelden\"):/*#__PURE__*/React.createElement(Button,{variant:\"outlined\",className:classes.buttons,href:\"/login\"},\"Anmelden\"))))));}","map":{"version":3,"sources":["/home/adrian/DiMOP/backend/frontend/src/components/NavBar/NavBar.jsx"],"names":["Button","Grid","makeStyles","Typography","React","authenticationService","colors","useStyles","theme","buttons","color","border","backgroundColor","lightGreen","primaryGreen","text","logo","height","padding","NavBar","classes","user","localStorage","getItem","background","marginBottom","logout"],"mappings":"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","sourcesContent":["import { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport logo from \"../../assets/img/header_dimop.svg\";\nimport { authenticationService } from \"../../services/authenticationService\";\nimport colors from \"../../variables/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    color: \"white\",\n    border: 0,\n    \"&:hover\": {\n      backgroundColor: colors.lightGreen,\n      color: colors.primaryGreen,\n    },\n  },\n  text: {\n    color: \"white\",\n  },\n  logo: {\n    height: 64,\n    padding: 16,\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n\n  // const { use_API } = useContext(APIContext);\n  // const [useAPI, setUseAPI] = use_API;\n\n  const user = localStorage.getItem(\"currentUser\");\n\n  return (\n    <div>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{\n          // background: useAPI ? \"#007F3D\" : \"red\",\n          background: \"#007F3D\",\n          marginBottom: 16,\n        }}\n      >\n        <Grid item xs={6}>\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n              <a href=\"/construction\">\n                <img src={logo} alt=\"logo\" className={classes.logo}></img>\n              </a>\n            </Grid>\n            <Grid item>\n              <a href=\"/construction\">\n                <Typography variant=\"h6\" noWrap className={classes.text}>\n                  DIMOP\n                </Typography>\n              </a>\n            </Grid>\n\n            {/*}\n            <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.buttons}\n                                href=\"/login\"\n                            >\n                                Registrieren\n                            </Button>\n                        </Grid>\n            <Grid item style={{ marginLeft: 32 }}>\n                            <span>useAPI: </span>\n                            <span>{useAPI ? \"true\" : \"false\"}</span>\n                        </Grid>\n                          */}\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid container spacing={2} justify=\"space-evenly\">\n            {user !== null ? (\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  href=\"/main\"\n                >\n                  Main\n                </Button>\n              </Grid>\n            ) : (\n              \"\"\n            )}\n\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                className={classes.buttons}\n                href=\"/home\"\n              >\n                Startseite\n              </Button>\n            </Grid>\n            <Grid item>\n              {user !== null ? (\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  onClick={() => {\n                    authenticationService.logout();\n                  }}\n                >\n                  Abmelden\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  className={classes.buttons}\n                  href=\"/login\"\n                >\n                  Anmelden\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}