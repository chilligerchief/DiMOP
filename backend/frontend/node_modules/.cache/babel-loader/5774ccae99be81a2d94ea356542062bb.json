{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/views/Main/MaterialFertNew.jsx\";\nimport React, { useContext, useState } from \"react\"; //Components\n\nimport { MainContext } from \"./MainContext.jsx\"; //Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120\n  }\n}));\n\nconst MaterialFertNew = saveItem => {\n  const classes = useStyles();\n  const {\n    add_component_open,\n    selected_construction_id,\n    new_bom_created,\n    orga_id,\n    add_component_mode,\n    active_step,\n    material_created\n  } = useContext(MainContext);\n  const [materialCreated, setMaterialCreated] = material_created;\n  const [activeStep, setActiveStep] = active_step;\n  const [addComponentOpen, setAddComponentOpen] = add_component_open;\n  const [selectedConstructionId, setSelectedConstructionId] = selected_construction_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [orgaId, setOrgaId] = orga_id;\n  const [addComponentMode, setAddComponentMode] = add_component_mode;\n  const [newMaterial, setNewMaterial] = useState({\n    mat_desc: \"\",\n    mat_desc_int: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"mm\",\n    weight: \"\",\n    weight_unit: \"g\",\n    volume: \"\",\n    volume_unit: \"mm^3\"\n  });\n  const [isAtomic, setIsAtomic] = useState(\"1\");\n\n  const handleNewMaterialInputs = event => {\n    setNewMaterial({ ...newMaterial,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const handleRadioChange = event => {\n    setIsAtomic(event.target.value);\n  };\n\n  const [showErrorText1, setShowErrorText1] = useState(false);\n  const [showErrorText2, setShowErrorText2] = useState(false);\n\n  const validateNewMat = () => {\n    var weightIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.weight);\n    var weightIsNumeric = /^\\d+$/.test(newMaterial.weight);\n    var heightIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.height);\n    var heightIsNumeric = /^\\d+$/.test(newMaterial.height);\n    var widthIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.width);\n    var widthIsNumeric = /^\\d+$/.test(newMaterial.width);\n    var depthIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.depth);\n    var depthIsNumeric = /^\\d+$/.test(newMaterial.depth);\n    var volumeIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.volume);\n    var volumeIsNumeric = /^\\d+$/.test(newMaterial.volume);\n\n    if (newMaterial.mat_desc == \"\" || newMaterial.weight == \"\") {\n      setShowErrorText1(true);\n    } else if (!weightIsFloat && !weightIsNumeric || newMaterial.height != \"\" && !heightIsFloat && !heightIsNumeric || newMaterial.width != \"\" && !widthIsFloat && !widthIsNumeric || newMaterial.depth != \"\" && !depthIsFloat && !depthIsNumeric || newMaterial.volume != \"\" && !volumeIsFloat && !volumeIsNumeric) {\n      setShowErrorText2(true);\n    } else {\n      setShowErrorText1(false);\n      setShowErrorText2(false);\n      addMaterial();\n      setMaterialCreated(!materialCreated);\n      setAddComponentMode(\"new\");\n      setActiveStep(2);\n    }\n  };\n\n  const addMaterial = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        mat_desc: newMaterial.mat_desc,\n        mat_desc_int: newMaterial.mat_desc_int,\n        mat_id_int: newMaterial.mat_id_int,\n        cad_id: newMaterial.cad_id,\n        mara_plast_id: parseInt(newMaterial.mara_plast_id),\n        mat_rw: parseFloat(newMaterial.mat_rw),\n        height: parseFloat(newMaterial.height),\n        width: parseFloat(newMaterial.width),\n        depth: parseFloat(newMaterial.depth),\n        unit: newMaterial.unit,\n        weight: parseFloat(newMaterial.weight),\n        weight_unit: newMaterial.weight_unit,\n        volume: parseFloat(newMaterial.volume),\n        volume_unit: newMaterial.volume_unit,\n        is_atomic: parseInt(isAtomic),\n        orga_id: orgaId,\n        cons_id: selectedConstructionId,\n        del_kz: 0\n      }),\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:5000/mat\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\n    setNewBomCreated(!newBomCreated);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText1,\n    helperText: showErrorText1 ? \"Bitte füllen Sie dieses Feld aus.\" : \"\",\n    required: true,\n    id: \"mat_desc\",\n    label: \"Mat.Bez.\",\n    value: newMaterial.mat_desc,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"mat_desc_int\",\n    label: \"ERP Mat.Bez.\",\n    value: newMaterial.mat_desc_int,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"mat_id_int\",\n    label: \"ERP Mat.Nr.\",\n    value: newMaterial.mat_id_int,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"cad_id\",\n    label: \"CAD Nr.\",\n    value: newMaterial.cad_id,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"height\",\n    label: \"H\\xF6he\",\n    value: newMaterial.height,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"width\",\n    label: \"Breite\",\n    value: newMaterial.width,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"depth\",\n    label: \"Tiefe\",\n    value: newMaterial.depth,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"unit\",\n    label: \"Einheit\",\n    value: newMaterial.unit,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"weight\",\n    label: \"Gewicht\",\n    value: newMaterial.weight,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    error: showErrorText1,\n    helperText: showErrorText1 ? \"Bitte füllen Sie dieses Feld mit numerischen Werten oder Gleitkommazahlen aus.\" : \"\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"weight_unit\",\n    label: \"G. Einheit\",\n    value: newMaterial.weight_unit,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: showErrorText2,\n    helperText: showErrorText2 ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\" : \"\",\n    id: \"volume\",\n    label: \"Volumen\",\n    value: newMaterial.volume,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"volume_unit\",\n    label: \"V. Einheit\",\n    value: newMaterial.volume_unit,\n    onChange: handleNewMaterialInputs,\n    margin: \"normal\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, \" \", \"Anlage als St\\xFCckliste?\", /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }\n    }, \"Wird ein Material als St\\xFCckliste angelegt, k\\xF6nnen dem Material Komponenten hinzugef\\xFCgt werden, daf\\xFCr kann kein Rohstoff bzw. Kunststoff zugeordnet werden.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HelpIcon, {\n    style: {\n      marginLeft: 10\n    },\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"atomic\",\n    value: isAtomic,\n    onChange: handleRadioChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"0\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 50\n      }\n    }),\n    label: \"Ja\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"1\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 50\n      }\n    }),\n    label: \"Nein\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: () => {\n      validateNewMat();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, \"Material anlegen\"), materialCreated ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 30\n    }\n  }, \"Neues Material angelegt!\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 68\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default MaterialFertNew;","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/views/Main/MaterialFertNew.jsx"],"names":["React","useContext","useState","MainContext","makeStyles","TextField","Button","Grid","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Tooltip","Typography","HelpIcon","useStyles","theme","root","margin","spacing","width","buttons","borderColor","color","textTransform","height","MaterialFertNew","saveItem","classes","add_component_open","selected_construction_id","new_bom_created","orga_id","add_component_mode","active_step","material_created","materialCreated","setMaterialCreated","activeStep","setActiveStep","addComponentOpen","setAddComponentOpen","selectedConstructionId","setSelectedConstructionId","newBomCreated","setNewBomCreated","orgaId","setOrgaId","addComponentMode","setAddComponentMode","newMaterial","setNewMaterial","mat_desc","mat_desc_int","mat_id_int","cad_id","mara_plast_id","mat_rw","depth","unit","weight","weight_unit","volume","volume_unit","isAtomic","setIsAtomic","handleNewMaterialInputs","event","target","id","value","handleRadioChange","showErrorText1","setShowErrorText1","showErrorText2","setShowErrorText2","validateNewMat","weightIsFloat","test","weightIsNumeric","heightIsFloat","heightIsNumeric","widthIsFloat","widthIsNumeric","depthIsFloat","depthIsNumeric","volumeIsFloat","volumeIsNumeric","addMaterial","requestOptions","method","headers","Accept","body","JSON","stringify","parseInt","parseFloat","is_atomic","cons_id","del_kz","redirect","fetch","then","response","text","result","console","log","catch","error","marginLeft"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 60,\n    width: 120,\n  },\n}));\n\nconst MaterialFertNew = (saveItem) => {\n  const classes = useStyles();\n\n  const {\n    add_component_open,\n    selected_construction_id,\n    new_bom_created,\n    orga_id,\n    add_component_mode,\n    active_step,\n    material_created,\n  } = useContext(MainContext);\n\n  const [materialCreated, setMaterialCreated] = material_created;\n  const [activeStep, setActiveStep] = active_step;\n  const [addComponentOpen, setAddComponentOpen] = add_component_open;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [orgaId, setOrgaId] = orga_id;\n  const [addComponentMode, setAddComponentMode] = add_component_mode;\n\n  const [newMaterial, setNewMaterial] = useState({\n    mat_desc: \"\",\n    mat_desc_int: \"\",\n    mat_id_int: \"\",\n    cad_id: \"\",\n    mara_plast_id: \"\",\n    mat_rw: \"\",\n    height: \"\",\n    width: \"\",\n    depth: \"\",\n    unit: \"mm\",\n    weight: \"\",\n    weight_unit: \"g\",\n    volume: \"\",\n    volume_unit: \"mm^3\",\n  });\n\n  const [isAtomic, setIsAtomic] = useState(\"1\");\n\n  const handleNewMaterialInputs = (event) => {\n    setNewMaterial({ ...newMaterial, [event.target.id]: event.target.value });\n  };\n\n  const handleRadioChange = (event) => {\n    setIsAtomic(event.target.value);\n  };\n\n  const [showErrorText1, setShowErrorText1] = useState(false);\n  const [showErrorText2, setShowErrorText2] = useState(false);\n\n  const validateNewMat = () => {\n    var weightIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.weight);\n    var weightIsNumeric = /^\\d+$/.test(newMaterial.weight);\n    var heightIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.height);\n    var heightIsNumeric = /^\\d+$/.test(newMaterial.height);\n    var widthIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.width);\n    var widthIsNumeric = /^\\d+$/.test(newMaterial.width);\n    var depthIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.depth);\n    var depthIsNumeric = /^\\d+$/.test(newMaterial.depth);\n    var volumeIsFloat = /^\\d+\\.\\d+$/.test(newMaterial.volume);\n    var volumeIsNumeric = /^\\d+$/.test(newMaterial.volume);\n\n    if (newMaterial.mat_desc == \"\" || newMaterial.weight == \"\") {\n      setShowErrorText1(true);\n    } else if (\n      (!weightIsFloat && !weightIsNumeric) ||\n      (newMaterial.height != \"\" && !heightIsFloat && !heightIsNumeric) ||\n      (newMaterial.width != \"\" && !widthIsFloat && !widthIsNumeric) ||\n      (newMaterial.depth != \"\" && !depthIsFloat && !depthIsNumeric) ||\n      (newMaterial.volume != \"\" && !volumeIsFloat && !volumeIsNumeric)\n    ) {\n      setShowErrorText2(true);\n    } else {\n      setShowErrorText1(false);\n      setShowErrorText2(false);\n      addMaterial();\n      setMaterialCreated(!materialCreated);\n      setAddComponentMode(\"new\");\n      setActiveStep(2);\n    }\n  };\n\n  const addMaterial = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        mat_desc: newMaterial.mat_desc,\n        mat_desc_int: newMaterial.mat_desc_int,\n        mat_id_int: newMaterial.mat_id_int,\n        cad_id: newMaterial.cad_id,\n        mara_plast_id: parseInt(newMaterial.mara_plast_id),\n        mat_rw: parseFloat(newMaterial.mat_rw),\n        height: parseFloat(newMaterial.height),\n        width: parseFloat(newMaterial.width),\n        depth: parseFloat(newMaterial.depth),\n        unit: newMaterial.unit,\n        weight: parseFloat(newMaterial.weight),\n        weight_unit: newMaterial.weight_unit,\n        volume: parseFloat(newMaterial.volume),\n        volume_unit: newMaterial.volume_unit,\n        is_atomic: parseInt(isAtomic),\n        orga_id: orgaId,\n        cons_id: selectedConstructionId,\n        del_kz: 0,\n      }),\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://localhost:5000/mat\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setNewBomCreated(!newBomCreated);\n  };\n\n  return (\n    <div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          error={showErrorText1}\n          helperText={showErrorText1 ? \"Bitte füllen Sie dieses Feld aus.\" : \"\"}\n          required\n          id=\"mat_desc\"\n          label=\"Mat.Bez.\"\n          value={newMaterial.mat_desc}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"mat_desc_int\"\n          label=\"ERP Mat.Bez.\"\n          value={newMaterial.mat_desc_int}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"mat_id_int\"\n          label=\"ERP Mat.Nr.\"\n          value={newMaterial.mat_id_int}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          id=\"cad_id\"\n          label=\"CAD Nr.\"\n          value={newMaterial.cad_id}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"height\"\n          label=\"Höhe\"\n          value={newMaterial.height}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"width\"\n          label=\"Breite\"\n          value={newMaterial.width}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"depth\"\n          label=\"Tiefe\"\n          value={newMaterial.depth}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n\n        <TextField\n          id=\"unit\"\n          label=\"Einheit\"\n          value={newMaterial.unit}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          disabled\n        />\n\n        <TextField\n          id=\"weight\"\n          label=\"Gewicht\"\n          value={newMaterial.weight}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          error={showErrorText1}\n          helperText={\n            showErrorText1\n              ? \"Bitte füllen Sie dieses Feld mit numerischen Werten oder Gleitkommazahlen aus.\"\n              : \"\"\n          }\n          required\n        />\n\n        <TextField\n          id=\"weight_unit\"\n          label=\"G. Einheit\"\n          value={newMaterial.weight_unit}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          disabled\n        />\n\n        <TextField\n          error={showErrorText2}\n          helperText={\n            showErrorText2\n              ? \"Bitte geben Sie nur numerische Werte oder Gleitkommazahlen an.\"\n              : \"\"\n          }\n          id=\"volume\"\n          label=\"Volumen\"\n          value={newMaterial.volume}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n        />\n\n        <TextField\n          id=\"volume_unit\"\n          label=\"V. Einheit\"\n          value={newMaterial.volume_unit}\n          onChange={handleNewMaterialInputs}\n          margin=\"normal\"\n          disabled\n        />\n\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">\n            {\" \"}\n            Anlage als Stückliste?\n            <Tooltip\n              title={\n                <Typography variant=\"body1\">\n                  Wird ein Material als Stückliste angelegt, können dem Material\n                  Komponenten hinzugefügt werden, dafür kann kein Rohstoff bzw.\n                  Kunststoff zugeordnet werden.\n                </Typography>\n              }\n            >\n              <HelpIcon style={{ marginLeft: 10 }} fontSize=\"small\"></HelpIcon>\n            </Tooltip>\n          </FormLabel>\n          <RadioGroup\n            aria-label=\"atomic\"\n            value={isAtomic}\n            onChange={handleRadioChange}\n          >\n            <FormControlLabel value=\"0\" control={<Radio />} label=\"Ja\" />\n            <FormControlLabel value=\"1\" control={<Radio />} label=\"Nein\" />\n          </RadioGroup>\n        </FormControl>\n      </form>\n\n      <Grid container item xs={12} justify=\"center\">\n        <Grid item xs={4}></Grid>\n        <Grid item xs={4}>\n          <Button\n            className={classes.buttons}\n            onClick={() => {\n              validateNewMat();\n            }}\n          >\n            Material anlegen\n          </Button>\n          {materialCreated ? <div>Neues Material angelegt!</div> : <div />}\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default MaterialFertNew;\n"]},"metadata":{},"sourceType":"module"}