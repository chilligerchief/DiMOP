{"ast":null,"code":"var _jsxFileName = \"/home/adrian/DIMOP/dimop_frontend/src/views/Main/TableTree.jsx\";\nimport { ColumnChooser, Grid as GridDevExpress, Table, TableColumnVisibility, TableHeaderRow, TableTreeColumn, Toolbar } from \"@devexpress/dx-react-grid-material-ui\";\nimport { CustomTreeData, DataTypeProvider, IntegratedSorting, SelectionState, SortingState, TreeDataState } from \"@devexpress/dx-react-grid\";\nimport { useContext, useEffect, useState } from \"react\";\nimport EvaluationDialog from \"./EvaluationDialog.jsx\";\nimport AddBomDialog from \"./AddBomDialog.jsx\";\nimport AddMaterialDialog from \"./AddMaterialDialog.jsx\";\nimport AddPlastToMat from \"./AddPlastToMat.jsx\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DeleteMaterialDialog from \"./DeleteMaterialDialog.jsx\";\nimport CsvUploadDialog from \"./CsvUploadDialog.jsx\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { FormControl } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport { MainContext } from \"./MainContext.jsx\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PolymerIcon from \"@material-ui/icons/Polymer\";\nimport React from \"react\";\nimport { SearchDialog } from \"../../components/Search/SearchDialog.jsx\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nconst useStyles = makeStyles(theme => ({\n  mainwindow: {\n    padding: 20,\n    minHeight: \"calc(100vh - 115px - 100px)\",\n    height: \"100%\",\n    paddingBottom: 0,\n    textAlign: \"left\"\n  },\n  divider: {\n    margin: 0,\n    marginTop: 15\n  },\n  progress: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 15\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120\n  },\n  label: {\n    marginTop: 10\n  },\n  buttonbox: {\n    textAlign: \"right\",\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  textfield: {\n    margin: 0,\n    padding: 0,\n    background: \"white\"\n  },\n  root_card: {\n    marginTop: 15,\n    marginBottom: 0\n  },\n  title: {\n    fontSize: 13\n  },\n  card_div: {\n    marginBottom: 15\n  },\n  formControl: {\n    minWidth: 325\n  }\n}));\n\nconst getChildRows = (row, rootRows) => {\n  const childRows = rootRows.filter(r => r.parent_id === (row ? row.result_id : null));\n  return childRows.length ? childRows : null;\n};\n\nconst RecyclingTypeProviderFormatter = ({\n  value,\n  row\n}) => {\n  if (value > 0.9 && value <= 1) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Diese Komponente besitzt einen Recyclingwert zwischen 0,9 und 1,0.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    style: {\n      color: \"green\"\n    },\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })));else if (value > 0.6 && value <= 0.9) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Diese Komponente besitzt einen Recyclingwert zwischen 0,6 und 0,9. Ver\\xE4ndern Sie die darunter liegenden Komponenten, um den Recyclingwert zu erh\\xF6hen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    style: {\n      color: \"yellow\"\n    },\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })));else if (value > 0.3 && value <= 0.6) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Diese Komponente besitzt einen Recyclingwert zwischen 0,3 und 0,6. Ver\\xE4ndern Sie die darunter liegenden Komponenten, um den Recyclingwert zu erh\\xF6hen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    style: {\n      color: \"orange\"\n    },\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  })));else if (value > 0.0 && value <= 0.3) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"Diese Komponente besitzt einen Recyclingwert zwischen 0,0 und 0,3. Ver\\xE4ndern Sie die darunter liegenden Komponenten, um den Recyclingwert zu erh\\xF6hen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    style: {\n      color: \"red\"\n    },\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Diese Komponente besitzt keine eigenen Recyclingwert, da sie nicht aus mehreren Komponenten besteht.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    style: {\n      color: \"lightgrey\"\n    },\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst RecyclingTypeProvider = props => /*#__PURE__*/React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: RecyclingTypeProviderFormatter\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 3\n  }\n}));\n\nconst PlasticTypeProviderFormatter = ({\n  value,\n  row\n}) => {\n  if (value == 1) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"Dieser Komponente kann ein Kunststoff zugeordnet werden.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PolymerIcon, {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })));else return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"Dieser Komponente kann kein Kunststoff zugeordnet werden.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PolymerIcon, {\n    style: {\n      color: \"lightgrey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst PlasticTypeProvider = props => /*#__PURE__*/React.createElement(DataTypeProvider, Object.assign({\n  formatterComponent: PlasticTypeProviderFormatter\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 3\n  }\n}));\n\nconst TableTree = () => {\n  const {\n    selected_material,\n    parent_material,\n    bom_updated,\n    delete_material,\n    selected_construction_id,\n    selected_construction_title,\n    child_updated,\n    evaluation_open,\n    data_backend,\n    highest_level_id,\n    new_bom_created,\n    selection_atomic\n  } = useContext(MainContext);\n  const [evaluationOpen, setEvaluationOpen] = evaluation_open;\n  const [selectedMaterial, setSelectedMaterial] = selected_material;\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [deleteMaterial, setDeleteMaterial] = delete_material;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n  const [selectedConstructionId, setSelectedConstructionId] = selected_construction_id;\n  const [selectedConstructionTitle, setSelectedConstructionTitle] = selected_construction_title;\n  const [bomMaterialId, setBomMaterialId] = useState(\"\");\n  const classes = useStyles();\n  const [dataBackend, setDataBackend] = data_backend;\n  const [childUpdated, setChildUpdated] = child_updated;\n  const [highestLevelId, setHighestLevelId] = highest_level_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [selectionAtomic, setSelectionAtomic] = selection_atomic;\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"http://localhost:5000/tree/\" + bomMaterialId).then(res => {\n        return res.json();\n      }).then(d => {\n        console.log(d);\n        setDataBackend(d);\n        console.log(dataBackend);\n        setBomUpdated(false);\n        setRowSelection([]);\n      });\n    } else {}\n  }, [bomUpdated, bomMaterialId]);\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"http://localhost:5000/mat?cons_id=\" + selectedConstructionId).then(res => {\n        return res.json();\n      }).then(d => {\n        transformDropdownData(d);\n      });\n    } else {}\n  }, [selectedConstructionId, newBomCreated]);\n  const [columns] = useState([{\n    name: \"result_id\",\n    title: \"Id\"\n  }, {\n    name: \"parent_id\",\n    title: \"Parent\"\n  }, {\n    name: \"mat_id\",\n    title: \"Mat.Nr.\"\n  }, {\n    name: \"bom_id\",\n    title: \"Id. BOM Eintrag\"\n  }, {\n    name: \"mat_desc\",\n    title: \"Mat.Bez.\"\n  }, {\n    name: \"level\",\n    title: \"Ebene\"\n  }, {\n    name: \"mat_rw\",\n    title: \"Recycl.\"\n  }, {\n    name: \"mat_id_int\",\n    title: \"ERP Mat.Nr.\"\n  }, {\n    name: \"mat_desc_int\",\n    title: \"ERP Bez.\"\n  }, {\n    name: \"cad_id\",\n    title: \"CAD Nr.\"\n  }, {\n    name: \"is_atomic\",\n    title: \" \"\n  }, {\n    name: \"mara_plast_id\",\n    title: \"Kunststoff_ID\"\n  }, {\n    name: \"plast_desc\",\n    title: \"Kunstst.Bez.\"\n  }, {\n    name: \"plast_fam\",\n    title: \"Kunstst.Fam.\"\n  }, {\n    name: \"height\",\n    title: \"Höhe\"\n  }, {\n    name: \"width\",\n    title: \"Breite\"\n  }, {\n    name: \"depth\",\n    title: \"Tiefe\"\n  }, {\n    name: \"unit\",\n    title: \"Einheit\"\n  }, {\n    name: \"weight\",\n    title: \"Gewicht\"\n  }, {\n    name: \"weight_unit\",\n    title: \"G. Einheit\"\n  }, {\n    name: \"volume\",\n    title: \"Volumen\"\n  }, {\n    name: \"volume_unit\",\n    title: \"Vol. Einheit\"\n  }, {\n    name: \"orga_id\",\n    title: \"Organisations Id\"\n  }]);\n  const [tableColumnExtensions] = useState([{\n    columnName: \"mat_id\",\n    width: 250\n  }, {\n    columnName: \"mat_desc\",\n    width: 250\n  }, {\n    columnName: \"plast_desc\",\n    width: 250\n  }, {\n    columnName: \"is_atomic\",\n    width: 50\n  }]);\n  const [defaultExpandedRowIds] = useState([0]);\n  const [defaultHiddenColumnNames] = useState([\"level\", \"result_id\", \"parent_id\", \"mat_id_int\", \"mat_desc_int\", \"cad_id\", \"mara_plast_id\", \"orga_id\" //\"bom_id\",\n  ]);\n  const [rowSelection, setRowSelection] = useState([]);\n  const [selectedMaraId, setSelectedMaraId] = useState(0);\n  const [listDropdownData, setListDropdownData] = useState([]);\n  const [dropdownSelected, setDropdownSelected] = useState([]);\n\n  const setParent = () => {\n    if (rowSelection.length == 1) {\n      setParentMaterial(dataBackend[rowSelection].mat_id);\n      setHighestLevelId(dataBackend[rowSelection].result_id);\n      setSelectionAtomic(dataBackend[rowSelection].is_atomic);\n    }\n  };\n\n  const handleDropdownChange = event => {\n    setDropdownSelected(event.target.textContent);\n    setBomMaterialId(parseInt(event.target.textContent.split(\" \")[0]));\n  };\n\n  const transformDropdownData = data => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map(item => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  const setDeleteComponent = () => {\n    if (rowSelection.length == 1) {\n      setDeleteMaterial(dataBackend[rowSelection].bom_id);\n    }\n  };\n\n  const [searchDialogOpen, setSearchDialogOpen] = useState(false);\n\n  const handleSearchDialogClose = () => {\n    setSearchDialogOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\"search dialog changed\", searchDialogOpen);\n  }, [searchDialogOpen]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchDialog, {\n    open: searchDialogOpen,\n    handleSearchDialogClose: handleSearchDialogClose // selectedId={[1,2,3,4,5]} // used to be able to make the post/update request within each search result\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      background: \"white\",\n      marginTop: 25,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, \"Bitte w\\xE4hlen Sie eine St\\xFCckliste aus.\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    disableClearable: true,\n    value: dropdownSelected,\n    onChange: handleDropdownChange,\n    options: listDropdownData,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      value: dropdownSelected,\n      margin: \"dense\",\n      className: classes.textfield,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 15\n      }\n    }, \"Hiermit k\\xF6nnen Sie eine neue St\\xFCckliste als csv-Datei importieren.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CsvUploadDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 15\n      }\n    }, \"Hiermit k\\xF6nnen Sie eine neue St\\xFCckliste erstellen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddBomDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }, \"Hiermit k\\xF6nnen Sie die gew\\xE4hlte St\\xFCckliste bewerten.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EvaluationDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridDevExpress, {\n    rows: dataBackend,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectionState, {\n    selection: rowSelection,\n    onSelectionChange: setRowSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TreeDataState, {\n    defaultExpandedRowIds: defaultExpandedRowIds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SortingState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomTreeData, {\n    getChildRows: getChildRows,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IntegratedSorting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RecyclingTypeProvider, {\n    for: [\"mat_rw\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PlasticTypeProvider, {\n    for: [\"is_atomic\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columnExtensions: tableColumnExtensions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableColumnVisibility, {\n    defaultHiddenColumnNames: defaultHiddenColumnNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableHeaderRow, {\n    showSortingControls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TableTreeColumn, {\n    for: \"mat_id\",\n    showSelectionControls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ColumnChooser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      background: \"white\",\n      marginTop: 25,\n      marginBottom: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }, \"Hiermit k\\xF6nnen Sie eine ausgew\\xE4hlte Komponente l\\xF6schen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: setDeleteComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteMaterialDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 15\n      }\n    }, \"Hiermit k\\xF6nnen Sie einer bestehenden Komponente eine weitere Komponente hinzuf\\xFCgen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: setParent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddMaterialDialog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 15\n      }\n    }, \"Hiermit k\\xF6nnen Sie einer bestehenden Komponente einen Kunststoff zuordnen.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttons,\n    onClick: () => {\n      setParent();\n      setSearchDialogOpen(!searchDialogOpen);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PolymerIcon, {\n    style: {\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }), \"Zuordnen\")))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }\n  }, rowSelection.length == 1 == false && selectedConstructionTitle != \"Bitte auswaehlen\" && bomMaterialId != \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      marginTop: 20,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WarningIcon, {\n    style: {\n      fontSize: \"small\",\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }\n  }), \" \", \"Bitte w\\xE4hlen Sie eine Komponente aus.\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default TableTree;","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/views/Main/TableTree.jsx"],"names":["ColumnChooser","Grid","GridDevExpress","Table","TableColumnVisibility","TableHeaderRow","TableTreeColumn","Toolbar","CustomTreeData","DataTypeProvider","IntegratedSorting","SelectionState","SortingState","TreeDataState","useContext","useEffect","useState","EvaluationDialog","AddBomDialog","AddMaterialDialog","AddPlastToMat","Autocomplete","Button","Card","CardContent","DeleteMaterialDialog","CsvUploadDialog","FiberManualRecordIcon","FormControl","Input","MainContext","MenuItem","PolymerIcon","React","SearchDialog","Select","TextField","Tooltip","Typography","makeStyles","WarningIcon","useStyles","theme","mainwindow","padding","minHeight","height","paddingBottom","textAlign","divider","margin","marginTop","progress","justifyContent","buttons","borderColor","color","textTransform","width","label","buttonbox","paddingTop","textfield","background","root_card","marginBottom","title","fontSize","card_div","formControl","minWidth","getChildRows","row","rootRows","childRows","filter","r","parent_id","result_id","length","RecyclingTypeProviderFormatter","value","RecyclingTypeProvider","props","PlasticTypeProviderFormatter","PlasticTypeProvider","TableTree","selected_material","parent_material","bom_updated","delete_material","selected_construction_id","selected_construction_title","child_updated","evaluation_open","data_backend","highest_level_id","new_bom_created","selection_atomic","evaluationOpen","setEvaluationOpen","selectedMaterial","setSelectedMaterial","parentMaterial","setParentMaterial","deleteMaterial","setDeleteMaterial","bomUpdated","setBomUpdated","selectedConstructionId","setSelectedConstructionId","selectedConstructionTitle","setSelectedConstructionTitle","bomMaterialId","setBomMaterialId","classes","dataBackend","setDataBackend","childUpdated","setChildUpdated","highestLevelId","setHighestLevelId","newBomCreated","setNewBomCreated","selectionAtomic","setSelectionAtomic","fetch","then","res","json","d","console","log","setRowSelection","transformDropdownData","columns","name","tableColumnExtensions","columnName","defaultExpandedRowIds","defaultHiddenColumnNames","rowSelection","selectedMaraId","setSelectedMaraId","listDropdownData","setListDropdownData","dropdownSelected","setDropdownSelected","setParent","mat_id","is_atomic","handleDropdownChange","event","target","textContent","parseInt","split","data","source","map","item","id","mat_desc","setDeleteComponent","bom_id","searchDialogOpen","setSearchDialogOpen","handleSearchDialogClose","params","marginRight"],"mappings":"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","sourcesContent":["import {\n  ColumnChooser,\n  Grid as GridDevExpress,\n  Table,\n  TableColumnVisibility,\n  TableHeaderRow,\n  TableTreeColumn,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport {\n  CustomTreeData,\n  DataTypeProvider,\n  IntegratedSorting,\n  SelectionState,\n  SortingState,\n  TreeDataState,\n} from \"@devexpress/dx-react-grid\";\nimport { useContext, useEffect, useState } from \"react\";\n\nimport EvaluationDialog from \"./EvaluationDialog.jsx\";\nimport AddBomDialog from \"./AddBomDialog.jsx\";\nimport AddMaterialDialog from \"./AddMaterialDialog.jsx\";\nimport AddPlastToMat from \"./AddPlastToMat.jsx\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DeleteMaterialDialog from \"./DeleteMaterialDialog.jsx\";\nimport CsvUploadDialog from \"./CsvUploadDialog.jsx\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { FormControl } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport { MainContext } from \"./MainContext.jsx\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PolymerIcon from \"@material-ui/icons/Polymer\";\nimport React from \"react\";\nimport { SearchDialog } from \"../../components/Search/SearchDialog.jsx\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainwindow: {\n    padding: 20,\n    minHeight: \"calc(100vh - 115px - 100px)\",\n    height: \"100%\",\n    paddingBottom: 0,\n    textAlign: \"left\",\n  },\n  divider: {\n    margin: 0,\n    marginTop: 15,\n  },\n  progress: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 15,\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  label: { marginTop: 10 },\n  buttonbox: {\n    textAlign: \"right\",\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  textfield: { margin: 0, padding: 0, background: \"white\" },\n  root_card: {\n    marginTop: 15,\n    marginBottom: 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n  card_div: {\n    marginBottom: 15,\n  },\n  formControl: {\n    minWidth: 325,\n  },\n}));\n\nconst getChildRows = (row, rootRows) => {\n  const childRows = rootRows.filter(\n    (r) => r.parent_id === (row ? row.result_id : null)\n  );\n  return childRows.length ? childRows : null;\n};\n\nconst RecyclingTypeProviderFormatter = ({ value, row }) => {\n  if (value > 0.9 && value <= 1)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,9 und 1,0.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"green\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.6 && value <= 0.9)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,6 und 0,9.\n              Verändern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhöhen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"yellow\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.3 && value <= 0.6)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,3 und 0,6.\n              Verändern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhöhen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"orange\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.0 && value <= 0.3)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,0 und 0,3.\n              Verändern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhöhen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"red\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  return (\n    <span>\n      <Tooltip\n        title={\n          <Typography variant=\"body1\">\n            Diese Komponente besitzt keine eigenen Recyclingwert, da sie nicht\n            aus mehreren Komponenten besteht.\n          </Typography>\n        }\n      >\n        <FiberManualRecordIcon\n          style={{ color: \"lightgrey\" }}\n          fontSize=\"large\"\n        ></FiberManualRecordIcon>\n      </Tooltip>\n    </span>\n  );\n};\n\nconst RecyclingTypeProvider = (props) => (\n  <DataTypeProvider\n    formatterComponent={RecyclingTypeProviderFormatter}\n    {...props}\n  />\n);\n\nconst PlasticTypeProviderFormatter = ({ value, row }) => {\n  if (value == 1)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Dieser Komponente kann ein Kunststoff zugeordnet werden.\n            </Typography>\n          }\n        >\n          <PolymerIcon style={{ color: \"black\" }}></PolymerIcon>\n        </Tooltip>\n      </span>\n    );\n  else\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Dieser Komponente kann kein Kunststoff zugeordnet werden.\n            </Typography>\n          }\n        >\n          <PolymerIcon style={{ color: \"lightgrey\" }}></PolymerIcon>\n        </Tooltip>\n      </span>\n    );\n};\n\nconst PlasticTypeProvider = (props) => (\n  <DataTypeProvider\n    formatterComponent={PlasticTypeProviderFormatter}\n    {...props}\n  />\n);\n\nconst TableTree = () => {\n  const {\n    selected_material,\n    parent_material,\n    bom_updated,\n    delete_material,\n    selected_construction_id,\n    selected_construction_title,\n    child_updated,\n    evaluation_open,\n    data_backend,\n    highest_level_id,\n    new_bom_created,\n    selection_atomic,\n  } = useContext(MainContext);\n\n  const [evaluationOpen, setEvaluationOpen] = evaluation_open;\n  const [selectedMaterial, setSelectedMaterial] = selected_material;\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [deleteMaterial, setDeleteMaterial] = delete_material;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n  const [bomMaterialId, setBomMaterialId] = useState(\"\");\n\n  const classes = useStyles();\n  const [dataBackend, setDataBackend] = data_backend;\n  const [childUpdated, setChildUpdated] = child_updated;\n  const [highestLevelId, setHighestLevelId] = highest_level_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [selectionAtomic, setSelectionAtomic] = selection_atomic;\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"http://localhost:5000/tree/\" + bomMaterialId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          console.log(d);\n          setDataBackend(d);\n          console.log(dataBackend);\n          setBomUpdated(false);\n          setRowSelection([]);\n        });\n    } else {\n    }\n  }, [bomUpdated, bomMaterialId]);\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"http://localhost:5000/mat?cons_id=\" + selectedConstructionId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          transformDropdownData(d);\n        });\n    } else {\n    }\n  }, [selectedConstructionId, newBomCreated]);\n\n  const [columns] = useState([\n    { name: \"result_id\", title: \"Id\" },\n    { name: \"parent_id\", title: \"Parent\" },\n    { name: \"mat_id\", title: \"Mat.Nr.\" },\n    { name: \"bom_id\", title: \"Id. BOM Eintrag\" },\n    { name: \"mat_desc\", title: \"Mat.Bez.\" },\n    { name: \"level\", title: \"Ebene\" },\n    { name: \"mat_rw\", title: \"Recycl.\" },\n    { name: \"mat_id_int\", title: \"ERP Mat.Nr.\" },\n    { name: \"mat_desc_int\", title: \"ERP Bez.\" },\n    { name: \"cad_id\", title: \"CAD Nr.\" },\n    { name: \"is_atomic\", title: \" \" },\n    { name: \"mara_plast_id\", title: \"Kunststoff_ID\" },\n    { name: \"plast_desc\", title: \"Kunstst.Bez.\" },\n    { name: \"plast_fam\", title: \"Kunstst.Fam.\" },\n    { name: \"height\", title: \"Höhe\" },\n    { name: \"width\", title: \"Breite\" },\n    { name: \"depth\", title: \"Tiefe\" },\n    { name: \"unit\", title: \"Einheit\" },\n    { name: \"weight\", title: \"Gewicht\" },\n    { name: \"weight_unit\", title: \"G. Einheit\" },\n    { name: \"volume\", title: \"Volumen\" },\n    { name: \"volume_unit\", title: \"Vol. Einheit\" },\n    { name: \"orga_id\", title: \"Organisations Id\" },\n  ]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"mat_id\", width: 250 },\n    { columnName: \"mat_desc\", width: 250 },\n    { columnName: \"plast_desc\", width: 250 },\n    { columnName: \"is_atomic\", width: 50 },\n  ]);\n  const [defaultExpandedRowIds] = useState([0]);\n  const [defaultHiddenColumnNames] = useState([\n    \"level\",\n    \"result_id\",\n    \"parent_id\",\n    \"mat_id_int\",\n    \"mat_desc_int\",\n    \"cad_id\",\n    \"mara_plast_id\",\n    \"orga_id\",\n    //\"bom_id\",\n  ]);\n\n  const [rowSelection, setRowSelection] = useState([]);\n  const [selectedMaraId, setSelectedMaraId] = useState(0);\n\n  const [listDropdownData, setListDropdownData] = useState([]);\n  const [dropdownSelected, setDropdownSelected] = useState([]);\n\n  const setParent = () => {\n    if (rowSelection.length == 1) {\n      setParentMaterial(dataBackend[rowSelection].mat_id);\n      setHighestLevelId(dataBackend[rowSelection].result_id);\n      setSelectionAtomic(dataBackend[rowSelection].is_atomic);\n    }\n  };\n\n  const handleDropdownChange = (event) => {\n    setDropdownSelected(event.target.textContent);\n    setBomMaterialId(parseInt(event.target.textContent.split(\" \")[0]));\n  };\n\n  const transformDropdownData = (data) => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map((item) => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  const setDeleteComponent = () => {\n    if (rowSelection.length == 1) {\n      setDeleteMaterial(dataBackend[rowSelection].bom_id);\n    }\n  };\n\n  const [searchDialogOpen, setSearchDialogOpen] = useState(false);\n\n  const handleSearchDialogClose = () => {\n    setSearchDialogOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\"search dialog changed\", searchDialogOpen);\n  }, [searchDialogOpen]);\n\n  return (\n    <div>\n      <SearchDialog\n        open={searchDialogOpen}\n        handleSearchDialogClose={handleSearchDialogClose}\n        // selectedId={[1,2,3,4,5]} // used to be able to make the post/update request within each search result\n      />\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          background: \"white\",\n          marginTop: 25,\n          textAlign: \"left\",\n        }}\n      >\n        <Grid item xs={6}>\n          <Typography>Bitte wählen Sie eine Stückliste aus.</Typography>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              disableClearable\n              value={dropdownSelected}\n              onChange={handleDropdownChange}\n              options={listDropdownData}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  value={dropdownSelected}\n                  margin=\"dense\"\n                  className={classes.textfield}\n                />\n              )}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine neue Stückliste als csv-Datei\n                importieren.\n              </Typography>\n            }\n          >\n            <div>\n              <CsvUploadDialog></CsvUploadDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine neue Stückliste erstellen.\n              </Typography>\n            }\n          >\n            <div>\n              <AddBomDialog></AddBomDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie die gewählte Stückliste bewerten.\n              </Typography>\n            }\n          >\n            <div>\n              <EvaluationDialog></EvaluationDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <div>\n        <GridDevExpress rows={dataBackend} columns={columns}>\n          <SelectionState\n            selection={rowSelection}\n            onSelectionChange={setRowSelection}\n          />\n          <TreeDataState defaultExpandedRowIds={defaultExpandedRowIds} />\n          <SortingState />\n          <CustomTreeData getChildRows={getChildRows} />\n          <IntegratedSorting />\n          <RecyclingTypeProvider for={[\"mat_rw\"]} />\n          <PlasticTypeProvider for={[\"is_atomic\"]} />\n          <Table columnExtensions={tableColumnExtensions} />\n          <TableColumnVisibility\n            defaultHiddenColumnNames={defaultHiddenColumnNames}\n          />\n          <TableHeaderRow showSortingControls />\n          <TableTreeColumn for=\"mat_id\" showSelectionControls />\n          <Toolbar />\n          <ColumnChooser />\n        </GridDevExpress>\n      </div>\n\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          background: \"white\",\n          marginTop: 25,\n          marginBottom: 25,\n        }}\n      >\n        <Grid item xs={6}></Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie eine ausgewählte Komponente löschen.\n              </Typography>\n            }\n          >\n            <div onClick={setDeleteComponent}>\n              <DeleteMaterialDialog></DeleteMaterialDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie einer bestehenden Komponente eine weitere\n                Komponente hinzufügen.\n              </Typography>\n            }\n          >\n            <div onClick={setParent}>\n              <AddMaterialDialog></AddMaterialDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit können Sie einer bestehenden Komponente einen Kunststoff\n                zuordnen.\n              </Typography>\n            }\n          >\n            <Button\n              className={classes.buttons}\n              onClick={() => {\n                setParent();\n                setSearchDialogOpen(!searchDialogOpen);\n              }}\n            >\n              <PolymerIcon style={{ marginRight: 5 }}></PolymerIcon>\n              Zuordnen\n            </Button>\n            {/* <div onClick={setParent}>\n              <AddPlastToMat></AddPlastToMat>\n            </div> */}\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container item xs={12} justify=\"center\">\n        {(rowSelection.length == 1) == false &&\n        selectedConstructionTitle != \"Bitte auswaehlen\" &&\n        bomMaterialId != \"\" ? (\n          <div style={{ color: \"red\", marginTop: 20, marginBottom: 20 }}>\n            <WarningIcon\n              style={{ fontSize: \"small\", marginRight: 10 }}\n            ></WarningIcon>{\" \"}\n            Bitte wählen Sie eine Komponente aus.\n          </div>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default TableTree;\n"]},"metadata":{},"sourceType":"module"}