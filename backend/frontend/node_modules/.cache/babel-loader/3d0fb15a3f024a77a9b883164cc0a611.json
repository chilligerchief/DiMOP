{"ast":null,"code":"import _slicedToArray from\"/home/adrian/DiMOP/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ColumnChooser,Grid as GridDevExpress,Table,TableColumnVisibility,TableHeaderRow,TableTreeColumn,Toolbar}from\"@devexpress/dx-react-grid-material-ui\";import{CustomTreeData,DataTypeProvider,IntegratedSorting,SelectionState,SortingState,TreeDataState}from\"@devexpress/dx-react-grid\";import{useContext,useEffect,useState}from\"react\";import EvaluationDialog from\"./EvaluationDialog.jsx\";import AddBomDialog from\"./AddBomDialog.jsx\";import AddMaterialDialog from\"./AddMaterialDialog.jsx\";import AddPlastToMat from\"./AddPlastToMat.jsx\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import Button from\"@material-ui/core/Button\";import Card from\"@material-ui/core/Card\";import CardContent from\"@material-ui/core/CardContent\";import DeleteMaterialDialog from\"./DeleteMaterialDialog.jsx\";import CsvUploadDialog from\"./CsvUploadDialog.jsx\";import FiberManualRecordIcon from\"@material-ui/icons/FiberManualRecord\";import{FormControl}from\"@material-ui/core\";import Grid from\"@material-ui/core/Grid\";import Input from\"@material-ui/core/Input\";import{MainContext}from\"./MainContext.jsx\";import MenuItem from\"@material-ui/core/MenuItem\";import PolymerIcon from\"@material-ui/icons/Polymer\";import React from\"react\";import{SearchDialog}from\"../../components/Search/SearchDialog.jsx\";import Select from\"@material-ui/core/Select\";import TextField from\"@material-ui/core/TextField\";import Tooltip from\"@material-ui/core/Tooltip\";import Typography from\"@material-ui/core/Typography\";import{makeStyles}from\"@material-ui/core/styles\";import WarningIcon from\"@material-ui/icons/Warning\";var useStyles=makeStyles(function(theme){return{mainwindow:{padding:20,minHeight:\"calc(100vh - 115px - 100px)\",height:\"100%\",paddingBottom:0,textAlign:\"left\"},divider:{margin:0,marginTop:15},progress:{textAlign:\"center\",justifyContent:\"center\",padding:15},buttons:{borderColor:\"#005000\",color:\"#005000\",textTransform:\"none\",margin:20,height:30,width:120},label:{marginTop:10},buttonbox:{textAlign:\"right\",paddingTop:15,paddingBottom:15},textfield:{margin:0,padding:0,background:\"white\"},root_card:{marginTop:15,marginBottom:0},title:{fontSize:13},card_div:{marginBottom:15},formControl:{minWidth:325}};});var getChildRows=function getChildRows(row,rootRows){var childRows=rootRows.filter(function(r){return r.parent_id===(row?row.result_id:null);});return childRows.length?childRows:null;};var RecyclingTypeProviderFormatter=function RecyclingTypeProviderFormatter(_ref){var value=_ref.value,row=_ref.row;if(value>0.9&&value<=1)return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Diese Komponente besitzt einen Recyclingwert zwischen 0,9 und 1,0.\")},/*#__PURE__*/React.createElement(FiberManualRecordIcon,{style:{color:\"green\"},fontSize:\"large\"})));else if(value>0.6&&value<=0.9)return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Diese Komponente besitzt einen Recyclingwert zwischen 0,6 und 0,9. Ver\\xE4ndern Sie die darunter liegenden Komponenten, um den Recyclingwert zu erh\\xF6hen.\")},/*#__PURE__*/React.createElement(FiberManualRecordIcon,{style:{color:\"yellow\"},fontSize:\"large\"})));else if(value>0.3&&value<=0.6)return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Diese Komponente besitzt einen Recyclingwert zwischen 0,3 und 0,6. Ver\\xE4ndern Sie die darunter liegenden Komponenten, um den Recyclingwert zu erh\\xF6hen.\")},/*#__PURE__*/React.createElement(FiberManualRecordIcon,{style:{color:\"orange\"},fontSize:\"large\"})));else if(value>0.0&&value<=0.3)return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Diese Komponente besitzt einen Recyclingwert zwischen 0,0 und 0,3. Ver\\xE4ndern Sie die darunter liegenden Komponenten, um den Recyclingwert zu erh\\xF6hen.\")},/*#__PURE__*/React.createElement(FiberManualRecordIcon,{style:{color:\"red\"},fontSize:\"large\"})));return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Diese Komponente besitzt keine eigenen Recyclingwert, da sie nicht aus mehreren Komponenten besteht.\")},/*#__PURE__*/React.createElement(FiberManualRecordIcon,{style:{color:\"lightgrey\"},fontSize:\"large\"})));};var RecyclingTypeProvider=function RecyclingTypeProvider(props){return/*#__PURE__*/React.createElement(DataTypeProvider,Object.assign({formatterComponent:RecyclingTypeProviderFormatter},props));};var PlasticTypeProviderFormatter=function PlasticTypeProviderFormatter(_ref2){var value=_ref2.value,row=_ref2.row;if(value==1)return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Dieser Komponente kann ein Kunststoff zugeordnet werden.\")},/*#__PURE__*/React.createElement(PolymerIcon,{style:{color:\"black\"}})));else return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Dieser Komponente kann kein Kunststoff zugeordnet werden.\")},/*#__PURE__*/React.createElement(PolymerIcon,{style:{color:\"lightgrey\"}})));};var PlasticTypeProvider=function PlasticTypeProvider(props){return/*#__PURE__*/React.createElement(DataTypeProvider,Object.assign({formatterComponent:PlasticTypeProviderFormatter},props));};var TableTree=function TableTree(){var _useContext=useContext(MainContext),selected_material=_useContext.selected_material,parent_material=_useContext.parent_material,bom_updated=_useContext.bom_updated,delete_material=_useContext.delete_material,selected_construction_id=_useContext.selected_construction_id,selected_construction_title=_useContext.selected_construction_title,child_updated=_useContext.child_updated,evaluation_open=_useContext.evaluation_open,data_backend=_useContext.data_backend,highest_level_id=_useContext.highest_level_id,new_bom_created=_useContext.new_bom_created,selection_atomic=_useContext.selection_atomic;var _evaluation_open=_slicedToArray(evaluation_open,2),evaluationOpen=_evaluation_open[0],setEvaluationOpen=_evaluation_open[1];var _selected_material=_slicedToArray(selected_material,2),selectedMaterial=_selected_material[0],setSelectedMaterial=_selected_material[1];var _parent_material=_slicedToArray(parent_material,2),parentMaterial=_parent_material[0],setParentMaterial=_parent_material[1];var _delete_material=_slicedToArray(delete_material,2),deleteMaterial=_delete_material[0],setDeleteMaterial=_delete_material[1];var _bom_updated=_slicedToArray(bom_updated,2),bomUpdated=_bom_updated[0],setBomUpdated=_bom_updated[1];var _selected_constructio=_slicedToArray(selected_construction_id,2),selectedConstructionId=_selected_constructio[0],setSelectedConstructionId=_selected_constructio[1];var _selected_constructio2=_slicedToArray(selected_construction_title,2),selectedConstructionTitle=_selected_constructio2[0],setSelectedConstructionTitle=_selected_constructio2[1];var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),bomMaterialId=_useState2[0],setBomMaterialId=_useState2[1];var classes=useStyles();var _data_backend=_slicedToArray(data_backend,2),dataBackend=_data_backend[0],setDataBackend=_data_backend[1];var _child_updated=_slicedToArray(child_updated,2),childUpdated=_child_updated[0],setChildUpdated=_child_updated[1];var _highest_level_id=_slicedToArray(highest_level_id,2),highestLevelId=_highest_level_id[0],setHighestLevelId=_highest_level_id[1];var _new_bom_created=_slicedToArray(new_bom_created,2),newBomCreated=_new_bom_created[0],setNewBomCreated=_new_bom_created[1];var _selection_atomic=_slicedToArray(selection_atomic,2),selectionAtomic=_selection_atomic[0],setSelectionAtomic=_selection_atomic[1];useEffect(function(){if(selectedConstructionTitle!==\"Bitte auswaehlen\"){fetch(\"/tree/\"+bomMaterialId).then(function(res){return res.json();}).then(function(d){console.log(d);setDataBackend(d);console.log(dataBackend);setBomUpdated(false);setRowSelection([]);});}else{}},[bomUpdated,bomMaterialId]);useEffect(function(){if(selectedConstructionTitle!==\"Bitte auswaehlen\"){fetch(\"/mat?cons_id=\"+selectedConstructionId).then(function(res){return res.json();}).then(function(d){transformDropdownData(d);});}else{}},[selectedConstructionId,newBomCreated]);var _useState3=useState([{name:\"result_id\",title:\"Id\"},{name:\"parent_id\",title:\"Parent\"},{name:\"mat_id\",title:\"Mat.Nr.\"},{name:\"bom_id\",title:\"Id. BOM Eintrag\"},{name:\"mat_desc\",title:\"Mat.Bez.\"},{name:\"level\",title:\"Ebene\"},{name:\"mat_rw\",title:\"Recycl.\"},{name:\"mat_id_int\",title:\"ERP Mat.Nr.\"},{name:\"mat_desc_int\",title:\"ERP Bez.\"},{name:\"cad_id\",title:\"CAD Nr.\"},{name:\"is_atomic\",title:\" \"},{name:\"mara_plast_id\",title:\"Kunststoff_ID\"},{name:\"plast_desc\",title:\"Kunstst.Bez.\"},{name:\"plast_fam\",title:\"Kunstst.Fam.\"},{name:\"height\",title:\"HÃ¶he\"},{name:\"width\",title:\"Breite\"},{name:\"depth\",title:\"Tiefe\"},{name:\"unit\",title:\"Einheit\"},{name:\"weight\",title:\"Gewicht\"},{name:\"weight_unit\",title:\"G. Einheit\"},{name:\"volume\",title:\"Volumen\"},{name:\"volume_unit\",title:\"Vol. Einheit\"},{name:\"orga_id\",title:\"Organisations Id\"}]),_useState4=_slicedToArray(_useState3,1),columns=_useState4[0];var _useState5=useState([{columnName:\"mat_id\",width:250},{columnName:\"mat_desc\",width:250},{columnName:\"plast_desc\",width:250},{columnName:\"is_atomic\",width:50}]),_useState6=_slicedToArray(_useState5,1),tableColumnExtensions=_useState6[0];var _useState7=useState([0]),_useState8=_slicedToArray(_useState7,1),defaultExpandedRowIds=_useState8[0];var _useState9=useState([\"level\",\"result_id\",\"parent_id\",\"mat_id_int\",\"mat_desc_int\",\"cad_id\",\"mara_plast_id\",\"orga_id\"//\"bom_id\",\n]),_useState10=_slicedToArray(_useState9,1),defaultHiddenColumnNames=_useState10[0];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),rowSelection=_useState12[0],setRowSelection=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),selectedMaraId=_useState14[0],setSelectedMaraId=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),listDropdownData=_useState16[0],setListDropdownData=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),dropdownSelected=_useState18[0],setDropdownSelected=_useState18[1];var setParent=function setParent(){if(rowSelection.length==1){setParentMaterial(dataBackend[rowSelection].mat_id);setHighestLevelId(dataBackend[rowSelection].result_id);setSelectionAtomic(dataBackend[rowSelection].is_atomic);}};var handleDropdownChange=function handleDropdownChange(event){setDropdownSelected(event.target.textContent);setBomMaterialId(parseInt(event.target.textContent.split(\" \")[0]));};var transformDropdownData=function transformDropdownData(data){if(data!==null&&data.length!==0){var source=data.map(function(item){return item.id+\" \"+item.mat_desc;});setListDropdownData(source);}else setListDropdownData([]);};var setDeleteComponent=function setDeleteComponent(){if(rowSelection.length==1){setDeleteMaterial(dataBackend[rowSelection].bom_id);}};var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),searchDialogOpen=_useState20[0],setSearchDialogOpen=_useState20[1];var handleSearchDialogClose=function handleSearchDialogClose(){setSearchDialogOpen(false);};useEffect(function(){console.log(\"search dialog changed\",searchDialogOpen);},[searchDialogOpen]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SearchDialog,{open:searchDialogOpen,handleSearchDialogClose:handleSearchDialogClose// selectedId={[1,2,3,4,5]} // used to be able to make the post/update request within each search result\n}),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,style:{background:\"white\",marginTop:25,textAlign:\"left\"}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Typography,null,\"Bitte w\\xE4hlen Sie eine St\\xFCckliste aus.\"),/*#__PURE__*/React.createElement(FormControl,{className:classes.formControl},/*#__PURE__*/React.createElement(Autocomplete,{disableClearable:true,value:dropdownSelected,onChange:handleDropdownChange,options:listDropdownData,renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{value:dropdownSelected,margin:\"dense\",className:classes.textfield}));}}))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Hiermit k\\xF6nnen Sie eine neue St\\xFCckliste als csv-Datei importieren.\")},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CsvUploadDialog,null)))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Hiermit k\\xF6nnen Sie eine neue St\\xFCckliste erstellen.\")},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(AddBomDialog,null)))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Hiermit k\\xF6nnen Sie die gew\\xE4hlte St\\xFCckliste bewerten.\")},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(EvaluationDialog,null))))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(GridDevExpress,{rows:dataBackend,columns:columns},/*#__PURE__*/React.createElement(SelectionState,{selection:rowSelection,onSelectionChange:setRowSelection}),/*#__PURE__*/React.createElement(TreeDataState,{defaultExpandedRowIds:defaultExpandedRowIds}),/*#__PURE__*/React.createElement(SortingState,null),/*#__PURE__*/React.createElement(CustomTreeData,{getChildRows:getChildRows}),/*#__PURE__*/React.createElement(IntegratedSorting,null),/*#__PURE__*/React.createElement(RecyclingTypeProvider,{for:[\"mat_rw\"]}),/*#__PURE__*/React.createElement(PlasticTypeProvider,{for:[\"is_atomic\"]}),/*#__PURE__*/React.createElement(Table,{columnExtensions:tableColumnExtensions}),/*#__PURE__*/React.createElement(TableColumnVisibility,{defaultHiddenColumnNames:defaultHiddenColumnNames}),/*#__PURE__*/React.createElement(TableHeaderRow,{showSortingControls:true}),/*#__PURE__*/React.createElement(TableTreeColumn,{for:\"mat_id\",showSelectionControls:true}),/*#__PURE__*/React.createElement(Toolbar,null),/*#__PURE__*/React.createElement(ColumnChooser,null))),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,style:{background:\"white\",marginTop:25,marginBottom:25}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Hiermit k\\xF6nnen Sie eine ausgew\\xE4hlte Komponente l\\xF6schen.\")},/*#__PURE__*/React.createElement(\"div\",{onClick:setDeleteComponent},/*#__PURE__*/React.createElement(DeleteMaterialDialog,null)))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Hiermit k\\xF6nnen Sie einer bestehenden Komponente eine weitere Komponente hinzuf\\xFCgen.\")},/*#__PURE__*/React.createElement(\"div\",{onClick:setParent},/*#__PURE__*/React.createElement(AddMaterialDialog,null)))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Tooltip,{title:/*#__PURE__*/React.createElement(Typography,{variant:\"body1\"},\"Hiermit k\\xF6nnen Sie einer bestehenden Komponente einen Kunststoff zuordnen.\")},/*#__PURE__*/React.createElement(Button,{className:classes.buttons,onClick:function onClick(){setParent();setSearchDialogOpen(!searchDialogOpen);}},/*#__PURE__*/React.createElement(PolymerIcon,{style:{marginRight:5}}),\"Zuordnen\")))),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,justify:\"center\"},rowSelection.length==1==false&&selectedConstructionTitle!=\"Bitte auswaehlen\"&&bomMaterialId!=\"\"?/*#__PURE__*/React.createElement(\"div\",{style:{color:\"red\",marginTop:20,marginBottom:20}},/*#__PURE__*/React.createElement(WarningIcon,{style:{fontSize:\"small\",marginRight:10}}),\" \",\"Bitte w\\xE4hlen Sie eine Komponente aus.\"):/*#__PURE__*/React.createElement(\"div\",null)));};export default TableTree;","map":{"version":3,"sources":["/home/adrian/DiMOP/backend/frontend/src/views/Main/TableTree.jsx"],"names":["ColumnChooser","Grid","GridDevExpress","Table","TableColumnVisibility","TableHeaderRow","TableTreeColumn","Toolbar","CustomTreeData","DataTypeProvider","IntegratedSorting","SelectionState","SortingState","TreeDataState","useContext","useEffect","useState","EvaluationDialog","AddBomDialog","AddMaterialDialog","AddPlastToMat","Autocomplete","Button","Card","CardContent","DeleteMaterialDialog","CsvUploadDialog","FiberManualRecordIcon","FormControl","Input","MainContext","MenuItem","PolymerIcon","React","SearchDialog","Select","TextField","Tooltip","Typography","makeStyles","WarningIcon","useStyles","theme","mainwindow","padding","minHeight","height","paddingBottom","textAlign","divider","margin","marginTop","progress","justifyContent","buttons","borderColor","color","textTransform","width","label","buttonbox","paddingTop","textfield","background","root_card","marginBottom","title","fontSize","card_div","formControl","minWidth","getChildRows","row","rootRows","childRows","filter","r","parent_id","result_id","length","RecyclingTypeProviderFormatter","value","RecyclingTypeProvider","props","PlasticTypeProviderFormatter","PlasticTypeProvider","TableTree","selected_material","parent_material","bom_updated","delete_material","selected_construction_id","selected_construction_title","child_updated","evaluation_open","data_backend","highest_level_id","new_bom_created","selection_atomic","evaluationOpen","setEvaluationOpen","selectedMaterial","setSelectedMaterial","parentMaterial","setParentMaterial","deleteMaterial","setDeleteMaterial","bomUpdated","setBomUpdated","selectedConstructionId","setSelectedConstructionId","selectedConstructionTitle","setSelectedConstructionTitle","bomMaterialId","setBomMaterialId","classes","dataBackend","setDataBackend","childUpdated","setChildUpdated","highestLevelId","setHighestLevelId","newBomCreated","setNewBomCreated","selectionAtomic","setSelectionAtomic","fetch","then","res","json","d","console","log","setRowSelection","transformDropdownData","name","columns","columnName","tableColumnExtensions","defaultExpandedRowIds","defaultHiddenColumnNames","rowSelection","selectedMaraId","setSelectedMaraId","listDropdownData","setListDropdownData","dropdownSelected","setDropdownSelected","setParent","mat_id","is_atomic","handleDropdownChange","event","target","textContent","parseInt","split","data","source","map","item","id","mat_desc","setDeleteComponent","bom_id","searchDialogOpen","setSearchDialogOpen","handleSearchDialogClose","params","marginRight"],"mappings":"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","sourcesContent":["import {\n  ColumnChooser,\n  Grid as GridDevExpress,\n  Table,\n  TableColumnVisibility,\n  TableHeaderRow,\n  TableTreeColumn,\n  Toolbar,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport {\n  CustomTreeData,\n  DataTypeProvider,\n  IntegratedSorting,\n  SelectionState,\n  SortingState,\n  TreeDataState,\n} from \"@devexpress/dx-react-grid\";\nimport { useContext, useEffect, useState } from \"react\";\n\nimport EvaluationDialog from \"./EvaluationDialog.jsx\";\nimport AddBomDialog from \"./AddBomDialog.jsx\";\nimport AddMaterialDialog from \"./AddMaterialDialog.jsx\";\nimport AddPlastToMat from \"./AddPlastToMat.jsx\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport DeleteMaterialDialog from \"./DeleteMaterialDialog.jsx\";\nimport CsvUploadDialog from \"./CsvUploadDialog.jsx\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { FormControl } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport { MainContext } from \"./MainContext.jsx\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PolymerIcon from \"@material-ui/icons/Polymer\";\nimport React from \"react\";\nimport { SearchDialog } from \"../../components/Search/SearchDialog.jsx\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainwindow: {\n    padding: 20,\n    minHeight: \"calc(100vh - 115px - 100px)\",\n    height: \"100%\",\n    paddingBottom: 0,\n    textAlign: \"left\",\n  },\n  divider: {\n    margin: 0,\n    marginTop: 15,\n  },\n  progress: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    padding: 15,\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n  label: { marginTop: 10 },\n  buttonbox: {\n    textAlign: \"right\",\n    paddingTop: 15,\n    paddingBottom: 15,\n  },\n  textfield: { margin: 0, padding: 0, background: \"white\" },\n  root_card: {\n    marginTop: 15,\n    marginBottom: 0,\n  },\n  title: {\n    fontSize: 13,\n  },\n  card_div: {\n    marginBottom: 15,\n  },\n  formControl: {\n    minWidth: 325,\n  },\n}));\n\nconst getChildRows = (row, rootRows) => {\n  const childRows = rootRows.filter(\n    (r) => r.parent_id === (row ? row.result_id : null)\n  );\n  return childRows.length ? childRows : null;\n};\n\nconst RecyclingTypeProviderFormatter = ({ value, row }) => {\n  if (value > 0.9 && value <= 1)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,9 und 1,0.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"green\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.6 && value <= 0.9)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,6 und 0,9.\n              VerÃ¤ndern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhÃ¶hen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"yellow\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.3 && value <= 0.6)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,3 und 0,6.\n              VerÃ¤ndern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhÃ¶hen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"orange\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  else if (value > 0.0 && value <= 0.3)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Diese Komponente besitzt einen Recyclingwert zwischen 0,0 und 0,3.\n              VerÃ¤ndern Sie die darunter liegenden Komponenten, um den\n              Recyclingwert zu erhÃ¶hen.\n            </Typography>\n          }\n        >\n          <FiberManualRecordIcon\n            style={{ color: \"red\" }}\n            fontSize=\"large\"\n          ></FiberManualRecordIcon>\n        </Tooltip>\n      </span>\n    );\n  return (\n    <span>\n      <Tooltip\n        title={\n          <Typography variant=\"body1\">\n            Diese Komponente besitzt keine eigenen Recyclingwert, da sie nicht\n            aus mehreren Komponenten besteht.\n          </Typography>\n        }\n      >\n        <FiberManualRecordIcon\n          style={{ color: \"lightgrey\" }}\n          fontSize=\"large\"\n        ></FiberManualRecordIcon>\n      </Tooltip>\n    </span>\n  );\n};\n\nconst RecyclingTypeProvider = (props) => (\n  <DataTypeProvider\n    formatterComponent={RecyclingTypeProviderFormatter}\n    {...props}\n  />\n);\n\nconst PlasticTypeProviderFormatter = ({ value, row }) => {\n  if (value == 1)\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Dieser Komponente kann ein Kunststoff zugeordnet werden.\n            </Typography>\n          }\n        >\n          <PolymerIcon style={{ color: \"black\" }}></PolymerIcon>\n        </Tooltip>\n      </span>\n    );\n  else\n    return (\n      <span>\n        <Tooltip\n          title={\n            <Typography variant=\"body1\">\n              Dieser Komponente kann kein Kunststoff zugeordnet werden.\n            </Typography>\n          }\n        >\n          <PolymerIcon style={{ color: \"lightgrey\" }}></PolymerIcon>\n        </Tooltip>\n      </span>\n    );\n};\n\nconst PlasticTypeProvider = (props) => (\n  <DataTypeProvider\n    formatterComponent={PlasticTypeProviderFormatter}\n    {...props}\n  />\n);\n\nconst TableTree = () => {\n  const {\n    selected_material,\n    parent_material,\n    bom_updated,\n    delete_material,\n    selected_construction_id,\n    selected_construction_title,\n    child_updated,\n    evaluation_open,\n    data_backend,\n    highest_level_id,\n    new_bom_created,\n    selection_atomic,\n  } = useContext(MainContext);\n\n  const [evaluationOpen, setEvaluationOpen] = evaluation_open;\n  const [selectedMaterial, setSelectedMaterial] = selected_material;\n  const [parentMaterial, setParentMaterial] = parent_material;\n  const [deleteMaterial, setDeleteMaterial] = delete_material;\n  const [bomUpdated, setBomUpdated] = bom_updated;\n  const [\n    selectedConstructionId,\n    setSelectedConstructionId,\n  ] = selected_construction_id;\n  const [\n    selectedConstructionTitle,\n    setSelectedConstructionTitle,\n  ] = selected_construction_title;\n  const [bomMaterialId, setBomMaterialId] = useState(\"\");\n\n  const classes = useStyles();\n  const [dataBackend, setDataBackend] = data_backend;\n  const [childUpdated, setChildUpdated] = child_updated;\n  const [highestLevelId, setHighestLevelId] = highest_level_id;\n  const [newBomCreated, setNewBomCreated] = new_bom_created;\n  const [selectionAtomic, setSelectionAtomic] = selection_atomic;\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"/tree/\" + bomMaterialId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          console.log(d);\n          setDataBackend(d);\n          console.log(dataBackend);\n          setBomUpdated(false);\n          setRowSelection([]);\n        });\n    } else {\n    }\n  }, [bomUpdated, bomMaterialId]);\n\n  useEffect(() => {\n    if (selectedConstructionTitle !== \"Bitte auswaehlen\") {\n      fetch(\"/mat?cons_id=\" + selectedConstructionId)\n        .then((res) => {\n          return res.json();\n        })\n        .then((d) => {\n          transformDropdownData(d);\n        });\n    } else {\n    }\n  }, [selectedConstructionId, newBomCreated]);\n\n  const [columns] = useState([\n    { name: \"result_id\", title: \"Id\" },\n    { name: \"parent_id\", title: \"Parent\" },\n    { name: \"mat_id\", title: \"Mat.Nr.\" },\n    { name: \"bom_id\", title: \"Id. BOM Eintrag\" },\n    { name: \"mat_desc\", title: \"Mat.Bez.\" },\n    { name: \"level\", title: \"Ebene\" },\n    { name: \"mat_rw\", title: \"Recycl.\" },\n    { name: \"mat_id_int\", title: \"ERP Mat.Nr.\" },\n    { name: \"mat_desc_int\", title: \"ERP Bez.\" },\n    { name: \"cad_id\", title: \"CAD Nr.\" },\n    { name: \"is_atomic\", title: \" \" },\n    { name: \"mara_plast_id\", title: \"Kunststoff_ID\" },\n    { name: \"plast_desc\", title: \"Kunstst.Bez.\" },\n    { name: \"plast_fam\", title: \"Kunstst.Fam.\" },\n    { name: \"height\", title: \"HÃ¶he\" },\n    { name: \"width\", title: \"Breite\" },\n    { name: \"depth\", title: \"Tiefe\" },\n    { name: \"unit\", title: \"Einheit\" },\n    { name: \"weight\", title: \"Gewicht\" },\n    { name: \"weight_unit\", title: \"G. Einheit\" },\n    { name: \"volume\", title: \"Volumen\" },\n    { name: \"volume_unit\", title: \"Vol. Einheit\" },\n    { name: \"orga_id\", title: \"Organisations Id\" },\n  ]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"mat_id\", width: 250 },\n    { columnName: \"mat_desc\", width: 250 },\n    { columnName: \"plast_desc\", width: 250 },\n    { columnName: \"is_atomic\", width: 50 },\n  ]);\n  const [defaultExpandedRowIds] = useState([0]);\n  const [defaultHiddenColumnNames] = useState([\n    \"level\",\n    \"result_id\",\n    \"parent_id\",\n    \"mat_id_int\",\n    \"mat_desc_int\",\n    \"cad_id\",\n    \"mara_plast_id\",\n    \"orga_id\",\n    //\"bom_id\",\n  ]);\n\n  const [rowSelection, setRowSelection] = useState([]);\n  const [selectedMaraId, setSelectedMaraId] = useState(0);\n\n  const [listDropdownData, setListDropdownData] = useState([]);\n  const [dropdownSelected, setDropdownSelected] = useState([]);\n\n  const setParent = () => {\n    if (rowSelection.length == 1) {\n      setParentMaterial(dataBackend[rowSelection].mat_id);\n      setHighestLevelId(dataBackend[rowSelection].result_id);\n      setSelectionAtomic(dataBackend[rowSelection].is_atomic);\n    }\n  };\n\n  const handleDropdownChange = (event) => {\n    setDropdownSelected(event.target.textContent);\n    setBomMaterialId(parseInt(event.target.textContent.split(\" \")[0]));\n  };\n\n  const transformDropdownData = (data) => {\n    if (data !== null && data.length !== 0) {\n      const source = data.map((item) => item.id + \" \" + item.mat_desc);\n      setListDropdownData(source);\n    } else setListDropdownData([]);\n  };\n\n  const setDeleteComponent = () => {\n    if (rowSelection.length == 1) {\n      setDeleteMaterial(dataBackend[rowSelection].bom_id);\n    }\n  };\n\n  const [searchDialogOpen, setSearchDialogOpen] = useState(false);\n\n  const handleSearchDialogClose = () => {\n    setSearchDialogOpen(false);\n  };\n\n  useEffect(() => {\n    console.log(\"search dialog changed\", searchDialogOpen);\n  }, [searchDialogOpen]);\n\n  return (\n    <div>\n      <SearchDialog\n        open={searchDialogOpen}\n        handleSearchDialogClose={handleSearchDialogClose}\n        // selectedId={[1,2,3,4,5]} // used to be able to make the post/update request within each search result\n      />\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          background: \"white\",\n          marginTop: 25,\n          textAlign: \"left\",\n        }}\n      >\n        <Grid item xs={6}>\n          <Typography>Bitte wÃ¤hlen Sie eine StÃ¼ckliste aus.</Typography>\n          <FormControl className={classes.formControl}>\n            <Autocomplete\n              disableClearable\n              value={dropdownSelected}\n              onChange={handleDropdownChange}\n              options={listDropdownData}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  value={dropdownSelected}\n                  margin=\"dense\"\n                  className={classes.textfield}\n                />\n              )}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit kÃ¶nnen Sie eine neue StÃ¼ckliste als csv-Datei\n                importieren.\n              </Typography>\n            }\n          >\n            <div>\n              <CsvUploadDialog></CsvUploadDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit kÃ¶nnen Sie eine neue StÃ¼ckliste erstellen.\n              </Typography>\n            }\n          >\n            <div>\n              <AddBomDialog></AddBomDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit kÃ¶nnen Sie die gewÃ¤hlte StÃ¼ckliste bewerten.\n              </Typography>\n            }\n          >\n            <div>\n              <EvaluationDialog></EvaluationDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <div>\n        <GridDevExpress rows={dataBackend} columns={columns}>\n          <SelectionState\n            selection={rowSelection}\n            onSelectionChange={setRowSelection}\n          />\n          <TreeDataState defaultExpandedRowIds={defaultExpandedRowIds} />\n          <SortingState />\n          <CustomTreeData getChildRows={getChildRows} />\n          <IntegratedSorting />\n          <RecyclingTypeProvider for={[\"mat_rw\"]} />\n          <PlasticTypeProvider for={[\"is_atomic\"]} />\n          <Table columnExtensions={tableColumnExtensions} />\n          <TableColumnVisibility\n            defaultHiddenColumnNames={defaultHiddenColumnNames}\n          />\n          <TableHeaderRow showSortingControls />\n          <TableTreeColumn for=\"mat_id\" showSelectionControls />\n          <Toolbar />\n          <ColumnChooser />\n        </GridDevExpress>\n      </div>\n\n      <Grid\n        container\n        item\n        xs={12}\n        style={{\n          background: \"white\",\n          marginTop: 25,\n          marginBottom: 25,\n        }}\n      >\n        <Grid item xs={6}></Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit kÃ¶nnen Sie eine ausgewÃ¤hlte Komponente lÃ¶schen.\n              </Typography>\n            }\n          >\n            <div onClick={setDeleteComponent}>\n              <DeleteMaterialDialog></DeleteMaterialDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit kÃ¶nnen Sie einer bestehenden Komponente eine weitere\n                Komponente hinzufÃ¼gen.\n              </Typography>\n            }\n          >\n            <div onClick={setParent}>\n              <AddMaterialDialog></AddMaterialDialog>\n            </div>\n          </Tooltip>\n        </Grid>\n        <Grid item xs={2}>\n          <Tooltip\n            title={\n              <Typography variant=\"body1\">\n                Hiermit kÃ¶nnen Sie einer bestehenden Komponente einen Kunststoff\n                zuordnen.\n              </Typography>\n            }\n          >\n            <Button\n              className={classes.buttons}\n              onClick={() => {\n                setParent();\n                setSearchDialogOpen(!searchDialogOpen);\n              }}\n            >\n              <PolymerIcon style={{ marginRight: 5 }}></PolymerIcon>\n              Zuordnen\n            </Button>\n            {/* <div onClick={setParent}>\n              <AddPlastToMat></AddPlastToMat>\n            </div> */}\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid container item xs={12} justify=\"center\">\n        {(rowSelection.length == 1) == false &&\n        selectedConstructionTitle != \"Bitte auswaehlen\" &&\n        bomMaterialId != \"\" ? (\n          <div style={{ color: \"red\", marginTop: 20, marginBottom: 20 }}>\n            <WarningIcon\n              style={{ fontSize: \"small\", marginRight: 10 }}\n            ></WarningIcon>{\" \"}\n            Bitte wÃ¤hlen Sie eine Komponente aus.\n          </div>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default TableTree;\n"]},"metadata":{},"sourceType":"module"}