{"ast":null,"code":"import _slicedToArray from\"/home/adrian/DiMOP/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useContext,useState}from\"react\";import*as XLSX from\"xlsx\";//Components\nimport{MainContext}from\"./MainContext.jsx\";//Material UI\nimport Button from\"@material-ui/core/Button\";import{makeStyles}from\"@material-ui/core/styles\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Grid from\"@material-ui/core/Grid\";import HighlightOffIcon from\"@material-ui/icons/HighlightOff\";import{Typography}from\"@material-ui/core\";import PublishIcon from\"@material-ui/icons/Publish\";import{Grid as GridDevExpress,Table,TableHeaderRow}from\"@devexpress/dx-react-grid-material-ui\";import Accordion from\"@material-ui/core/Accordion\";import AccordionSummary from\"@material-ui/core/AccordionSummary\";import AccordionDetails from\"@material-ui/core/AccordionDetails\";import ExpandMoreIcon from\"@material-ui/icons/ExpandMore\";// css theme\nvar useStyles=makeStyles(function(theme){return{root:{\"& > *\":{margin:theme.spacing(1)}},buttons:{borderColor:\"#005000\",color:\"#005000\",textTransform:\"none\",margin:20,height:30,width:120}};});var CsvUploadDialog=function CsvUploadDialog(){var classes=useStyles();var _useContext=useContext(MainContext),csv_upload_open=_useContext.csv_upload_open;var _csv_upload_open=_slicedToArray(csv_upload_open,2),csvUploadOpen=_csv_upload_open[0],setCsvUploadOpen=_csv_upload_open[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loaded=_useState2[0],setLoaded=_useState2[1];var handleClickOpen=function handleClickOpen(){setCsvUploadOpen(true);};var handleClose=function handleClose(){setCsvUploadOpen(false);};var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),columns=_useState4[0],setColumns=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];// process CSV data\nvar processData=function processData(dataString){var dataStringLines=dataString.split(/\\r\\n|\\n/);var headers=dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);var list=[];for(var i=1;i<dataStringLines.length;i++){var row=dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);if(headers&&row.length==headers.length){var obj={};for(var j=0;j<headers.length;j++){var d=row[j];if(d.length>0){if(d[0]=='\"')d=d.substring(1,d.length-1);if(d[d.length-1]=='\"')d=d.substring(d.length-2,1);}if(headers[j]){obj[headers[j]]=d;}}// remove the blank rows\nif(Object.values(obj).filter(function(x){return x;}).length>0){list.push(obj);}}}// prepare columns list from headers\nvar columns=headers.map(function(c){return{name:c,selector:c};});setData(list);setColumns(columns);setLoaded(true);};// handle file upload\nvar handleFileUpload=function handleFileUpload(e){var file=e.target.files[0];var reader=new FileReader();reader.onload=function(evt){/* Parse data */var bstr=evt.target.result;var wb=XLSX.read(bstr,{type:\"binary\"});/* Get first worksheet */var wsname=wb.SheetNames[0];var ws=wb.Sheets[wsname];/* Convert array of arrays */var data=XLSX.utils.sheet_to_csv(ws,{header:1});processData(data);};reader.readAsBinaryString(file);};var _useState7=useState([{name:\"colName\",title:\"Spaltenbezeichnung\"},{name:\"colDesc\",title:\"Spaltenbeschreibung\"},{name:\"colContent\",title:\"Spalteninhalt\"},{name:\"required\",title:\"Erforderlich\"}]),_useState8=_slicedToArray(_useState7,1),exampleColumns=_useState8[0];var _useState9=useState([{columnName:\"colName\",width:150},{columnName:\"colDesc\",width:400,wordWrapEnabled:true},{columnName:\"colContent\",width:150},{columnName:\"required\",width:100}]),_useState10=_slicedToArray(_useState9,1),tableColumnExtensions=_useState10[0];var _useState11=useState([{colName:\"id\",colDesc:\"Identifikation eine Komponente innerhalb der Stückliste\",colContent:\"Integer (Ganzzahl)\",required:\"Ja\"},{colName:\"parent_id\",colDesc:\"Zuordnung der Parentkomponente (deren id)\",colContent:\"Integer (Ganzzahl)\",required:\"Ja\"},{colName:\"mat_desc\",colDesc:\"Bezeichnung des Materials\",colContent:\"String (Text)\",required:\"Ja\"},{colName:\"is_atomic\",colDesc:\"Handelt es sich um eine Komponente der untersten Stufe? Falls ja, kann der Kompente ein Kunststoff zugeordnet werden. Falls nicht, können weitere Komponenten zugeordnet werden.\",colContent:\"1 (Ja) oder 0 (Nein)\",required:\"Ja\"},{colName:\"weight\",colDesc:\"Gewicht in g\",colContent:\"Float (Gleitkommazahl)\",required:\"Ja\"},{colName:\"mat_rw\",colDesc:\"Recycling-/Verträglichkeitswert\",colContent:\"Float (Gleitkommazahl)\",required:\"Nein\"},{colName:\"mat_id_int\",colDesc:\"Interne Materialnummer (z.B. aus ERP-System)\",colContent:\"String (Text)\",required:\"Nein\"},{colName:\"cad_id\",colDesc:\"Interne Materialnummer aus CAD-System\",colContent:\"String (Text)\",required:\"Nein\"},{colName:\"plast_desc\",colDesc:'Zugeordneter Kunststoff. Muss der Beschreibung in der Campus-Datenbank entsprechen (z.B. \"ACRYMID® TT50\").',colContent:\"String (Text)\",required:\"Nein\"},{colName:\"height\",colDesc:\"Höhe in mm\",colContent:\"Float (Gleitkommazahl)\",required:\"Nein\"},{colName:\"width\",colDesc:\"Breite in mm\",colContent:\"Float (Gleitkommazahl)\",required:\"Nein\"},{colName:\"depth\",colDesc:\"Tiefe in mm\",colContent:\"Float (Gleitkommazahl)\",required:\"Nein\"},{colName:\"volume\",colDesc:\"Volumen in mm^3\",colContent:\"Float (Gleitkommazahl)\",required:\"Nein\"}]),_useState12=_slicedToArray(_useState11,2),requiredData=_useState12[0],setRequiredData=_useState12[1];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{className:classes.buttons,onClick:handleClickOpen},/*#__PURE__*/React.createElement(PublishIcon,{style:{marginRight:5}}),\"Upload\"),/*#__PURE__*/React.createElement(Dialog,{open:csvUploadOpen,onClose:handleClose,\"aria-labelledby\":\"form-dialog-title\",fullWidth:true,maxWidth:\"md\"},/*#__PURE__*/React.createElement(\"div\",{style:{width:\"100%\"}},/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(HighlightOffIcon,{style:{color:\"#005000\"},onClick:handleClose})),/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},\"St\\xFCckliste uploaden\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(Typography,null,\"Bitte w\\xE4hlen Sie eine csv-Datei aus und achten Sie darauf, dass diese korrekt formatiert ist. Sie k\\xF6nnen auf \\\"Mehr anzeigen\\\" klicken, um Hilfe bei der Formatierung zu erhalten.\"),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,justify:\"center\",style:{marginTop:30,marginBottom:30}},/*#__PURE__*/React.createElement(Accordion,null,/*#__PURE__*/React.createElement(AccordionSummary,{expandIcon:/*#__PURE__*/React.createElement(ExpandMoreIcon,null),\"aria-controls\":\"panel1a-content\",id:\"panel1a-header\"},/*#__PURE__*/React.createElement(Typography,null,\"Mehr anzeigen\")),/*#__PURE__*/React.createElement(AccordionDetails,null,/*#__PURE__*/React.createElement(GridDevExpress,{rows:requiredData,columns:exampleColumns},/*#__PURE__*/React.createElement(Table,{columnExtensions:tableColumnExtensions}),/*#__PURE__*/React.createElement(TableHeaderRow,null))))),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,justify:\"center\"},/*#__PURE__*/React.createElement(\"div\",{style:{width:\"100%\"}},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",accept:\".csv,.xlsx,.xls\",onChange:handleFileUpload,style:{marginBottom:10}}))),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,justify:\"center\"},loaded?/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:20,marginBottom:20}},/*#__PURE__*/React.createElement(Typography,{style:{fontWeight:\"bold\"}},\"Vorschau\")):/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:20,marginBottom:20}})),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,justify:\"center\"},/*#__PURE__*/React.createElement(\"div\",{style:{width:\"100%\"}},/*#__PURE__*/React.createElement(GridDevExpress,{rows:data,columns:columns},/*#__PURE__*/React.createElement(Table,null),/*#__PURE__*/React.createElement(TableHeaderRow,null)))),/*#__PURE__*/React.createElement(Grid,{container:true,item:true,xs:12,justify:\"center\"},loaded?/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:20}},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){handleClose();},style:{borderColor:\"#005000\",color:\"#005000\",textTransform:\"none\",margin:20,height:30,width:120}},\"Upload\")):/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:20}},/*#__PURE__*/React.createElement(Button,{onClick:handleClose,style:{borderColor:\"#005000\",color:\"#005000\",textTransform:\"none\",margin:20,height:30,width:120}},\"Abbrechen\")))))));};export default CsvUploadDialog;","map":{"version":3,"sources":["/home/adrian/DiMOP/backend/frontend/src/views/Main/CsvUploadDialog.jsx"],"names":["React","useContext","useState","XLSX","MainContext","Button","makeStyles","Dialog","DialogActions","DialogContent","DialogTitle","Grid","HighlightOffIcon","Typography","PublishIcon","GridDevExpress","Table","TableHeaderRow","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","useStyles","theme","root","margin","spacing","buttons","borderColor","color","textTransform","height","width","CsvUploadDialog","classes","csv_upload_open","csvUploadOpen","setCsvUploadOpen","loaded","setLoaded","handleClickOpen","handleClose","columns","setColumns","data","setData","processData","dataString","dataStringLines","split","headers","list","i","length","row","obj","j","d","substring","Object","values","filter","x","push","map","c","name","selector","handleFileUpload","e","file","target","files","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_csv","header","readAsBinaryString","title","exampleColumns","columnName","wordWrapEnabled","tableColumnExtensions","colName","colDesc","colContent","required","requiredData","setRequiredData","marginRight","marginTop","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useContext, useState } from \"react\";\nimport * as XLSX from \"xlsx\";\n\n//Components\nimport { MainContext } from \"./MainContext.jsx\";\n\n//Material UI\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Grid from \"@material-ui/core/Grid\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { Typography } from \"@material-ui/core\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {\n  Grid as GridDevExpress,\n  Table,\n  TableHeaderRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\n// css theme\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  buttons: {\n    borderColor: \"#005000\",\n    color: \"#005000\",\n    textTransform: \"none\",\n    margin: 20,\n    height: 30,\n    width: 120,\n  },\n}));\n\nconst CsvUploadDialog = () => {\n  const classes = useStyles();\n\n  const { csv_upload_open } = useContext(MainContext);\n  const [csvUploadOpen, setCsvUploadOpen] = csv_upload_open;\n  const [loaded, setLoaded] = useState(false);\n\n  const handleClickOpen = () => {\n    setCsvUploadOpen(true);\n  };\n\n  const handleClose = () => {\n    setCsvUploadOpen(false);\n  };\n\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n\n  // process CSV data\n  const processData = (dataString) => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(\n      /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n    );\n\n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(\n        /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/\n      );\n      if (headers && row.length == headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] == '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] == '\"') d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        // remove the blank rows\n        if (Object.values(obj).filter((x) => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n\n    // prepare columns list from headers\n    const columns = headers.map((c) => ({\n      name: c,\n      selector: c,\n    }));\n\n    setData(list);\n    setColumns(columns);\n    setLoaded(true);\n  };\n\n  // handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: \"binary\" });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      processData(data);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const [exampleColumns] = useState([\n    { name: \"colName\", title: \"Spaltenbezeichnung\" },\n    { name: \"colDesc\", title: \"Spaltenbeschreibung\" },\n    { name: \"colContent\", title: \"Spalteninhalt\" },\n    { name: \"required\", title: \"Erforderlich\" },\n  ]);\n\n  const [tableColumnExtensions] = useState([\n    { columnName: \"colName\", width: 150 },\n    { columnName: \"colDesc\", width: 400, wordWrapEnabled: true },\n    { columnName: \"colContent\", width: 150 },\n    { columnName: \"required\", width: 100 },\n  ]);\n\n  const [requiredData, setRequiredData] = useState([\n    {\n      colName: \"id\",\n      colDesc: \"Identifikation eine Komponente innerhalb der Stückliste\",\n      colContent: \"Integer (Ganzzahl)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"parent_id\",\n      colDesc: \"Zuordnung der Parentkomponente (deren id)\",\n      colContent: \"Integer (Ganzzahl)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"mat_desc\",\n      colDesc: \"Bezeichnung des Materials\",\n      colContent: \"String (Text)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"is_atomic\",\n      colDesc:\n        \"Handelt es sich um eine Komponente der untersten Stufe? Falls ja, kann der Kompente ein Kunststoff zugeordnet werden. Falls nicht, können weitere Komponenten zugeordnet werden.\",\n      colContent: \"1 (Ja) oder 0 (Nein)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"weight\",\n      colDesc: \"Gewicht in g\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Ja\",\n    },\n    {\n      colName: \"mat_rw\",\n      colDesc: \"Recycling-/Verträglichkeitswert\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"mat_id_int\",\n      colDesc: \"Interne Materialnummer (z.B. aus ERP-System)\",\n      colContent: \"String (Text)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"cad_id\",\n      colDesc: \"Interne Materialnummer aus CAD-System\",\n      colContent: \"String (Text)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"plast_desc\",\n      colDesc:\n        'Zugeordneter Kunststoff. Muss der Beschreibung in der Campus-Datenbank entsprechen (z.B. \"ACRYMID® TT50\").',\n      colContent: \"String (Text)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"height\",\n      colDesc: \"Höhe in mm\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"width\",\n      colDesc: \"Breite in mm\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"depth\",\n      colDesc: \"Tiefe in mm\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n    {\n      colName: \"volume\",\n      colDesc: \"Volumen in mm^3\",\n      colContent: \"Float (Gleitkommazahl)\",\n      required: \"Nein\",\n    },\n  ]);\n\n  return (\n    <div>\n      <Button className={classes.buttons} onClick={handleClickOpen}>\n        <PublishIcon style={{ marginRight: 5 }}></PublishIcon>\n        Upload\n      </Button>\n      <Dialog\n        open={csvUploadOpen}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={true}\n        maxWidth={\"md\"}\n      >\n        <div style={{ width: \"100%\" }}>\n          <DialogActions>\n            <HighlightOffIcon\n              style={{ color: \"#005000\" }}\n              onClick={handleClose}\n            ></HighlightOffIcon>\n          </DialogActions>\n          <DialogTitle id=\"form-dialog-title\">Stückliste uploaden</DialogTitle>\n          <DialogContent>\n            <Typography>\n              Bitte wählen Sie eine csv-Datei aus und achten Sie darauf, dass\n              diese korrekt formatiert ist. Sie können auf \"Mehr anzeigen\"\n              klicken, um Hilfe bei der Formatierung zu erhalten.\n            </Typography>\n\n            <Grid\n              container\n              item\n              xs={12}\n              justify=\"center\"\n              style={{ marginTop: 30, marginBottom: 30 }}\n            >\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>Mehr anzeigen</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <GridDevExpress rows={requiredData} columns={exampleColumns}>\n                    <Table columnExtensions={tableColumnExtensions} />\n                    <TableHeaderRow />\n                  </GridDevExpress>\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              <div style={{ width: \"100%\" }}>\n                <input\n                  type=\"file\"\n                  accept=\".csv,.xlsx,.xls\"\n                  onChange={handleFileUpload}\n                  style={{ marginBottom: 10 }}\n                />\n              </div>\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              {loaded ? (\n                <div style={{ marginTop: 20, marginBottom: 20 }}>\n                  <Typography style={{ fontWeight: \"bold\" }}>\n                    Vorschau\n                  </Typography>\n                </div>\n              ) : (\n                <div style={{ marginTop: 20, marginBottom: 20 }} />\n              )}\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              <div style={{ width: \"100%\" }}>\n                <GridDevExpress rows={data} columns={columns}>\n                  <Table />\n                  <TableHeaderRow />\n                </GridDevExpress>\n              </div>\n            </Grid>\n\n            <Grid container item xs={12} justify=\"center\">\n              {loaded ? (\n                <div style={{ marginTop: 20 }}>\n                  <Button\n                    onClick={() => {\n                      handleClose();\n                    }}\n                    style={{\n                      borderColor: \"#005000\",\n                      color: \"#005000\",\n                      textTransform: \"none\",\n                      margin: 20,\n                      height: 30,\n                      width: 120,\n                    }}\n                  >\n                    Upload\n                  </Button>\n                </div>\n              ) : (\n                <div style={{ marginTop: 20 }}>\n                  <Button\n                    onClick={handleClose}\n                    style={{\n                      borderColor: \"#005000\",\n                      color: \"#005000\",\n                      textTransform: \"none\",\n                      margin: 20,\n                      height: 30,\n                      width: 120,\n                    }}\n                  >\n                    Abbrechen\n                  </Button>\n                </div>\n              )}\n            </Grid>\n          </DialogContent>\n        </div>\n      </Dialog>\n    </div>\n  );\n};\nexport default CsvUploadDialog;\n"]},"metadata":{},"sourceType":"module"}