{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { handleResponse } from \"../helpers/handle-response\";\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"currentUser\")));\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(username, password) {\n  console.log(JSON.stringify({\n    username,\n    password\n  }));\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n  return fetch(`http://127.0.0.1:5000/auth`, requestOptions).then(handleResponse).then(user => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    console.log(JSON.stringify(user));\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"currentUser\");\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["/home/adrian/DIMOP/dimop_frontend/src/services/authenticationService.jsx"],"names":["BehaviorSubject","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","username","password","console","log","stringify","requestOptions","method","headers","body","fetch","then","user","setItem","next","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,MAAMC,kBAAkB,GAAG,IAAIF,eAAJ,CACzBG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADyB,CAA3B;AAIA,OAAO,MAAMC,qBAAqB,GAAG;AACnCC,EAAAA,KADmC;AAEnCC,EAAAA,MAFmC;AAGnCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHsB;;AAInC,MAAIC,gBAAJ,GAAuB;AACrB,WAAOV,kBAAkB,CAACW,KAA1B;AACD;;AANkC,CAA9B;;AASP,SAASL,KAAT,CAAeM,QAAf,EAAyBC,QAAzB,EAAmC;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACe,SAAL,CAAe;AAAEJ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAf,CAAZ;AACA,QAAMI,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEnB,IAAI,CAACe,SAAL,CAAe;AAAEJ,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf;AAHe,GAAvB;AAMA,SAAOQ,KAAK,CAAE,4BAAF,EAA+BJ,cAA/B,CAAL,CACJK,IADI,CACCvB,cADD,EAEJuB,IAFI,CAEEC,IAAD,IAAU;AACd;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACe,SAAL,CAAeO,IAAf,CAAZ;AACApB,IAAAA,YAAY,CAACqB,OAAb,CAAqB,aAArB,EAAoCvB,IAAI,CAACe,SAAL,CAAeO,IAAf,CAApC;AACAvB,IAAAA,kBAAkB,CAACyB,IAAnB,CAAwBF,IAAxB;AAEA,WAAOA,IAAP;AACD,GATI,CAAP;AAUD;;AAED,SAAShB,MAAT,GAAkB;AAChB;AACAJ,EAAAA,YAAY,CAACuB,UAAb,CAAwB,aAAxB;AACA1B,EAAAA,kBAAkB,CAACyB,IAAnB,CAAwB,IAAxB;AACD","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\nimport { handleResponse } from \"../helpers/handle-response\";\n\nconst currentUserSubject = new BehaviorSubject(\n  JSON.parse(localStorage.getItem(\"currentUser\"))\n);\n\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n  get currentUserValue() {\n    return currentUserSubject.value;\n  },\n};\n\nfunction login(username, password) {\n  console.log(JSON.stringify({ username, password }));\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, password }),\n  };\n\n  return fetch(`http://127.0.0.1:5000/auth`, requestOptions)\n    .then(handleResponse)\n    .then((user) => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      console.log(JSON.stringify(user));\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\n      currentUserSubject.next(user);\n\n      return user;\n    });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"currentUser\");\n  currentUserSubject.next(null);\n}\n"]},"metadata":{},"sourceType":"module"}